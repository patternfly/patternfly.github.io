{"data":{"mdx":{"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Table\",\n  \"cssPrefix\": \"pf-c-table\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Note: Table lives in its own package at \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.npmjs.com/package/@patternfly/react-table\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"@patternfly/react-table\")), \"!\"), mdx(\"h2\", {\n    \"id\": \"simple-table\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#simple-table\",\n    \"aria-label\": \"simple table permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Simple table\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport {\\n  Table,\\n  TableHeader,\\n  TableBody,\\n  sortable,\\n  SortByDirection,\\n  headerCol,\\n  TableVariant,\\n  expandable,\\n  cellWidth,\\n  textCenter,\\n} from '@patternfly/react-table';\\n\\nclass SimpleTable extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      columns: [\\n        { title: 'Repositories' },\\n        'Branches',\\n        { title: 'Pull requests' },\\n        'Workspaces',\\n        {\\n          title: 'Last Commit',\\n          transforms: [textCenter],\\n          cellTransforms: [textCenter]\\n        }\\n      ],\\n      rows: [\\n        ['one', 'two', 'three', 'four', 'five'],\\n        [\\n          {\\n            title: <div>one - 2</div>,\\n            props: { title: 'hover title', colSpan: 3 }\\n          },\\n          'four - 2',\\n          'five - 2'\\n        ],\\n        [\\n          'one - 3',\\n          'two - 3',\\n          'three - 3',\\n          'four - 3',\\n          {\\n            title: 'five - 3 (not centered)',\\n            props: { textCenter: false }\\n          }\\n        ]\\n      ]\\n    };\\n  }\\n\\n  render() {\\n    const { columns, rows } = this.state;\\n\\n    return (\\n      <Table caption=\\\"Simple Table\\\" cells={columns} rows={rows}>\\n        <TableHeader />\\n        <TableBody />\\n      </Table>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"sortable-table\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#sortable-table\",\n    \"aria-label\": \"sortable table permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Sortable table\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport {\\n  Table,\\n  TableHeader,\\n  TableBody,\\n  sortable,\\n  SortByDirection,\\n  headerCol,\\n  TableVariant,\\n  expandable,\\n  cellWidth\\n} from '@patternfly/react-table';\\n\\nclass SortableTable extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      columns: [\\n        { title: 'Repositories', transforms: [sortable] },\\n        'Branches',\\n        { title: 'Pull requests', transforms: [sortable] },\\n        'Workspaces',\\n        'Last Commit'\\n      ],\\n      rows: [['one', 'two', 'a', 'four', 'five'], ['a', 'two', 'k', 'four', 'five'], ['p', 'two', 'b', 'four', 'five']],\\n      sortBy: {}\\n    };\\n    this.onSort = this.onSort.bind(this);\\n  }\\n\\n  onSort(_event, index, direction) {\\n    const sortedRows = this.state.rows.sort((a, b) => (a[index] < b[index] ? -1 : a[index] > b[index] ? 1 : 0));\\n    this.setState({\\n      sortBy: {\\n        index,\\n        direction\\n      },\\n      rows: direction === SortByDirection.asc ? sortedRows : sortedRows.reverse()\\n    });\\n  }\\n\\n  render() {\\n    const { columns, rows, sortBy } = this.state;\\n\\n    return (\\n      <Table caption=\\\"Sortable Table\\\" sortBy={sortBy} onSort={this.onSort} cells={columns} rows={rows}>\\n        <TableHeader />\\n        <TableBody />\\n      </Table>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"selectable-table\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#selectable-table\",\n    \"aria-label\": \"selectable table permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Selectable table\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport {\\n  Table,\\n  TableHeader,\\n  TableBody,\\n  sortable,\\n  SortByDirection,\\n  headerCol,\\n  TableVariant,\\n  expandable,\\n  cellWidth\\n} from '@patternfly/react-table';\\n\\nclass SelectableTable extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      columns: [\\n        { title: 'Repositories', cellTransforms: [headerCol()] },\\n        'Branches',\\n        { title: 'Pull requests' },\\n        'Workspaces',\\n        'Last Commit'\\n      ],\\n      rows: [\\n        {\\n          cells: ['one', 'two', 'a', 'four', 'five']\\n        },\\n        {\\n          cells: ['a', 'two', 'k', 'four', 'five']\\n        },\\n        {\\n          cells: ['p', 'two', 'b', 'four', 'five']\\n        }\\n      ]\\n    };\\n    this.onSelect = this.onSelect.bind(this);\\n  }\\n\\n  onSelect(event, isSelected, rowId) {\\n    let rows;\\n    if (rowId === -1) {\\n      rows = this.state.rows.map(oneRow => {\\n        oneRow.selected = isSelected;\\n        return oneRow;\\n      });\\n    } else {\\n      rows = [...this.state.rows];\\n      rows[rowId].selected = isSelected;\\n    }\\n    this.setState({\\n      rows\\n    });\\n  }\\n\\n  render() {\\n    const { columns, rows } = this.state;\\n\\n    return (\\n      <Table caption=\\\"Selectable Table\\\" onSelect={this.onSelect} cells={columns} rows={rows}>\\n        <TableHeader />\\n        <TableBody />\\n      </Table>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"simple-actions-table\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#simple-actions-table\",\n    \"aria-label\": \"simple actions table permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Simple actions table\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport {\\n  Table,\\n  TableHeader,\\n  TableBody,\\n  sortable,\\n  SortByDirection,\\n  headerCol,\\n  TableVariant,\\n  expandable,\\n  cellWidth\\n} from '@patternfly/react-table';\\n\\nclass SimpleActionsTable extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      columns: [\\n        { title: 'Repositories', cellTransforms: [headerCol()] },\\n        'Branches',\\n        { title: 'Pull requests' },\\n        'Workspaces',\\n        'Last Commit'\\n      ],\\n      rows: [\\n        {\\n          cells: ['one', 'two', 'a', 'four', 'five']\\n        },\\n        {\\n          cells: ['a', 'two', 'k', 'four', 'five']\\n        },\\n        {\\n          cells: ['p', 'two', 'b', 'four', 'five'],\\n          disableActions: true\\n        }\\n      ],\\n      actions: [\\n        {\\n          title: 'Some action',\\n          onClick: (event, rowId, rowData, extra) => console.log('clicked on Some action, on row: ', rowId)\\n        },\\n        {\\n          title: <div>Another action</div>,\\n          onClick: (event, rowId, rowData, extra) => console.log('clicked on Another action, on row: ', rowId)\\n        },\\n        {\\n          isSeparator: true\\n        },\\n        {\\n          title: 'Third action',\\n          onClick: (event, rowId, rowData, extra) => console.log('clicked on Third action, on row: ', rowId)\\n        }\\n      ]\\n    };\\n  }\\n\\n  render() {\\n    const { columns, rows, actions } = this.state;\\n    return (\\n      <Table caption=\\\"Actions Table\\\" actions={actions} cells={columns} rows={rows}>\\n        <TableHeader />\\n        <TableBody />\\n      </Table>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"actions-table\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#actions-table\",\n    \"aria-label\": \"actions table permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Actions table\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport {\\n  Table,\\n  TableHeader,\\n  TableBody,\\n  sortable,\\n  SortByDirection,\\n  headerCol,\\n  TableVariant,\\n  expandable,\\n  cellWidth\\n} from '@patternfly/react-table';\\n\\nclass ActionsTable extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      columns: [\\n        { title: 'Repositories', cellTransforms: [headerCol()] },\\n        'Branches',\\n        { title: 'Pull requests' },\\n        'Workspaces',\\n        'Last Commit'\\n      ],\\n      rows: [\\n        {\\n          cells: ['one', 'two', 'a', 'four', 'five'],\\n          type: 'green'\\n        },\\n        {\\n          cells: ['a', 'two', 'k', 'four', 'five']\\n        },\\n        {\\n          cells: ['p', 'two', 'b', 'four', 'five'],\\n          type: 'blue'\\n        },\\n        {\\n          cells: ['5', '2', 'b', 'four', 'five']\\n        }\\n      ]\\n    };\\n  }\\n\\n  actionResolver(rowData, { rowIndex }) {\\n    if (rowIndex === 1) {\\n      return null;\\n    }\\n\\n    const thirdAction =\\n      rowData.type === 'blue'\\n        ? [\\n            {\\n              isSeparator: true\\n            },\\n            {\\n              title: 'Third action',\\n              onClick: (event, rowId, rowData, extra) =>\\n                console.log(`clicked on Third action, on row ${rowId} of type ${rowData.type}`)\\n            }\\n          ]\\n        : [];\\n\\n    return [\\n      {\\n        title: 'Some action',\\n        onClick: (event, rowId, rowData, extra) =>\\n          console.log(`clicked on Some action, on row ${rowId} of type ${rowData.type}`)\\n      },\\n      {\\n        title: <div>Another action</div>,\\n        onClick: (event, rowId, rowData, extra) =>\\n          console.log(`clicked on Another action, on row ${rowId} of type ${rowData.type}`)\\n      },\\n      ...thirdAction\\n    ];\\n  }\\n\\n  areActionsDisabled(rowData, { rowIndex }) {\\n    return rowIndex === 3;\\n  }\\n\\n  render() {\\n    const { columns, rows } = this.state;\\n    return (\\n      <Table\\n        caption=\\\"Actions Table\\\"\\n        cells={columns}\\n        rows={rows}\\n        actionResolver={this.actionResolver}\\n        areActionsDisabled={this.areActionsDisabled}\\n      >\\n        <TableHeader />\\n        <TableBody />\\n      </Table>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"first-cell-as-header-table\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#first-cell-as-header-table\",\n    \"aria-label\": \"first cell as header table permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"First cell as header table\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport {\\n  Table,\\n  TableHeader,\\n  TableBody,\\n  sortable,\\n  SortByDirection,\\n  headerCol,\\n  TableVariant,\\n  expandable,\\n  cellWidth\\n} from '@patternfly/react-table';\\n\\nclass CellHeader extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      columns: [\\n        { title: 'Header cell', cellTransforms: [headerCol('selectable')] },\\n        'Branches',\\n        { title: 'Pull requests' },\\n        'Workspaces',\\n        'Last Commit'\\n      ],\\n      rows: [['one', 'two', 'three', 'four', 'five']]\\n    };\\n  }\\n\\n  render() {\\n    const { columns, rows } = this.state;\\n\\n    return (\\n      <Table caption=\\\"First cell as Header\\\" rows={rows} cells={columns}>\\n        <TableHeader />\\n        <TableBody />\\n      </Table>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"compact-table\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#compact-table\",\n    \"aria-label\": \"compact table permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Compact table\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport {\\n  Table,\\n  TableHeader,\\n  TableBody,\\n  sortable,\\n  SortByDirection,\\n  headerCol,\\n  TableVariant,\\n  expandable,\\n  cellWidth\\n} from '@patternfly/react-table';\\n\\nclass CompactTable extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      columns: [\\n        { title: 'Header cell' },\\n        'Branches',\\n        { title: 'Pull requests', props: { className: 'pf-u-text-align-center' } },\\n        '' // deliberately empty\\n      ],\\n      rows: [['one', 'two', 'three', 'four'], ['one', 'two', 'three', 'four'], ['one', 'two', 'three', 'four']]\\n    };\\n  }\\n\\n  render() {\\n    const { columns, rows } = this.state;\\n\\n    return (\\n      <Table caption=\\\"Compact Table\\\" variant={TableVariant.compact} cells={columns} rows={rows}>\\n        <TableHeader />\\n        <TableBody />\\n      </Table>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"compact-table-borderless-rows\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#compact-table-borderless-rows\",\n    \"aria-label\": \"compact table borderless rows permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Compact table borderless rows\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport {\\n  Table,\\n  TableHeader,\\n  TableBody,\\n  sortable,\\n  SortByDirection,\\n  headerCol,\\n  TableVariant,\\n  expandable,\\n  cellWidth\\n} from '@patternfly/react-table';\\n\\nclass CompactTable extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      columns: [\\n        { title: 'Header cell' },\\n        'Branches',\\n        { title: 'Pull requests', props: { className: 'pf-u-text-align-center' } },\\n        '' // deliberately empty\\n      ],\\n      rows: [['one', 'two', 'three', 'four'], ['one', 'two', 'three', 'four'], ['one', 'two', 'three', 'four']]\\n    };\\n  }\\n\\n  render() {\\n    const { columns, rows } = this.state;\\n\\n    return (\\n      <Table\\n        caption=\\\"Compact Table with border\\\"\\n        variant={TableVariant.compact}\\n        borders={false}\\n        cells={columns}\\n        rows={rows}\\n      >\\n        <TableHeader />\\n        <TableBody />\\n      </Table>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"compact-expandable-table\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#compact-expandable-table\",\n    \"aria-label\": \"compact expandable table permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Compact expandable table\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport {\\n  Table,\\n  TableHeader,\\n  TableBody,\\n  sortable,\\n  SortByDirection,\\n  headerCol,\\n  TableVariant,\\n  expandable,\\n  cellWidth\\n} from '@patternfly/react-table';\\n\\nclass CompactExpandableTable extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      columns: [\\n        {\\n          title: 'Header cell',\\n          cellFormatters: [expandable]\\n        },\\n        'Branches',\\n        { title: 'Pull requests' },\\n        '' // deliberately empty\\n      ],\\n      rows: [\\n        {\\n          cells: ['one', 'two', 'three', 'four']\\n        },\\n        {\\n          isOpen: true,\\n          cells: ['parent - 1', 'two', 'three', 'four']\\n        },\\n        {\\n          parent: 1,\\n          fullWidth: true,\\n          cells: ['child - 1']\\n        },\\n        {\\n          isOpen: false,\\n          cells: ['parent - 2', 'two', 'three', 'four']\\n        },\\n        {\\n          parent: 3,\\n          cells: ['child - 2']\\n        },\\n        {\\n          isOpen: false,\\n          cells: ['parent - 3', 'two', 'three', 'four']\\n        },\\n        {\\n          parent: 5,\\n          fullWidth: true,\\n          noPadding: true,\\n          cells: ['child - 3']\\n        }\\n      ]\\n    };\\n    this.onCollapse = this.onCollapse.bind(this);\\n  }\\n\\n  onCollapse(event, rowKey, isOpen) {\\n    const { rows } = this.state;\\n    /**\\n     * Please do not use rowKey as row index for more complex tables.\\n     * Rather use some kind of identifier like ID passed with each row.\\n     */\\n    rows[rowKey].isOpen = isOpen;\\n    this.setState({\\n      rows\\n    });\\n  }\\n\\n  render() {\\n    const { columns, rows } = this.state;\\n\\n    return (\\n      <Table\\n        caption=\\\"Compact expandable table\\\"\\n        variant={TableVariant.compact}\\n        onCollapse={this.onCollapse}\\n        rows={rows}\\n        cells={columns}\\n      >\\n        <TableHeader />\\n        <TableBody />\\n      </Table>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"table-with-width-modifiers\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#table-with-width-modifiers\",\n    \"aria-label\": \"table with width modifiers permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Table with width modifiers\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport {\\n  Table,\\n  TableHeader,\\n  TableBody,\\n  sortable,\\n  SortByDirection,\\n  headerCol,\\n  TableVariant,\\n  expandable,\\n  cellWidth\\n} from '@patternfly/react-table';\\n\\nclass WidthTable extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      columns: [\\n        { title: 'Header cell', transforms: [cellWidth(10)] },\\n        'Branches',\\n        { title: 'Pull requests', transforms: [cellWidth(30)] },\\n        'Workspaces',\\n        {\\n          title: 'Last Commit',\\n          transforms: [cellWidth('max')]\\n        }\\n      ],\\n      rows: [['one', 'two', 'three', 'four', 'five']]\\n    };\\n  }\\n\\n  render() {\\n    const { columns, rows } = this.state;\\n\\n    return (\\n      <Table caption=\\\"Table with Width Modifiers\\\" cells={columns} rows={rows}>\\n        <TableHeader />\\n        <TableBody />\\n      </Table>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"table-with-hiddenvisible-breakpoint-modifiers\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#table-with-hiddenvisible-breakpoint-modifiers\",\n    \"aria-label\": \"table with hiddenvisible breakpoint modifiers permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Table with hidden/visible breakpoint modifiers\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport {\\n  Table,\\n  TableHeader,\\n  TableBody,\\n  sortable,\\n  SortByDirection,\\n  headerCol,\\n  TableVariant,\\n  expandable,\\n  cellWidth,\\n  classNames,\\n  Visibility\\n} from '@patternfly/react-table';\\n\\nclass HiddenVisibleBreakpointTable extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      columns: [\\n        {\\n          title: 'Repositories',\\n          columnTransforms: [classNames(Visibility.hidden, Visibility.visibleOnMd, Visibility.hiddenOnLg)]\\n        },\\n        'Branches',\\n        {\\n          title: 'Pull requests',\\n          columnTransforms: [classNames(Visibility.hiddenOnMd, Visibility.visibleOnLg)]\\n        },\\n        'Workspaces',\\n        {\\n          title: 'Last Commit',\\n          columnTransforms: [classNames(Visibility.hidden, Visibility.visibleOnSm)]\\n        }\\n      ],\\n      rows: [\\n        ['Visible only on md breakpoint', '10', 'Hidden only on md breakpoint', '5', 'Hidden on xs breakpoint'],\\n        ['Repository 2', '10', '25', '5', '2 days ago'],\\n        ['Repository 3', '10', '25', '5', '2 days ago'],\\n        ['Repository 4', '10', '25', '5', '2 days ago']\\n      ]\\n    };\\n  }\\n\\n  render() {\\n    const { columns, rows } = this.state;\\n\\n    return (\\n      <Table caption=\\\"Table with hidden/visible breakpoint modifiers\\\" cells={columns} rows={rows}>\\n        <TableHeader />\\n        <TableBody />\\n      </Table>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"collapsible-table\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#collapsible-table\",\n    \"aria-label\": \"collapsible table permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Collapsible table\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport {\\n  Table,\\n  TableHeader,\\n  TableBody,\\n  sortable,\\n  SortByDirection,\\n  headerCol,\\n  TableVariant,\\n  expandable,\\n  cellWidth\\n} from '@patternfly/react-table';\\n\\nclass CollapsibleTable extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      columns: [\\n        {\\n          title: 'Header cell',\\n          cellFormatters: [expandable],\\n          cellTransforms: [headerCol()]\\n        },\\n        'Branches',\\n        { title: 'Pull requests' },\\n        'Workspaces',\\n        {\\n          title: 'Last Commit'\\n        }\\n      ],\\n      rows: [\\n        {\\n          cells: ['one', 'two', 'three', 'four', 'five']\\n        },\\n        {\\n          isOpen: true,\\n          cells: ['parent - 1', 'two', 'three', 'four', 'five']\\n        },\\n        {\\n          parent: 1,\\n          fullWidth: true,\\n          cells: ['child - 1']\\n        },\\n        {\\n          isOpen: false,\\n          cells: ['parent - 2', 'two', 'three', 'four', 'five']\\n        },\\n        {\\n          parent: 3,\\n          cells: ['child - 2']\\n        },\\n        {\\n          isOpen: false,\\n          cells: ['parent - 3', 'two', 'three', 'four', 'five']\\n        },\\n        {\\n          parent: 5,\\n          fullWidth: true,\\n          noPadding: true,\\n          cells: ['child - 3']\\n        }\\n      ]\\n    };\\n    this.onCollapse = this.onCollapse.bind(this);\\n  }\\n\\n  onCollapse(event, rowKey, isOpen) {\\n    const { rows } = this.state;\\n    /**\\n     * Please do not use rowKey as row index for more complex tables.\\n     * Rather use some kind of identifier like ID passed with each row.\\n     */\\n    rows[rowKey].isOpen = isOpen;\\n    this.setState({\\n      rows\\n    });\\n  }\\n\\n  render() {\\n    const { columns, rows } = this.state;\\n\\n    return (\\n      <Table caption=\\\"Collapsible table\\\" onCollapse={this.onCollapse} rows={rows} cells={columns}>\\n        <TableHeader />\\n        <TableBody />\\n      </Table>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"compound-expandable-table\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#compound-expandable-table\",\n    \"aria-label\": \"compound expandable table permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Compound Expandable table\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport {\\n  Table,\\n  TableHeader,\\n  TableBody,\\n  compoundExpand\\n} from '@patternfly/react-table';\\n\\nimport {\\n  CodeBranchIcon,\\n  CodeIcon,\\n  CubeIcon\\n} from '@patternfly/react-icons';\\n\\nimport DemoSortableTable from './demo/DemoSortableTable';\\n\\nclass CompoundExpandableTable extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      columns: [\\n        'Repositories',\\n        {\\n          title: 'Branches',\\n          cellTransforms: [compoundExpand]\\n        },\\n        {\\n          title: 'Pull requests',\\n          cellTransforms: [compoundExpand]\\n        },\\n        {\\n          title: 'Workspaces',\\n          cellTransforms: [compoundExpand]\\n        },\\n        'Last Commit',\\n        ''\\n      ],\\n      rows: [\\n        {\\n          isOpen: true,\\n          cells: [\\n            { title: <a href=\\\"#\\\">siemur/test-space</a>, props: { component: 'th'} },\\n            {\\n              title: (\\n                <React.Fragment>\\n                  <CodeBranchIcon key=\\\"icon\\\" /> 10\\n                </React.Fragment>\\n              ),\\n              props: { isOpen: true, ariaControls : 'compoound-expansion-table-1' }\\n            },\\n            {\\n              title: (\\n                <React.Fragment>\\n                  <CodeIcon key=\\\"icon\\\" /> 4\\n                </React.Fragment>\\n              ),\\n              props: { isOpen: false, ariaControls : 'compoound-expansion-table-2' }\\n            },\\n            {\\n              title: (\\n                <React.Fragment>\\n                  <CubeIcon key=\\\"icon\\\" /> 4\\n                </React.Fragment>\\n              ),\\n              props: { isOpen: false, ariaControls : 'compoound-expansion-table-3' }\\n            },\\n            '20 minutes',\\n            { title: <a href=\\\"#\\\">Open in Github</a> }\\n          ]\\n        },\\n        {\\n          parent: 0,\\n          compoundParent: 1,\\n          cells: [\\n            { \\n              title: <DemoSortableTable firstColumnRows={['parent-0', 'compound-1', 'three', 'four','five']} id=\\\"compoound-expansion-table-1\\\" />,\\n              props: { colSpan: 6, className: 'pf-m-no-padding' }\\n            }\\n          ]\\n        },\\n        {\\n          parent: 0,\\n          compoundParent: 2,\\n          cells: [\\n            { \\n              title: <DemoSortableTable firstColumnRows={['parent-0', 'compound-2', 'three', 'four','five']} id=\\\"compoound-expansion-table-2\\\" />, \\n              props: { colSpan: 6, className: 'pf-m-no-padding' }\\n            }\\n          ]\\n        },\\n        {\\n          parent: 0,\\n          compoundParent: 3,\\n          cells: [\\n            { \\n              title: <DemoSortableTable firstColumnRows={['parent-0', 'compound-3', 'three', 'four','five']} id=\\\"compoound-expansion-table-3\\\" />, \\n              props: { colSpan: 6, className: 'pf-m-no-padding' }\\n            }\\n          ]\\n        },\\n        {\\n          isOpen: false,\\n          cells: [\\n            { title: <a href=\\\"#\\\">siemur/test-space</a>, props: { component: 'th'} },\\n            {\\n              title: (\\n                <React.Fragment>\\n                  <CodeBranchIcon key=\\\"icon\\\" /> 3\\n                </React.Fragment>\\n              ),\\n              props: { isOpen: false, ariaControls : 'compoound-expansion-table-4' }\\n            },\\n            {\\n              title: (\\n                <React.Fragment>\\n                  <CodeIcon key=\\\"icon\\\" /> 4\\n                </React.Fragment>\\n              ),\\n              props: { isOpen: false, ariaControls : 'compoound-expansion-table-5' }\\n            },\\n            {\\n              title: (\\n                <React.Fragment>\\n                  <CubeIcon key=\\\"icon\\\" /> 2\\n                </React.Fragment>\\n              ),\\n              props: { isOpen: false, ariaControls : 'compoound-expansion-table-6' }\\n            },\\n            '20 minutes',\\n            { title: <a href=\\\"#\\\">Open in Github</a> }\\n          ]\\n        },\\n        {\\n          parent: 4,\\n          compoundParent: 1,\\n          cells: [\\n            { \\n              title: <DemoSortableTable firstColumnRows={['parent-4', 'compound-1', 'three', 'four','five']} id=\\\"compoound-expansion-table-4\\\" />, \\n              props: { colSpan: 6, className: 'pf-m-no-padding' }\\n            }\\n          ]\\n        },\\n        {\\n          parent: 4,\\n          compoundParent: 2,\\n          cells: [\\n            { \\n              title: <DemoSortableTable firstColumnRows={['parent-4', 'compound-2', 'three', 'four','five']} id=\\\"compoound-expansion-table-5\\\"/>, \\n              props: { colSpan: 6, className: 'pf-m-no-padding' }\\n            }\\n          ]\\n        },\\n        {\\n          parent: 4,\\n          compoundParent: 3,\\n          cells: [\\n            { \\n              title: <DemoSortableTable firstColumnRows={['parent-4', 'compound-3', 'three', 'four','five']} id=\\\"compoound-expansion-table-6\\\"/>, \\n              props: { colSpan: 6, className: 'pf-m-no-padding' }\\n            }\\n          ]\\n        }\\n      ]\\n    };\\n    this.onExpand = this.onExpand.bind(this);\\n  }\\n\\n  onExpand(event, rowIndex, colIndex, isOpen, rowData, extraData) {\\n    const { rows } = this.state;\\n    if (!isOpen) {\\n      //set all other expanded cells false in this row if we are expanding\\n      rows[rowIndex].cells.forEach(cell => {\\n        if (cell.props) cell.props.isOpen = false;\\n      });\\n      rows[rowIndex].cells[colIndex].props.isOpen = true;\\n      rows[rowIndex].isOpen = true;\\n    } else {\\n      rows[rowIndex].cells[colIndex].props.isOpen = false;\\n      rows[rowIndex].isOpen = rows[rowIndex].cells.some(cell => cell.props && cell.props.isOpen);\\n    }\\n    this.setState({\\n      rows\\n    });\\n  }\\n\\n  render() {\\n    const { columns, rows } = this.state;\\n\\n    return (\\n      <Table caption=\\\"Compound expandable table\\\" onExpand={this.onExpand} rows={rows} cells={columns}>\\n        <TableHeader />\\n        <TableBody />\\n      </Table>\\n    );\\n  }\\n}\\n\")));\n}\nMDXContent.isMDXComponent = true;"},"frontmatter":{"title":"Table","section":null,"cssPrefix":"pf-c-table"}},"metadata":{"edges":[{"node":{"path":"src/components/Table/ActionsColumn.js","name":"ActionsColumn","description":"","props":[{"name":"children","description":"","required":false,"type":{"name":"node"},"defaultValue":{"value":"null"}},{"name":"items","description":"","required":false,"type":{"name":"array"},"defaultValue":{"value":"[]"}},{"name":"isDisabled","description":"","required":false,"type":{"name":"bool"},"defaultValue":{"value":"false"}},{"name":"dropdownPosition","description":"","required":false,"type":{"name":"enum"},"defaultValue":{"value":"DropdownPosition.right"}},{"name":"dropdownDirection","description":"","required":false,"type":{"name":"enum"},"defaultValue":{"value":"DropdownDirection.down"}},{"name":"rowData","description":"","required":false,"type":{"name":"object"},"defaultValue":{"value":"{}"}},{"name":"extraData","description":"","required":false,"type":{"name":"shape"},"defaultValue":{"value":"{}"}}]}},{"node":{"path":"src/components/Table/Body.js","name":"TableBody","description":"","props":[{"name":"className","description":"Additional classes for table body.","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"rowKey","description":"Specify key which should be used for labeling each row.","required":false,"type":{"name":"string"},"defaultValue":{"value":"'id'"}},{"name":"onRowClick","description":"Function that is fired when user clicks on row.","required":false,"type":{"name":"func"},"defaultValue":{"value":"() => undefined"}}]}},{"node":{"path":"src/components/Table/BodyCell.js","name":"BodyCell","description":"","props":[{"name":"data-label","description":"","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"className","description":"","required":false,"type":{"name":"string"},"defaultValue":{"value":"undefined"}},{"name":"colSpan","description":"","required":false,"type":{"name":"number"},"defaultValue":{"value":"undefined"}},{"name":"component","description":"","required":false,"type":{"name":"node"},"defaultValue":{"value":"'td'"}},{"name":"isVisible","description":"","required":false,"type":{"name":"bool"},"defaultValue":{"value":"undefined"}},{"name":"parentId","description":"","required":false,"type":{"name":"number"},"defaultValue":{"value":"undefined"}},{"name":"textCenter","description":"","required":false,"type":{"name":"bool"},"defaultValue":{"value":"false"}},{"name":"isOpen","description":"","required":false,"type":{"name":"bool"},"defaultValue":{"value":"undefined"}},{"name":"ariaControls","description":"","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}}]}},{"node":{"path":"src/components/Table/BodyWrapper.js","name":"BodyWrapper","description":"","props":[{"name":"rows","description":"","required":false,"type":{"name":"array"},"defaultValue":{"value":"[]"}},{"name":"onCollapse","description":"","required":false,"type":{"name":"func"},"defaultValue":null}]}},{"node":{"path":"src/components/Table/CollapseColumn.js","name":"CollapseColumn","description":"","props":[{"name":"children","description":"","required":false,"type":{"name":"node"},"defaultValue":{"value":"null"}},{"name":"onToggle","description":"","required":false,"type":{"name":"func"},"defaultValue":{"value":"null"}},{"name":"isOpen","description":"","required":false,"type":{"name":"bool"},"defaultValue":{"value":"undefined"}}]}},{"node":{"path":"src/components/Table/ExpandableRowContent.js","name":"ExpandableRowContent","description":"","props":[{"name":"children","description":"","required":false,"type":{"name":"node"},"defaultValue":{"value":"null"}}]}},{"node":{"path":"src/components/Table/Header.js","name":"TableHeader","description":"","props":[{"name":"className","description":"Additional classes for header.","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}}]}},{"node":{"path":"src/components/Table/HeaderCell.js","name":"HeaderCell","description":"","props":[{"name":"data-label","description":"","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"className","description":"","required":false,"type":{"name":"string"},"defaultValue":{"value":"undefined"}},{"name":"component","description":"","required":false,"type":{"name":"union"},"defaultValue":{"value":"'th'"}},{"name":"isVisible","description":"","required":false,"type":{"name":"bool"},"defaultValue":{"value":"undefined"}},{"name":"scope","description":"","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"textCenter","description":"","required":false,"type":{"name":"bool"},"defaultValue":{"value":"false"}}]}},{"node":{"path":"src/components/Table/RowWrapper.js","name":"RowWrapper","description":"","props":[{"name":"trRef","description":"","required":false,"type":{"name":"func"},"defaultValue":{"value":"undefined"}},{"name":"className","description":"","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"onScroll","description":"","required":false,"type":{"name":"func"},"defaultValue":{"value":"undefined"}},{"name":"onResize","description":"","required":false,"type":{"name":"func"},"defaultValue":{"value":"undefined"}},{"name":"row","description":"","required":false,"type":{"name":"shape"},"defaultValue":{"value":"{\n  isOpen: undefined,\n  isExpanded: undefined\n}"}},{"name":"rowProps","description":"","required":false,"type":{"name":"object"},"defaultValue":{"value":"null"}}]}},{"node":{"path":"src/components/Table/SelectColumn.js","name":"SelectColumn","description":"","props":[{"name":"children","description":"","required":false,"type":{"name":"node"},"defaultValue":{"value":"null"}},{"name":"className","description":"","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"onSelect","description":"","required":false,"type":{"name":"func"},"defaultValue":{"value":"null"}}]}},{"node":{"path":"src/components/Table/SortColumn.js","name":"SortColumn","description":"","props":[{"name":"children","description":"","required":false,"type":{"name":"node"},"defaultValue":{"value":"null"}},{"name":"className","description":"","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"isSortedBy","description":"","required":false,"type":{"name":"bool"},"defaultValue":{"value":"false"}},{"name":"onSort","description":"","required":false,"type":{"name":"func"},"defaultValue":{"value":"null"}},{"name":"sortDirection","description":"","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}}]}},{"node":{"path":"src/components/Table/Table.js","name":"Table","description":"","props":[{"name":"children","description":"Table elements [Head, Body and Footer].","required":false,"type":{"name":"node"},"defaultValue":{"value":"null"}},{"name":"className","description":"Addional classes for Table.","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"onCollapse","description":"Function called when user wants to collapse row.","required":false,"type":{"name":"func"},"defaultValue":{"value":"null"}},{"name":"onExpand","description":"Function called when user wants to compound expand row.","required":false,"type":{"name":"func"},"defaultValue":{"value":"null"}},{"name":"variant","description":"Table variant, defaults to large.","required":false,"type":{"name":"enum"},"defaultValue":{"value":"null"}},{"name":"gridBreakPoint","description":"Size at which table is broken into tiles.","required":false,"type":{"name":"enum"},"defaultValue":{"value":"'grid-md'"}},{"name":"borders","description":"Indicates if border is visible on a compacat table.  Note that this can not be applied when using expandable","required":false,"type":{"name":"bool"},"defaultValue":{"value":"true"}},{"name":"sortBy","description":"Settings for sorting, which index and direction is sorted by.","required":false,"type":{"name":"shape"},"defaultValue":null},{"name":"onSelect","description":"Function called when user wants to select row.","required":false,"type":{"name":"func"},"defaultValue":null},{"name":"onSort","description":"Function called when user wants to sort table.","required":false,"type":{"name":"func"},"defaultValue":null},{"name":"actions","description":"Additional cell displayed at the end of each row with dropdown of action items.","required":false,"type":{"name":"arrayOf"},"defaultValue":null},{"name":"actionResolver","description":"Function should resolve an array of actions for each row in the same format as actions.","required":false,"type":{"name":"func"},"defaultValue":null},{"name":"areActionsDisabled","description":"Function should resolve if action kebap is disabled for each row","required":false,"type":{"name":"func"},"defaultValue":null},{"name":"bodyWrapper","description":"Override to the default BodyWrapper renderer","required":false,"type":{"name":"func"},"defaultValue":null},{"name":"rowWrapper","description":"Override to the default RowWrapper renderer","required":false,"type":{"name":"func"},"defaultValue":null},{"name":"rows","description":"Actual rows to display in table. Either array of strings or row objects. <br/>\nIf you want to use components in row cells you can pass them as title prop in cells definition. <br/>\n<pre>Ex: rows:[\n  {cells:[\n    {title: &lt;div>Some component&lt;/div>}\n    ...\n  ]}\n]\n</pre>","required":true,"type":{"name":"arrayOf"},"defaultValue":null},{"name":"cells","description":"Header cells to display in table. Either array of strings or array of string or cell object.","required":true,"type":{"name":"arrayOf"},"defaultValue":null},{"name":"rowLabeledBy","description":"Aria labeled by this property collapse and select.","required":false,"type":{"name":"string"},"defaultValue":{"value":"'simple-node'"}},{"name":"expandId","description":"Id prefix for expand buttons.","required":false,"type":{"name":"string"},"defaultValue":{"value":"'expandable-toggle'"}},{"name":"contentId","description":"Id prefix for expanded content.","required":false,"type":{"name":"string"},"defaultValue":{"value":"'expanded-content'"}},{"name":"dropdownPosition","description":"Position of dropdown from actions will be displayed.","required":false,"type":{"name":"enum"},"defaultValue":{"value":"DropdownPosition.right"}},{"name":"dropdownDirection","description":"Direction of from actions will be displayed.","required":false,"type":{"name":"enum"},"defaultValue":{"value":"DropdownDirection.down"}},{"name":"header","description":"Header to display above table for accessibility reasons.","required":false,"type":{"name":"custom"},"defaultValue":null},{"name":"caption","description":"Caption to display in table for accessibility reasons.","required":false,"type":{"name":"custom"},"defaultValue":null},{"name":"aria-label","description":"aria-label in table for accessibility reasons.","required":false,"type":{"name":"custom"},"defaultValue":null}]}},{"node":{"path":"src/components/Table/demo/DemoSortableTable.js","name":"DemoSortableTable","description":"","props":[{"name":"firstColumnRows","description":"","required":true,"type":{"name":"array"},"defaultValue":null},{"name":"id","description":"","required":true,"type":{"name":"string"},"defaultValue":null}]}}]},"description":{"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"reactUrl\": \"table\",\n  \"htmlUrl\": \"table\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"table\"), \" is used to display large data sets that can be easily laid out in a simple grid with column headers. Related design guidelines: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"design-guidelines/usage-and-behavior/lists-and-tables\"\n  }), \"Lists and tables\")));\n}\nMDXContent.isMDXComponent = true;"}},"allGetStartedNavigationJson":{"edges":[{"node":{"text":"About","path":"/get-started/about"}},{"node":{"text":"Develop","path":"/get-started/developers"}},{"node":{"text":"Design","path":"/get-started/designers"}},{"node":{"text":"Migrate from PatternFly 3","path":"/get-started/migrate"}},{"node":{"text":"Accessibility guide","path":"/get-started/accessibility-guide"}}]},"allDesignGuidelinesNavigationJson":{"edges":[{"node":{"text":"Styles","path":"/design-guidelines/styles/","subNav":[{"text":"Colors","path":"/design-guidelines/styles/colors"},{"text":"Colors for charts","path":"/design-guidelines/styles/colors-for-charts"},{"text":"Icons","path":"/design-guidelines/styles/icons"},{"text":"Typography","path":"/design-guidelines/styles/typography"},{"text":"Spacers","path":"/design-guidelines/styles/spacers"}]}},{"node":{"text":"Usage and behavior","path":"/design-guidelines/usage-and-behavior/","subNav":[{"text":"About modal","path":"/design-guidelines/usage-and-behavior/about-modal"},{"text":"Alerts and notifications","path":"/design-guidelines/usage-and-behavior/alerts-and-notifications"},{"text":"Buttons and links","path":"/design-guidelines/usage-and-behavior/buttons-and-links"},{"text":"Charts","path":"/design-guidelines/usage-and-behavior/charts"},{"text":"Data input","path":"/design-guidelines/usage-and-behavior/data-input"},{"text":"Empty state","path":"/design-guidelines/usage-and-behavior/empty-state"},{"text":"Filters","path":"/design-guidelines/usage-and-behavior/filters"},{"text":"Forms","path":"/design-guidelines/usage-and-behavior/forms"},{"text":"Lists and tables","path":"/design-guidelines/usage-and-behavior/lists-and-tables"},{"text":"Login","path":"/design-guidelines/usage-and-behavior/login"},{"text":"Modal dialog","path":"/design-guidelines/usage-and-behavior/modal"},{"text":"Navigation system","path":"/design-guidelines/usage-and-behavior/navigation-system"},{"text":"Progress bar","path":"/design-guidelines/usage-and-behavior/progress-bar"},{"text":"Toolbar","path":"/design-guidelines/usage-and-behavior/toolbar"}]}},{"node":{"text":"Content","path":"/design-guidelines/content","subNav":[{"text":"Writing","path":"/design-guidelines/content/writing"},{"text":"Voice","path":"/design-guidelines/content/voice-and-tone"},{"text":"Style guide","path":"/design-guidelines/content/grammar-and-terminology"}]}}]}},"pageContext":{"title":"Table","fileAbsolutePath":"/home/travis/build/patternfly/patternfly-org/packages/patternfly-4/_repos/react-table/src/components/Table/Table.md","pathRegex":"/Table/.*/","reactUrl":"table"}}