{"data":{"mdx":{"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Tooltip\",\n  \"cssPrefix\": \"pf-c-tooltip\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"simple-tooltip\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#simple-tooltip\",\n    \"aria-label\": \"simple tooltip permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Simple tooltip\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { Tooltip, TooltipPosition, Checkbox } from '@patternfly/react-core';\\n\\n<Tooltip\\n  position=\\\"right\\\"\\n  content={\\n    <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam id feugiat augue, nec fringilla turpis.</div>\\n  }\\n>\\n  <span>I have a tooltip!</span>\\n</Tooltip>\\n\")), mdx(\"h2\", {\n    \"id\": \"tooltip-positions\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#tooltip-positions\",\n    \"aria-label\": \"tooltip positions permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Tooltip positions\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { Tooltip, TooltipPosition, Checkbox } from '@patternfly/react-core';\\n\\nclass TooltipPositions extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      position: TooltipPosition.top,\\n      keepInViewChecked: true\\n    };\\n    this.handleKeepInViewChange = checked => {\\n      this.setState({ keepInViewChecked: checked });\\n    };\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <div>\\n          <span style={{ paddingRight: '10px' }}>Tooltip Position</span>\\n          <select\\n            onChange={event => {\\n              this.setState({ position: event.target.value });\\n            }}\\n          >\\n            {Object.keys(TooltipPosition).map(key => (\\n              <option key={key} value={TooltipPosition[key]}>\\n                {TooltipPosition[key]}\\n              </option>\\n            ))}\\n          </select>\\n          <Checkbox\\n            label=\\\"Flip tooltip if the position falls outside the view\\\"\\n            isChecked={this.state.keepInViewChecked}\\n            onChange={this.handleKeepInViewChange}\\n            aria-label=\\\"Keep in view\\\"\\n            id=\\\"check-3\\\"\\n          />\\n        </div>\\n\\n        <div style={{ margin: '50px' }}>\\n          <Tooltip\\n            position={this.state.position}\\n            enableFlip={this.state.keepInViewChecked}\\n            content={\\n              <div>\\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam id feugiat augue, nec fringilla turpis.\\n              </div>\\n            }\\n          >\\n            <span>I have a tooltip!</span>\\n          </Tooltip>\\n        </div>\\n      </div>\\n    );\\n  }\\n}\\n\")));\n}\nMDXContent.isMDXComponent = true;"},"frontmatter":{"title":"Tooltip","section":null,"cssPrefix":"pf-c-tooltip"}},"metadata":{"edges":[{"node":{"path":"src/components/Tooltip/Tooltip.js","name":"Tooltip","description":"","props":[{"name":"position","description":"Tooltip position","required":false,"type":{"name":"enum"},"defaultValue":{"value":"'top'"}},{"name":"trigger","description":"Tooltip trigger: click, mouseenter, focus","required":false,"type":{"name":"string"},"defaultValue":{"value":"'mouseenter focus'"}},{"name":"enableFlip","description":"If true, tries to keep the tooltip in view by flipping it if necessary","required":false,"type":{"name":"bool"},"defaultValue":{"value":"true"}},{"name":"className","description":"Tooltip additional class","required":false,"type":{"name":"string"},"defaultValue":{"value":"null"}},{"name":"content","description":"Tooltip content","required":true,"type":{"name":"node"},"defaultValue":null},{"name":"children","description":"The reference element to which the tooltip is relatively placed to","required":true,"type":{"name":"element"},"defaultValue":null},{"name":"entryDelay","description":"Delay in ms before the tooltip appears","required":false,"type":{"name":"number"},"defaultValue":{"value":"500"}},{"name":"exitDelay","description":"Delay in ms before the tooltip disappears","required":false,"type":{"name":"number"},"defaultValue":{"value":"500"}},{"name":"appendTo","description":"The element to append the tooltip to, defaults to body","required":false,"type":{"name":"union"},"defaultValue":{"value":"() => document.body"}},{"name":"zIndex","description":"z-index of the tooltip","required":false,"type":{"name":"number"},"defaultValue":{"value":"9999"}},{"name":"maxWidth","description":"Maximum width of the tooltip (default 12.5rem)","required":false,"type":{"name":"string"},"defaultValue":{"value":"tooltipMaxWidth && tooltipMaxWidth.value"}}]}},{"node":{"path":"src/components/Tooltip/TooltipArrow.js","name":"TooltipArrow","description":"","props":[{"name":"className","description":"Tooltip arrow additional className","required":false,"type":{"name":"string"},"defaultValue":{"value":"null"}}]}},{"node":{"path":"src/components/Tooltip/TooltipContent.js","name":"TooltipContent","description":"","props":[{"name":"className","description":"TooltipContent additional class","required":false,"type":{"name":"string"},"defaultValue":{"value":"null"}},{"name":"children","description":"TooltipContent content","required":true,"type":{"name":"node"},"defaultValue":null}]}},{"node":{"path":"src/components/ChartTooltip/ChartTooltip.js","name":"ChartTooltip","description":"","props":[{"name":"","description":"See TypeScript API docs: https://formidable.com/open-source/victory/docs/victory-tooltip/","required":false,"type":{"name":"any"},"defaultValue":null}]}}]},"description":{"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"reactUrl\": \"tooltip\",\n  \"htmlUrl\": \"tooltip\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Tooltips\"), \" are used to provide short, clarifying descriptions of elements on a page. They are typically used to clarify the meaning of icons.\"));\n}\nMDXContent.isMDXComponent = true;"}},"allGetStartedNavigationJson":{"edges":[{"node":{"text":"About","path":"/get-started/about"}},{"node":{"text":"Develop","path":"/get-started/developers"}},{"node":{"text":"Design","path":"/get-started/designers"}},{"node":{"text":"Migration guide","path":"/get-started/migrate"}},{"node":{"text":"Accessibility guide","path":"/get-started/accessibility-guide"}}]},"allDesignGuidelinesNavigationJson":{"edges":[{"node":{"text":"Styles","path":"/design-guidelines/styles/","subNav":[{"text":"Colors","path":"/design-guidelines/styles/colors"},{"text":"Colors for charts","path":"/design-guidelines/styles/colors-for-charts"},{"text":"Icons","path":"/design-guidelines/styles/icons"},{"text":"Typography","path":"/design-guidelines/styles/typography"},{"text":"Spacers","path":"/design-guidelines/styles/spacers"}]}},{"node":{"text":"Usage and behavior","path":"/design-guidelines/usage-and-behavior/","subNav":[{"text":"About modal","path":"/design-guidelines/usage-and-behavior/about-modal"},{"text":"Alerts and notifications","path":"/design-guidelines/usage-and-behavior/alerts-and-notifications"},{"text":"Buttons and links","path":"/design-guidelines/usage-and-behavior/buttons-and-links"},{"text":"Charts","path":"/design-guidelines/usage-and-behavior/charts"},{"text":"Data input","path":"/design-guidelines/usage-and-behavior/data-input"},{"text":"Empty state","path":"/design-guidelines/usage-and-behavior/empty-state"},{"text":"Filters","path":"/design-guidelines/usage-and-behavior/filters"},{"text":"Forms","path":"/design-guidelines/usage-and-behavior/forms"},{"text":"Lists and tables","path":"/design-guidelines/usage-and-behavior/lists-and-tables"},{"text":"Login","path":"/design-guidelines/usage-and-behavior/login"},{"text":"Modal dialog","path":"/design-guidelines/usage-and-behavior/modal"},{"text":"Navigation system","path":"/design-guidelines/usage-and-behavior/navigation-system"},{"text":"Progress bar","path":"/design-guidelines/usage-and-behavior/progress-bar"},{"text":"Toolbar","path":"/design-guidelines/usage-and-behavior/toolbar"},{"text":"Wizard","path":"/design-guidelines/usage-and-behavior/wizard"}]}},{"node":{"text":"Content","path":"/design-guidelines/content","subNav":[{"text":"Writing","path":"/design-guidelines/content/writing"},{"text":"Voice","path":"/design-guidelines/content/voice-and-tone"},{"text":"Style guide","path":"/design-guidelines/content/grammar-and-terminology"}]}}]}},"pageContext":{"title":"Tooltip","fileAbsolutePath":"/home/travis/build/patternfly/patternfly-org/packages/patternfly-4/_repos/react-core/src/components/Tooltip/Tooltip.md","pathRegex":"/Tooltip/.*/","reactUrl":"tooltip"}}