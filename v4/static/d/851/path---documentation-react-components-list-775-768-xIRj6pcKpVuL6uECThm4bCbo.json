{"data":{"mdx":{"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"List\",\n  \"cssPrefix\": \"pf-c-list\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"simple-list\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#simple-list\",\n    \"aria-label\": \"simple list permalink\",\n    \"class\": \"anchor\"\n  }), mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Simple List\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { List, ListItem } from '@patternfly/react-core';\\n\\nSimpleList = (\\n  <List>\\n    <ListItem>First</ListItem>\\n    <ListItem>Second</ListItem>\\n    <ListItem>Third</ListItem>\\n  </List>\\n);\\n\")), mdx(\"h2\", {\n    \"id\": \"inline-list\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#inline-list\",\n    \"aria-label\": \"inline list permalink\",\n    \"class\": \"anchor\"\n  }), mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Inline List\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { List, ListItem } from '@patternfly/react-core';\\n\\nInlineList = (\\n  <List variant=\\\"inline\\\">\\n    <ListItem>First</ListItem>\\n    <ListItem>Second</ListItem>\\n    <ListItem>Third</ListItem>\\n  </List>\\n);\\n\")), mdx(\"h2\", {\n    \"id\": \"grid-list\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#grid-list\",\n    \"aria-label\": \"grid list permalink\",\n    \"class\": \"anchor\"\n  }), mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Grid List\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { List, ListItem } from '@patternfly/react-core';\\n\\nGridList = () => (\\n  <List variant=\\\"grid\\\">\\n    <ListItem>First</ListItem>\\n    <ListItem>Second</ListItem>\\n    <ListItem>Third</ListItem>\\n    <ListItem>Fourth</ListItem>\\n    <ListItem>Fifth</ListItem>\\n    <ListItem>Sixth</ListItem>\\n  </List>\\n);\\n\")));\n}\nMDXContent.isMDXComponent = true;"},"frontmatter":{"title":"List","section":null,"cssPrefix":"pf-c-list"}},"metadata":{"edges":[{"node":{"path":"src/components/DataList/DataList.js","name":"DataList","description":"","props":[{"name":"children","description":"Content rendered inside the DataList list","required":false,"type":{"name":"node"},"defaultValue":{"value":"null"}},{"name":"className","description":"Additional classes added to the DataList list","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"aria-label","description":"Adds accessible text to the DataList list","required":true,"type":{"name":"string"},"defaultValue":null},{"name":"","description":"Additional props are spread to the container <ul>","required":false,"type":{"name":"any"},"defaultValue":null}]}},{"node":{"path":"src/components/DataList/DataListAction.js","name":"DataListAction","description":"","props":[{"name":"children","description":"Content rendered as DataList Action  (e.g <Button> or <Dropdown>)","required":true,"type":{"name":"union"},"defaultValue":null},{"name":"className","description":"Additional classes added to the DataList Action","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"id","description":"Identify the DataList toggle number","required":true,"type":{"name":"string"},"defaultValue":null},{"name":"aria-labelledby","description":"Adds accessible text to the DataList Action","required":true,"type":{"name":"string"},"defaultValue":null},{"name":"aria-label","description":"Adds accessible text to the DataList Action","required":true,"type":{"name":"string"},"defaultValue":null},{"name":"","description":"Additional props are spread to the container <div>","required":false,"type":{"name":"any"},"defaultValue":null}]}},{"node":{"path":"src/components/DataList/DataListCell.js","name":"DataListCell","description":"","props":[{"name":"children","description":"Content rendered inside the DataList cell","required":false,"type":{"name":"node"},"defaultValue":{"value":"null"}},{"name":"className","description":"Additional classes added to the DataList cell","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"width","description":"Width (from 1-5) to the DataList cell","required":false,"type":{"name":"enum"},"defaultValue":{"value":"1"}},{"name":"isFilled","description":"Enables the body Content to fill the height of the card","required":false,"type":{"name":"bool"},"defaultValue":{"value":"true"}},{"name":"alignRight","description":"Aligns the cell content to the right of its parent.","required":false,"type":{"name":"bool"},"defaultValue":{"value":"false"}},{"name":"isIcon","description":"Set to true if the cell content is an Icon","required":false,"type":{"name":"bool"},"defaultValue":{"value":"false"}},{"name":"","description":"Additional props are spread to the container <div>","required":false,"type":{"name":"any"},"defaultValue":null}]}},{"node":{"path":"src/components/DataList/DataListCheck.js","name":"DataListCheck","description":"","props":[{"name":"className","description":"Additional classes added to the DataList item checkbox","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"isValid","description":"Flag to show if the DataList checkbox selection is valid or invalid","required":false,"type":{"name":"bool"},"defaultValue":{"value":"true"}},{"name":"isDisabled","description":"Flag to show if the DataList checkbox is disabled","required":false,"type":{"name":"bool"},"defaultValue":{"value":"false"}},{"name":"isChecked","description":"Flag to show if the DataList checkbox is checked","required":false,"type":{"name":"bool"},"defaultValue":{"value":"null"}},{"name":"onChange","description":"A callback for when the DataList checkbox selection changes","required":false,"type":{"name":"func"},"defaultValue":{"value":"() => undefined"}},{"name":"aria-labelledby","description":"Aria-labelledby of the DataList checkbox","required":true,"type":{"name":"string"},"defaultValue":null},{"name":"","description":"Additional props are spread to the <input>","required":false,"type":{"name":"any"},"defaultValue":null}]}},{"node":{"path":"src/components/DataList/DataListContent.js","name":"DataListContent","description":"","props":[{"name":"children","description":"Content rendered inside the DataList item","required":false,"type":{"name":"node"},"defaultValue":{"value":"null"}},{"name":"className","description":"Additional classes added to the DataList cell","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"id","description":"Identify the DataListContent item","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"isHidden","description":"Flag to show if the expanded content of the DataList item is visible","required":false,"type":{"name":"bool"},"defaultValue":{"value":"false"}},{"name":"noPadding","description":"Flag to remove padding from the expandable content","required":false,"type":{"name":"bool"},"defaultValue":{"value":"false"}},{"name":"aria-label","description":"Adds accessible text to the DataList toggle","required":true,"type":{"name":"string"},"defaultValue":null},{"name":"","description":"Additional props are spread to the container <section>","required":false,"type":{"name":"any"},"defaultValue":null}]}},{"node":{"path":"src/components/DataList/DataListItem.js","name":"DataListItem","description":"","props":[{"name":"isExpanded","description":"Flag to show if the expanded content of the DataList item is visible","required":false,"type":{"name":"bool"},"defaultValue":{"value":"false"}},{"name":"children","description":"Content rendered inside the DataList item","required":true,"type":{"name":"node"},"defaultValue":null},{"name":"className","description":"Additional classes added to the DataList item should be either <DataListItemRow> or <DataListContent>","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"aria-labelledby","description":"Adds accessible text to the DataList item","required":true,"type":{"name":"string"},"defaultValue":null},{"name":"","description":"Additional props are spread to the container <li>","required":false,"type":{"name":"any"},"defaultValue":null}]}},{"node":{"path":"src/components/DataList/DataListItemCells.js","name":"DataListItemCells","description":"","props":[{"name":"className","description":"Additional classes added to the DataList item Content Wrapper.  Children should be one ore more <DataListCell> nodes","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"dataListCells","description":"Array of <DataListCell> nodes that are rendered one after the other.","required":true,"type":{"name":"arrayOf"},"defaultValue":null},{"name":"","description":"Additional props are spread to the container <div>","required":false,"type":{"name":"any"},"defaultValue":null}]}},{"node":{"path":"src/components/DataList/DataListItemRow.js","name":"DataListItemRow","description":"","props":[{"name":"children","description":"Content rendered inside the DataList item Row.  Can be <DataListItemCells>, <DataListAction>, <DataListCheck> or <DataListToggle>","required":true,"type":{"name":"union"},"defaultValue":null},{"name":"className","description":"Additional classes added to the DataList item Row","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"","description":"Additional props are spread to the container <div>","required":false,"type":{"name":"any"},"defaultValue":null}]}},{"node":{"path":"src/components/DataList/DataListToggle.js","name":"DataListToggle","description":"","props":[{"name":"className","description":"Additional classes added to the DataList cell","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"isExpanded","description":"Flag to show if the expanded content of the DataList item is visible","required":false,"type":{"name":"bool"},"defaultValue":{"value":"false"}},{"name":"id","description":"Identify the DataList toggle number","required":true,"type":{"name":"string"},"defaultValue":null},{"name":"aria-labelledby","description":"Adds accessible text to the DataList toggle","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"aria-label","description":"Adds accessible text to the DataList toggle","required":false,"type":{"name":"string"},"defaultValue":{"value":"'Details'"}},{"name":"aria-controls","description":"Allows users of some screen readers to shift focus to the controlled element. Should be used when the controlled contents are not adjacent to the toggle that controls them.","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"","description":"Additional props are spread to the container <div>","required":false,"type":{"name":"any"},"defaultValue":null}]}},{"node":{"path":"src/components/List/List.js","name":"List","description":"","props":[{"name":"children","description":"Anything that can be rendered inside of the list","required":false,"type":{"name":"node"},"defaultValue":{"value":"null"}},{"name":"className","description":"Additional classes added to the list.","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"variant","description":"Adds list variant styles","required":false,"type":{"name":"enum"},"defaultValue":{"value":"null"}},{"name":"","description":"Additional props are spread to the container <ul>","required":false,"type":{"name":"any"},"defaultValue":null}]}},{"node":{"path":"src/components/List/ListItem.js","name":"ListItem","description":"","props":[{"name":"children","description":"Anything that can be rendered inside of list item","required":false,"type":{"name":"node"},"defaultValue":{"value":"null"}},{"name":"","description":"Additional props are spread to the container <li>","required":false,"type":{"name":"any"},"defaultValue":null}]}}]},"allGetStartedNavigationJson":{"edges":[{"node":{"text":"About","path":"/get-started/about"}},{"node":{"text":"Develop","path":"/get-started/developers"}},{"node":{"text":"Design","path":"/get-started/designers"}}]},"allDesignGuidelinesNavigationJson":{"edges":[{"node":{"text":"Styles","path":"/design-guidelines/styles/","subNav":[{"text":"Colors","path":"/design-guidelines/styles/colors"},{"text":"Icons","path":"/design-guidelines/styles/icons"},{"text":"Typography","path":"/design-guidelines/styles/typography"},{"text":"Spacers","path":"/design-guidelines/styles/spacers"}]}},{"node":{"text":"Usage and behavior","path":"/design-guidelines/usage-and-behavior/","subNav":[{"text":"About modal","path":"/design-guidelines/usage-and-behavior/about-modal"},{"text":"Alerts and notifications","path":"/design-guidelines/usage-and-behavior/alerts-and-notifications"},{"text":"Buttons and links","path":"/design-guidelines/usage-and-behavior/buttons-and-links"},{"text":"Data input","path":"/design-guidelines/usage-and-behavior/data-input"},{"text":"Empty state","path":"/design-guidelines/usage-and-behavior/empty-state"},{"text":"Filters","path":"/design-guidelines/usage-and-behavior/filters"},{"text":"Forms","path":"/design-guidelines/usage-and-behavior/forms"},{"text":"Lists and tables","path":"/design-guidelines/usage-and-behavior/lists-and-tables"},{"text":"Login","path":"/design-guidelines/usage-and-behavior/login"},{"text":"Modal dialog","path":"/design-guidelines/usage-and-behavior/modal"},{"text":"Navigation system","path":"/design-guidelines/usage-and-behavior/navigation-system"},{"text":"Progress bar","path":"/design-guidelines/usage-and-behavior/progress-bar"},{"text":"Toolbar","path":"/design-guidelines/usage-and-behavior/toolbar"}]}},{"node":{"text":"Content","path":"/design-guidelines/content","subNav":[{"text":"Writing","path":"/design-guidelines/content/writing"},{"text":"Voice","path":"/design-guidelines/content/voice-and-tone"},{"text":"Style guide","path":"/design-guidelines/content/grammar-and-terminology"}]}}]}},"pageContext":{"title":"List","fileAbsolutePath":"/home/travis/build/patternfly/patternfly-org/packages/patternfly-4/_repos/react-core/src/components/List/List.md","pathRegex":"/List/.*/"}}