{"data":{"mdx":{"rawBody":"---\ntitle: 'Page'\ncssPrefix: 'pf-c-page'\n---\n\nimport { Page, PageHeader, PageSidebar, PageSection, PageSectionVariants } from '@patternfly/react-core';\n\n## Vertical Page Layout\n```js\nimport React from 'react';\nimport { Page, PageHeader, PageSidebar, PageSection, PageSectionVariants } from '@patternfly/react-core';\n\nclass VerticalPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isNavOpen: true\n    };\n    this.onNavToggle = () => {\n      this.setState({\n        isNavOpen: !this.state.isNavOpen\n      });\n    };\n  }\n\n  render() {\n    const { isNavOpen } = this.state;\n\n    const logoProps = {\n      href: 'https://patternfly.org',\n      onClick: () => console.log('clicked logo'),\n      target: '_blank'\n    };\n    const Header = (\n      <PageHeader\n        logo=\"Logo\"\n        logoProps={logoProps}\n        toolbar=\"Toolbar\"\n        avatar=\" | Avatar\"\n        showNavToggle\n        isNavOpen={isNavOpen}\n        onNavToggle={this.onNavToggle}\n      />\n    );\n    const Sidebar = <PageSidebar nav=\"Navigation\" isNavOpen={isNavOpen} />;\n\n    return (\n      <Page header={Header} sidebar={Sidebar}>\n        <PageSection variant={PageSectionVariants.darker}>Section with darker background</PageSection>\n        <PageSection variant={PageSectionVariants.dark}>Section with dark background</PageSection>\n        <PageSection variant={PageSectionVariants.light}>Section with light background</PageSection>\n      </Page>\n    );\n  }\n}\n```\n\n## Horizontal Page Layout\n```js\nimport React from 'react';\nimport { Page, PageHeader, PageSidebar, PageSection, PageSectionVariants } from '@patternfly/react-core';\n\nHorizontalPage = () => {\n  const logoProps = {\n    href: 'https://patternfly.org',\n    onClick: () => console.log('clicked logo'),\n    target: '_blank'\n  };\n  const Header = (\n    <PageHeader logo=\"Logo\" logoProps={logoProps} toolbar=\"Toolbar\" avatar=\" | Avatar\" topNav=\"Navigation\" />\n  );\n\n  return (\n    <Page header={Header}>\n      <PageSection variant={PageSectionVariants.darker}>Section with darker background</PageSection>\n      <PageSection variant={PageSectionVariants.dark}>Section with dark background</PageSection>\n      <PageSection variant={PageSectionVariants.light}>Section with light background</PageSection>\n    </Page>\n  );\n};\n```\n","code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Page\",\n  \"cssPrefix\": \"pf-c-page\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"vertical-page-layout\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#vertical-page-layout\",\n    \"aria-label\": \"vertical page layout permalink\",\n    \"class\": \"anchor\"\n  }), mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Vertical Page Layout\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { Page, PageHeader, PageSidebar, PageSection, PageSectionVariants } from '@patternfly/react-core';\\n\\nclass VerticalPage extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isNavOpen: true\\n    };\\n    this.onNavToggle = () => {\\n      this.setState({\\n        isNavOpen: !this.state.isNavOpen\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { isNavOpen } = this.state;\\n\\n    const logoProps = {\\n      href: 'https://patternfly.org',\\n      onClick: () => console.log('clicked logo'),\\n      target: '_blank'\\n    };\\n    const Header = (\\n      <PageHeader\\n        logo=\\\"Logo\\\"\\n        logoProps={logoProps}\\n        toolbar=\\\"Toolbar\\\"\\n        avatar=\\\" | Avatar\\\"\\n        showNavToggle\\n        isNavOpen={isNavOpen}\\n        onNavToggle={this.onNavToggle}\\n      />\\n    );\\n    const Sidebar = <PageSidebar nav=\\\"Navigation\\\" isNavOpen={isNavOpen} />;\\n\\n    return (\\n      <Page header={Header} sidebar={Sidebar}>\\n        <PageSection variant={PageSectionVariants.darker}>Section with darker background</PageSection>\\n        <PageSection variant={PageSectionVariants.dark}>Section with dark background</PageSection>\\n        <PageSection variant={PageSectionVariants.light}>Section with light background</PageSection>\\n      </Page>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"horizontal-page-layout\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#horizontal-page-layout\",\n    \"aria-label\": \"horizontal page layout permalink\",\n    \"class\": \"anchor\"\n  }), mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Horizontal Page Layout\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { Page, PageHeader, PageSidebar, PageSection, PageSectionVariants } from '@patternfly/react-core';\\n\\nHorizontalPage = () => {\\n  const logoProps = {\\n    href: 'https://patternfly.org',\\n    onClick: () => console.log('clicked logo'),\\n    target: '_blank'\\n  };\\n  const Header = (\\n    <PageHeader logo=\\\"Logo\\\" logoProps={logoProps} toolbar=\\\"Toolbar\\\" avatar=\\\" | Avatar\\\" topNav=\\\"Navigation\\\" />\\n  );\\n\\n  return (\\n    <Page header={Header}>\\n      <PageSection variant={PageSectionVariants.darker}>Section with darker background</PageSection>\\n      <PageSection variant={PageSectionVariants.dark}>Section with dark background</PageSection>\\n      <PageSection variant={PageSectionVariants.light}>Section with light background</PageSection>\\n    </Page>\\n  );\\n};\\n\")));\n}\nMDXContent.isMDXComponent = true;"}}},"pageContext":{"fileAbsolutePath":"/home/travis/build/patternfly/patternfly-org/packages/patternfly-4/_repos/react-core/src/components/Page/Page.md","fullscreen":true}}