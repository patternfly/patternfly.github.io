{"data":{"mdx":{"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"FormSelect\",\n  \"cssPrefix\": \"pf-c-form-control\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"simple-form-select\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#simple-form-select\",\n    \"aria-label\": \"simple form select permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Simple form select\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { FormSelect, FormSelectOption, FormSelectOptionGroup } from '@patternfly/react-core';\\n\\nclass FormSelectInput extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      value: 'mrs'\\n    };\\n    this.onChange = (value, event) => {\\n      this.setState({ value });\\n    };\\n    this.options = [\\n      { value: 'please choose', label: 'Please Choose', disabled: true },\\n      { value: 'mr', label: 'Mr', disabled: false },\\n      { value: 'miss', label: 'Miss', disabled: false },\\n      { value: 'mrs', label: 'Mrs', disabled: false },\\n      { value: 'ms', label: 'Ms', disabled: false },\\n      { value: 'dr', label: 'Dr', disabled: false },\\n      { value: 'other', label: 'Other', disabled: false }\\n    ];\\n  }\\n\\n  render() {\\n    return (\\n      <FormSelect value={this.state.value} onChange={this.onChange} aria-label=\\\"FormSelect Input\\\">\\n        {this.options.map((option, index) => (\\n          <FormSelectOption isDisabled={option.disabled} key={index} value={option.value} label={option.label} />\\n        ))}\\n      </FormSelect>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"invalid-form-select\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#invalid-form-select\",\n    \"aria-label\": \"invalid form select permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Invalid form select\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { FormSelect, FormSelectOption, FormSelectOptionGroup } from '@patternfly/react-core';\\n\\nclass FormSelectInputInvalid extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      value: ''\\n    };\\n    this.isEmpty = () => this.state.value !== '';\\n    this.onChange = (value, event) => {\\n      this.setState({ value });\\n    };\\n    this.options = [\\n      { value: '', label: 'Choose a number', disabled: false },\\n      { value: '1', label: 'One', disabled: false },\\n      { value: '2', label: 'Two', disabled: false },\\n      { value: '3', label: 'Three', disabled: false }\\n    ];\\n  }\\n\\n  render() {\\n    return (\\n      <FormSelect\\n        isValid={this.isEmpty()}\\n        value={this.state.value}\\n        onChange={this.onChange}\\n        aria-label=\\\"FormSelect Input\\\"\\n      >\\n        {this.options.map((option, index) => (\\n          <FormSelectOption isDisabled={option.disabled} key={index} value={option.value} label={option.label} />\\n        ))}\\n      </FormSelect>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"disabled-form-select\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#disabled-form-select\",\n    \"aria-label\": \"disabled form select permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Disabled form select\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { FormSelect, FormSelectOption, FormSelectOptionGroup } from '@patternfly/react-core';\\n\\nclass FormSelectInputDisabled extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      value: 'mrs'\\n    };\\n    this.onChange = (value, event) => {\\n      this.setState({ value });\\n    };\\n    this.options = [\\n      { value: 'please choose', label: 'Please Choose', disabled: true },\\n      { value: 'mr', label: 'Mr', disabled: false },\\n      { value: 'miss', label: 'Miss', disabled: false },\\n      { value: 'mrs', label: 'Mrs', disabled: false },\\n      { value: 'ms', label: 'Ms', disabled: false },\\n      { value: 'dr', label: 'Dr', disabled: false },\\n      { value: 'other', label: 'Other', disabled: false }\\n    ];\\n  }\\n\\n  render() {\\n    return (\\n      <FormSelect value={this.state.value} onChange={this.onChange} isDisabled aria-label=\\\"FormSelect Input\\\">\\n        {this.options.map((option, index) => (\\n          <FormSelectOption isDisabled={option.disabled} key={index} value={option.value} label={option.label} />\\n        ))}\\n      </FormSelect>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"grouped-form-select\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#grouped-form-select\",\n    \"aria-label\": \"grouped form select permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Grouped form select\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { FormSelect, FormSelectOption, FormSelectOptionGroup } from '@patternfly/react-core';\\n\\nclass FormSelectInputGrouped extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      value: '2'\\n    };\\n    this.onChange = (value, event) => {\\n      this.setState({ value });\\n    };\\n    this.groups = [\\n      {\\n        groupLabel: 'Group1',\\n        disabled: false,\\n        options: [\\n          { value: '1', label: 'The First Option', disabled: false },\\n          { value: '2', label: 'Second option is selected by default', disabled: false }\\n        ]\\n      },\\n      {\\n        groupLabel: 'Group2',\\n        disabled: false,\\n        options: [\\n          { value: '3', label: 'The Third Option', disabled: false },\\n          { value: '4', label: 'The Fourth option', disabled: false }\\n        ]\\n      },\\n      {\\n        groupLabel: 'Group3',\\n        disabled: true,\\n        options: [\\n          { value: '5', label: 'The Fifth Option', disabled: false },\\n          { value: '6', label: 'The Sixth option', disabled: false }\\n        ]\\n      }\\n    ];\\n    this.getOptionLbl = option => option.label;\\n    this.getOptionVal = option => option.value;\\n    this.getOptionsGroupLbl = group => group && group.groupLabel;\\n    this.getGroupOptions = group => group && group.options;\\n  }\\n\\n  render() {\\n    return (\\n      <FormSelect value={this.state.value} onChange={this.onChange} aria-label=\\\"FormSelect Input\\\">\\n        {this.groups.map((group, index) => (\\n          <FormSelectOptionGroup isDisabled={group.disabled} key={index} label={group.groupLabel}>\\n            {group.options.map((option, i) => (\\n              <FormSelectOption isDisabled={option.disabled} key={i} value={option.value} label={option.label} />\\n            ))}\\n          </FormSelectOptionGroup>\\n        ))}\\n      </FormSelect>\\n    );\\n  }\\n}\\n\")));\n}\nMDXContent.isMDXComponent = true;"},"frontmatter":{"title":"FormSelect","section":null,"cssPrefix":"pf-c-form-control"}},"metadata":{"edges":[{"node":{"path":"src/components/FormSelect/FormSelect.js","name":"FormSelect","description":"","props":[{"name":"children","description":"content rendered inside the FormSelect","required":true,"type":{"name":"node"},"defaultValue":null},{"name":"className","description":"additional classes added to the FormSelect control","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"value","description":"value of selected option","required":false,"type":{"name":"any"},"defaultValue":{"value":"''"}},{"name":"isValid","description":"Flag indicating selection is valid","required":false,"type":{"name":"bool"},"defaultValue":{"value":"true"}},{"name":"isDisabled","description":"Flag indicating the FormSelect is disabled","required":false,"type":{"name":"bool"},"defaultValue":{"value":"false"}},{"name":"onBlur","description":"Optional callback for updating when selection loses focus","required":false,"type":{"name":"func"},"defaultValue":{"value":"() => undefined"}},{"name":"onFocus","description":"Optional callback for updating when selection gets focus","required":false,"type":{"name":"func"},"defaultValue":{"value":"() => undefined"}},{"name":"onChange","description":"Optional callback for updating when selection changes","required":false,"type":{"name":"func"},"defaultValue":{"value":"() => undefined"}},{"name":"aria-label","description":"Custom flag to show that the FormSelect requires an associated id or aria-label.","required":false,"type":{"name":"custom"},"defaultValue":{"value":"null"}},{"name":"","description":"Additional props are spread to the container <select>","required":false,"type":{"name":"any"},"defaultValue":null}]}},{"node":{"path":"src/components/FormSelect/FormSelectOption.js","name":"FormSelectOption","description":"","props":[{"name":"className","description":"additional classes added to the Select Option","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"value","description":"the value for the option","required":false,"type":{"name":"any"},"defaultValue":{"value":"''"}},{"name":"label","description":"the label for the option","required":true,"type":{"name":"string"},"defaultValue":null},{"name":"isDisabled","description":"flag indicating if the option is disabled","required":false,"type":{"name":"bool"},"defaultValue":{"value":"false"}},{"name":"","description":"Additional props are spread to the container <option>","required":false,"type":{"name":"any"},"defaultValue":null}]}},{"node":{"path":"src/components/FormSelect/FormSelectOptionGroup.js","name":"FormSelectOptionGroup","description":"","props":[{"name":"children","description":"content rendered inside the Select Option Group","required":false,"type":{"name":"node"},"defaultValue":{"value":"null"}},{"name":"className","description":"additional classes added to the Select Option","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"label","description":"the label for the option","required":true,"type":{"name":"string"},"defaultValue":null},{"name":"isDisabled","description":"flag indicating if the Option Group is disabled","required":false,"type":{"name":"bool"},"defaultValue":{"value":"false"}},{"name":"","description":"Additional props are spread to the container <optgroup>","required":false,"type":{"name":"any"},"defaultValue":null}]}}]},"description":{"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"reactUrl\": \"formselect\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Form select\"), \" is used to embed browser native select lists into a form. Related design guidelines: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"design-guidelines/usage-and-behavior/data-input\"\n  }), \"Data input\")));\n}\nMDXContent.isMDXComponent = true;"}},"allGetStartedNavigationJson":{"edges":[{"node":{"text":"About","path":"/get-started/about"}},{"node":{"text":"Develop","path":"/get-started/developers"}},{"node":{"text":"Design","path":"/get-started/designers"}},{"node":{"text":"Migration guide","path":"/get-started/migrate"}},{"node":{"text":"Accessibility guide","path":"/get-started/accessibility-guide"}}]},"allDesignGuidelinesNavigationJson":{"edges":[{"node":{"text":"Styles","path":"/design-guidelines/styles/","subNav":[{"text":"Colors","path":"/design-guidelines/styles/colors"},{"text":"Colors for charts","path":"/design-guidelines/styles/colors-for-charts"},{"text":"Icons","path":"/design-guidelines/styles/icons"},{"text":"Typography","path":"/design-guidelines/styles/typography"},{"text":"Spacers","path":"/design-guidelines/styles/spacers"}]}},{"node":{"text":"Usage and behavior","path":"/design-guidelines/usage-and-behavior/","subNav":[{"text":"About modal","path":"/design-guidelines/usage-and-behavior/about-modal"},{"text":"Alerts and notifications","path":"/design-guidelines/usage-and-behavior/alerts-and-notifications"},{"text":"Buttons and links","path":"/design-guidelines/usage-and-behavior/buttons-and-links"},{"text":"Charts","path":"/design-guidelines/usage-and-behavior/charts"},{"text":"Data input","path":"/design-guidelines/usage-and-behavior/data-input"},{"text":"Empty state","path":"/design-guidelines/usage-and-behavior/empty-state"},{"text":"Filters","path":"/design-guidelines/usage-and-behavior/filters"},{"text":"Forms","path":"/design-guidelines/usage-and-behavior/forms"},{"text":"Lists and tables","path":"/design-guidelines/usage-and-behavior/lists-and-tables"},{"text":"Login","path":"/design-guidelines/usage-and-behavior/login"},{"text":"Modal dialog","path":"/design-guidelines/usage-and-behavior/modal"},{"text":"Navigation system","path":"/design-guidelines/usage-and-behavior/navigation-system"},{"text":"Progress bar","path":"/design-guidelines/usage-and-behavior/progress-bar"},{"text":"Toolbar","path":"/design-guidelines/usage-and-behavior/toolbar"},{"text":"Wizard","path":"/design-guidelines/usage-and-behavior/wizard"}]}},{"node":{"text":"Content","path":"/design-guidelines/content","subNav":[{"text":"Writing","path":"/design-guidelines/content/writing"},{"text":"Voice","path":"/design-guidelines/content/voice-and-tone"},{"text":"Style guide","path":"/design-guidelines/content/grammar-and-terminology"}]}}]}},"pageContext":{"title":"FormSelect","fileAbsolutePath":"/home/travis/build/patternfly/patternfly-org/packages/patternfly-4/_repos/react-core/src/components/FormSelect/FormSelect.md","pathRegex":"/FormSelect/.*/","reactUrl":"formselect"}}