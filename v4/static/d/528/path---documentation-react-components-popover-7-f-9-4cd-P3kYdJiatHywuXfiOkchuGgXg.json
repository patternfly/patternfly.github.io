{"data":{"mdx":{"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Popover\",\n  \"cssPrefix\": \"pf-c-popover\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"simple-popover\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#simple-popover\",\n    \"aria-label\": \"simple popover permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Simple popover\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { Popover, PopoverPosition, Checkbox, Button } from '@patternfly/react-core';\\n\\nSimplePopover = () => (\\n  <Popover\\n    position=\\\"right\\\"\\n    headerContent={<div>Popover Header</div>}\\n    bodyContent={\\n      <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam id feugiat augue, nec fringilla turpis.</div>\\n    }\\n    footerContent=\\\"Popover Footer\\\"\\n  >\\n    <Button>Toggle Popover</Button>\\n  </Popover>\\n);\\n\")), mdx(\"h2\", {\n    \"id\": \"advanced-popover\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#advanced-popover\",\n    \"aria-label\": \"advanced popover permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Advanced popover\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { Popover, PopoverPosition, Checkbox, Button } from '@patternfly/react-core';\\n\\nclass AdvancedPopover extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      position: PopoverPosition.top,\\n      show: false,\\n      keepInViewChecked: true\\n    };\\n    this.handleClick = () => {\\n      this.setState({\\n        show: !this.state.show\\n      });\\n    };\\n    this.handleKeepInViewChange = checked => {\\n      this.setState({ keepInViewChecked: checked });\\n    };\\n    this.handleProgrammaticChange = checked => {\\n      this.setState({\\n        show: checked\\n      });\\n    };\\n    this.shouldClose = tip => {\\n      this.setState({ show: false });\\n    };\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <div>\\n          <span style={{ paddingRight: '10px' }}>Popover Position</span>\\n          <select\\n            onChange={event => {\\n              this.setState({ position: event.target.value });\\n            }}\\n          >\\n            {Object.keys(PopoverPosition).map(key => (\\n              <option key={key} value={PopoverPosition[key]}>\\n                {PopoverPosition[key]}\\n              </option>\\n            ))}\\n          </select>\\n          <Checkbox\\n            label=\\\"Flip popover if the position falls outside the view\\\"\\n            isChecked={this.state.keepInViewChecked}\\n            onChange={this.handleKeepInViewChange}\\n            aria-label=\\\"Keep in view\\\"\\n            id=\\\"check-3\\\"\\n          />\\n          <Checkbox\\n            label=\\\"Toggle popover from outside\\\"\\n            isChecked={this.state.show}\\n            onChange={this.handleProgrammaticChange}\\n            aria-label=\\\"Toggle popover from outside\\\"\\n            id=\\\"check-4\\\"\\n          />\\n        </div>\\n\\n        <div style={{ margin: '180px 0px 0px 270px' }}>\\n          <Popover\\n            position={this.state.position}\\n            isVisible={this.state.show}\\n            shouldClose={this.shouldClose}\\n            enableFlip={this.state.keepInViewChecked}\\n            appendTo={() => document.getElementById('___gatsby')}\\n            headerContent={<div>Popover Header</div>}\\n            bodyContent={\\n              <div>\\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam id feugiat augue, nec fringilla turpis.\\n              </div>\\n            }\\n            footerContent=\\\"Popover Footer\\\"\\n          >\\n            <Button onClick={this.handleClick}>Toggle Popover</Button>\\n          </Popover>\\n        </div>\\n      </div>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"popover-headless\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#popover-headless\",\n    \"aria-label\": \"popover headless permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Popover (headless)\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { Popover, PopoverPosition, Checkbox, Button } from '@patternfly/react-core';\\n\\nHeadlessPopover = () => (\\n  <Popover\\n    position=\\\"right\\\"\\n    bodyContent={\\n      <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam id feugiat augue, nec fringilla turpis.</div>\\n    }\\n    aria-label=\\\"Headless Popover\\\"\\n    footerContent=\\\"Popover Footer\\\"\\n  >\\n    <Button>Toggle Popover</Button>\\n  </Popover>\\n);\\n\")));\n}\nMDXContent.isMDXComponent = true;"},"frontmatter":{"title":"Popover","section":null,"cssPrefix":"pf-c-popover"}},"metadata":{"edges":[{"node":{"path":"src/components/Popover/Popover.js","name":"Popover","description":"","props":[{"name":"position","description":"Popover position","required":false,"type":{"name":"enum"},"defaultValue":{"value":"'top'"}},{"name":"enableFlip","description":"If true, tries to keep the popover in view by flipping it if necessary","required":false,"type":{"name":"bool"},"defaultValue":{"value":"true"}},{"name":"className","description":"Popover additional class","required":false,"type":{"name":"string"},"defaultValue":{"value":"null"}},{"name":"children","description":"The reference element to which the popover is relatively placed to","required":true,"type":{"name":"element"},"defaultValue":null},{"name":"aria-label","description":"Accessible label, required when header is not present","required":false,"type":{"name":"custom"},"defaultValue":{"value":"''"}},{"name":"headerContent","description":"Header content, leave empty for no header","required":false,"type":{"name":"node"},"defaultValue":{"value":"null"}},{"name":"bodyContent","description":"Body content","required":true,"type":{"name":"node"},"defaultValue":null},{"name":"footerContent","description":"","required":false,"type":{"name":"node"},"defaultValue":{"value":"null"}},{"name":"isVisible","description":"True to show the popover programmatically. Used in conjunction with the shouldClose prop.\nBy default, the popover child element handles click events automatically. If you want to control this programmatically,\nthe popover will not auto-close if the Close button is clicked, ESC key is used, or if a click occurs outside the popover.\nInstead, the consumer is responsible for closing the popover themselves by adding a callback listener for the shouldClose prop.","required":false,"type":{"name":"bool"},"defaultValue":{"value":"null"}},{"name":"shouldClose","description":"Callback function that is only invoked when isVisible is also controlled. Called when the popover Close button is\nclicked or the ESC key is used","required":false,"type":{"name":"func"},"defaultValue":{"value":"() => undefined"}},{"name":"appendTo","description":"The element to append the popover to, defaults to body","required":false,"type":{"name":"union"},"defaultValue":{"value":"() => document.body"}},{"name":"hideOnOutsideClick","description":"Hides the popover when a click occurs outside (only works if isVisible is not controlled by the user)","required":false,"type":{"name":"bool"},"defaultValue":{"value":"true"}},{"name":"onHide","description":"Lifecycle function invoked when the popover begins to transition out.","required":false,"type":{"name":"func"},"defaultValue":{"value":"() => undefined"}},{"name":"onHidden","description":"Lifecycle function invoked when the popover has fully transitioned out.","required":false,"type":{"name":"func"},"defaultValue":{"value":"() => undefined"}},{"name":"onShow","description":"Lifecycle function invoked when the popover begins to transition in.","required":false,"type":{"name":"func"},"defaultValue":{"value":"() => undefined"}},{"name":"onShown","description":"Lifecycle function invoked when the popover has fully transitioned in.","required":false,"type":{"name":"func"},"defaultValue":{"value":"() => undefined"}},{"name":"onMount","description":"Lifecycle function invoked when the popover has been mounted to the DOM.","required":false,"type":{"name":"func"},"defaultValue":{"value":"() => undefined"}},{"name":"zIndex","description":"z-index of the popover","required":false,"type":{"name":"number"},"defaultValue":{"value":"9999"}},{"name":"maxWidth","description":"Maximum width of the tooltip (default 18.75rem)","required":false,"type":{"name":"string"},"defaultValue":{"value":"popoverMaxWidth && popoverMaxWidth.value"}},{"name":"closeBtnAriaLabel","description":"Aria label for the Close button","required":false,"type":{"name":"string"},"defaultValue":{"value":"'Close'"}}]}},{"node":{"path":"src/components/Popover/PopoverArrow.js","name":"PopoverArrow","description":"","props":[{"name":"className","description":"Popover arrow additional className","required":false,"type":{"name":"string"},"defaultValue":{"value":"null"}},{"name":"","description":"Additional props are spread to the container <div>","required":false,"type":{"name":"any"},"defaultValue":null}]}},{"node":{"path":"src/components/Popover/PopoverBody.js","name":"PopoverBody","description":"","props":[{"name":"id","description":"PopoverBody id","required":true,"type":{"name":"string"},"defaultValue":null},{"name":"children","description":"PopoverBody content","required":true,"type":{"name":"node"},"defaultValue":null}]}},{"node":{"path":"src/components/Popover/PopoverCloseButton.js","name":"PopoverCloseButton","description":"","props":[{"name":"onClose","description":"PopoverCloseButton onClose function","required":true,"type":{"name":"func"},"defaultValue":null},{"name":"aria-label","description":"Aria label for the Close button","required":true,"type":{"name":"string"},"defaultValue":null}]}},{"node":{"path":"src/components/Popover/PopoverContent.js","name":"PopoverContent","description":"","props":[{"name":"className","description":"PopoverContent additional class","required":false,"type":{"name":"string"},"defaultValue":{"value":"null"}},{"name":"children","description":"PopoverContent content","required":true,"type":{"name":"node"},"defaultValue":null},{"name":"","description":"Additional props are spread to the container <div>","required":false,"type":{"name":"any"},"defaultValue":null}]}},{"node":{"path":"src/components/Popover/PopoverDialog.js","name":"PopoverDialog","description":"","props":[{"name":"position","description":"PopoverDialog position","required":false,"type":{"name":"enum"},"defaultValue":{"value":"'top'"}},{"name":"className","description":"PopoverDialog additional class","required":false,"type":{"name":"string"},"defaultValue":{"value":"null"}},{"name":"children","description":"PopoverDialog body","required":true,"type":{"name":"node"},"defaultValue":null},{"name":"","description":"Additional props are spread to the container <div>","required":false,"type":{"name":"any"},"defaultValue":null}]}},{"node":{"path":"src/components/Popover/PopoverFooter.js","name":"PopoverFooter","description":"","props":[]}},{"node":{"path":"src/components/Popover/PopoverHeader.js","name":"PopoverHeader","description":"","props":[{"name":"id","description":"popover id","required":true,"type":{"name":"string"},"defaultValue":null},{"name":"children","description":"header node","required":true,"type":{"name":"node"},"defaultValue":null}]}}]},"description":{"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"reactUrl\": \"popover\",\n  \"htmlUrl\": \"popover\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Use a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"popover\"), \" to display content in a new window that overlays the current page. Unlike a modal, a popover does not block the current page. By default clicking anywhere outside of the popover will dismiss it.\"));\n}\nMDXContent.isMDXComponent = true;"}},"allGetStartedNavigationJson":{"edges":[{"node":{"text":"About","path":"/get-started/about"}},{"node":{"text":"Develop","path":"/get-started/developers"}},{"node":{"text":"Design","path":"/get-started/designers"}},{"node":{"text":"Migrate from PatternFly 3","path":"/get-started/migrate"}},{"node":{"text":"Accessibility guide","path":"/get-started/accessibility-guide"}}]},"allDesignGuidelinesNavigationJson":{"edges":[{"node":{"text":"Styles","path":"/design-guidelines/styles/","subNav":[{"text":"Colors","path":"/design-guidelines/styles/colors"},{"text":"Colors for charts","path":"/design-guidelines/styles/colors-for-charts"},{"text":"Icons","path":"/design-guidelines/styles/icons"},{"text":"Typography","path":"/design-guidelines/styles/typography"},{"text":"Spacers","path":"/design-guidelines/styles/spacers"}]}},{"node":{"text":"Usage and behavior","path":"/design-guidelines/usage-and-behavior/","subNav":[{"text":"About modal","path":"/design-guidelines/usage-and-behavior/about-modal"},{"text":"Alerts and notifications","path":"/design-guidelines/usage-and-behavior/alerts-and-notifications"},{"text":"Buttons and links","path":"/design-guidelines/usage-and-behavior/buttons-and-links"},{"text":"Charts","path":"/design-guidelines/usage-and-behavior/charts"},{"text":"Data input","path":"/design-guidelines/usage-and-behavior/data-input"},{"text":"Empty state","path":"/design-guidelines/usage-and-behavior/empty-state"},{"text":"Filters","path":"/design-guidelines/usage-and-behavior/filters"},{"text":"Forms","path":"/design-guidelines/usage-and-behavior/forms"},{"text":"Lists and tables","path":"/design-guidelines/usage-and-behavior/lists-and-tables"},{"text":"Login","path":"/design-guidelines/usage-and-behavior/login"},{"text":"Modal dialog","path":"/design-guidelines/usage-and-behavior/modal"},{"text":"Navigation system","path":"/design-guidelines/usage-and-behavior/navigation-system"},{"text":"Progress bar","path":"/design-guidelines/usage-and-behavior/progress-bar"},{"text":"Toolbar","path":"/design-guidelines/usage-and-behavior/toolbar"},{"text":"Wizard","path":"/design-guidelines/usage-and-behavior/wizard"}]}},{"node":{"text":"Content","path":"/design-guidelines/content","subNav":[{"text":"Writing","path":"/design-guidelines/content/writing"},{"text":"Voice","path":"/design-guidelines/content/voice-and-tone"},{"text":"Style guide","path":"/design-guidelines/content/grammar-and-terminology"}]}}]}},"pageContext":{"title":"Popover","fileAbsolutePath":"/home/travis/build/patternfly/patternfly-org/packages/patternfly-4/_repos/react-core/src/components/Popover/Popover.md","pathRegex":"/Popover/.*/","reactUrl":"popover"}}