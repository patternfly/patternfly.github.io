{"data":{"mdx":{"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Nav\",\n  \"cssPrefix\": \"pf-c-nav\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"simple-nav\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#simple-nav\",\n    \"aria-label\": \"simple nav permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Simple nav\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport {\\n  Nav,\\n  NavExpandable,\\n  NavItem,\\n  NavItemSeparator,\\n  NavList,\\n  NavGroup,\\n  NavVariants\\n} from '@patternfly/react-core';\\n\\nclass NavSimpleList extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeItem: 0\\n    };\\n    this.onSelect = result => {\\n      this.setState({\\n        activeItem: result.itemId\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { activeItem } = this.state;\\n    return (\\n      <Nav onSelect={this.onSelect} id=\\\"nav-primary-simple\\\">\\n        <NavList id=\\\"nav-list-simple\\\" variant={NavVariants.simple}>\\n          <NavItem id=\\\"simple-link1\\\" preventDefault to=\\\"#simple-link1\\\" itemId={0} isActive={activeItem === 0}>\\n            Link 1\\n          </NavItem>\\n          <NavItem id=\\\"simple-link2\\\" preventDefault to=\\\"#simple-link2\\\" itemId={1} isActive={activeItem === 1}>\\n            Link 2\\n          </NavItem>\\n          <NavItem id=\\\"simple-link3\\\" preventDefault to=\\\"#simple-link3\\\" itemId={2} isActive={activeItem === 2}>\\n            Link 3\\n          </NavItem>\\n          <NavItemSeparator />\\n          <NavItem id=\\\"simple-link4\\\" preventDefault to=\\\"#simple-link4\\\" itemId={3} isActive={activeItem === 3}>\\n            Link 4\\n          </NavItem>\\n        </NavList>\\n      </Nav>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"nav-grouped\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#nav-grouped\",\n    \"aria-label\": \"nav grouped permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Nav (grouped)\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport {\\n  Nav,\\n  NavExpandable,\\n  NavItem,\\n  NavItemSeparator,\\n  NavList,\\n  NavGroup,\\n  NavVariants\\n} from '@patternfly/react-core';\\n\\nclass NavGroupedList extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeItem: 'grp-1_itm-1'\\n    };\\n    this.onSelect = result => {\\n      this.setState({\\n        activeItem: result.itemId\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { activeItem } = this.state;\\n    return (\\n      <Nav onSelect={this.onSelect}>\\n        <NavGroup title=\\\"Section title 1\\\">\\n          <NavItem preventDefault to=\\\"#grouped-1\\\" itemId=\\\"grp-1_itm-1\\\" isActive={activeItem === 'grp-1_itm-1'}>\\n            Link 1\\n          </NavItem>\\n          <NavItem preventDefault to=\\\"#grouped-2\\\" itemId=\\\"grp-1_itm-2\\\" isActive={activeItem === 'grp-1_itm-2'}>\\n            Link 2\\n          </NavItem>\\n          <NavItem preventDefault to=\\\"#grouped-3\\\" itemId=\\\"grp-1_itm-3\\\" isActive={activeItem === 'grp-1_itm-3'}>\\n            Link 3\\n          </NavItem>\\n        </NavGroup>\\n        <NavGroup title=\\\"Section title 2\\\">\\n          <NavItem preventDefault to=\\\"#grouped-4\\\" itemId=\\\"grp-2_itm-1\\\" isActive={activeItem === 'grp-2_itm-1'}>\\n            Link 1\\n          </NavItem>\\n          <NavItem preventDefault to=\\\"#grouped-5\\\" itemId=\\\"grp-2_itm-2\\\" isActive={activeItem === 'grp-2_itm-2'}>\\n            Link 2\\n          </NavItem>\\n          <NavItem preventDefault to=\\\"#grouped-6\\\" itemId=\\\"grp-2_itm-3\\\" isActive={activeItem === 'grp-2_itm-3'}>\\n            Link 3\\n          </NavItem>\\n        </NavGroup>\\n      </Nav>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"nav-default\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#nav-default\",\n    \"aria-label\": \"nav default permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Nav (default)\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport {\\n  Nav,\\n  NavExpandable,\\n  NavItem,\\n  NavItemSeparator,\\n  NavList,\\n  NavGroup,\\n  NavVariants\\n} from '@patternfly/react-core';\\n\\nclass NavDefaultList extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeItem: 0\\n    };\\n    this.onSelect = result => {\\n      this.setState({\\n        activeItem: result.itemId\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { activeItem } = this.state;\\n    return (\\n      <Nav onSelect={this.onSelect}>\\n        <NavList>\\n          <NavItem id=\\\"default-link1\\\" to=\\\"#default-link1\\\" itemId={0} isActive={activeItem === 0}>\\n            Link 1\\n          </NavItem>\\n          <NavItem id=\\\"default-link2\\\" to=\\\"#default-link2\\\" itemId={1} isActive={activeItem === 1}>\\n            Link 2\\n          </NavItem>\\n          <NavItem id=\\\"default-link3\\\" to=\\\"#default-link3\\\" itemId={2} isActive={activeItem === 2}>\\n            Link 3\\n          </NavItem>\\n          <NavItem id=\\\"default-link4\\\" to=\\\"#default-link4\\\" itemId={3} isActive={activeItem === 3}>\\n            Link 4\\n          </NavItem>\\n        </NavList>\\n      </Nav>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"nav-expandable\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#nav-expandable\",\n    \"aria-label\": \"nav expandable permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Nav (expandable)\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport {\\n  Nav,\\n  NavExpandable,\\n  NavItem,\\n  NavItemSeparator,\\n  NavList,\\n  NavGroup,\\n  NavVariants\\n} from '@patternfly/react-core';\\n\\nclass NavExpandableList extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeGroup: 'grp-1',\\n      activeItem: 'grp-1_itm-1'\\n    };\\n    this.onSelect = result => {\\n      this.setState({\\n        activeGroup: result.groupId,\\n        activeItem: result.itemId\\n      });\\n    };\\n    this.onToggle = result => {\\n      // eslint-disable-next-line no-console\\n      console.log(`Group ${result.groupId} expanded? ${result.isExpanded}`);\\n    };\\n    this.handleItemOnclick = (event, itemId, groupId) => {\\n      // eslint-disable-next-line no-console\\n      console.log(`my own click handler on ${itemId}`);\\n    };\\n  }\\n\\n  render() {\\n    const { activeGroup, activeItem } = this.state;\\n    return (\\n      <Nav onSelect={this.onSelect} onToggle={this.onToggle}>\\n        <NavList>\\n          <NavExpandable title=\\\"Link 1\\\" groupId=\\\"grp-1\\\" isActive={activeGroup === 'grp-1'} isExpanded>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#expandable-1\\\"\\n              groupId=\\\"grp-1\\\"\\n              itemId=\\\"grp-1_itm-1\\\"\\n              isActive={activeItem === 'grp-1_itm-1'}\\n            >\\n              Subnav Link 1\\n            </NavItem>\\n            <NavItemSeparator />\\n            <NavItem preventDefault groupId=\\\"grp-1\\\" itemId=\\\"grp-1_itm-2\\\" isActive={activeItem === 'grp-1_itm-2'}>\\n              Subnav Link 2\\n            </NavItem>\\n            <NavItem to=\\\"#expandable-3\\\" groupId=\\\"grp-1\\\" itemId=\\\"grp-1_itm-3\\\" isActive={activeItem === 'grp-1_itm-3'}>\\n              Subnav Link 3\\n            </NavItem>\\n          </NavExpandable>\\n          <NavExpandable title=\\\"Link 2\\\" groupId=\\\"grp-2\\\" isActive={activeGroup === 'grp-2'} isExpanded>\\n            <NavItem\\n              preventDefault\\n              onClick={this.handleItemOnclick}\\n              groupId=\\\"grp-2\\\"\\n              itemId=\\\"own-item-handler\\\"\\n              isActive={activeItem === 'own-item-handler'}\\n            >\\n              Custom onClick\\n            </NavItem>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#expandable-4\\\"\\n              groupId=\\\"grp-2\\\"\\n              itemId=\\\"grp-2_itm-1\\\"\\n              isActive={activeItem === 'grp-2_itm-1'}\\n            >\\n              Subnav Link 1\\n            </NavItem>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#expandable-5\\\"\\n              groupId=\\\"grp-2\\\"\\n              itemId=\\\"grp-2_itm-2\\\"\\n              isActive={activeItem === 'grp-2_itm-2'}\\n            >\\n              Subnav Link 2\\n            </NavItem>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#expandable-6\\\"\\n              groupId=\\\"grp-2\\\"\\n              itemId=\\\"grp-2_itm-3\\\"\\n              isActive={activeItem === 'grp-2_itm-3'}\\n            >\\n              Subnav Link 3\\n            </NavItem>\\n          </NavExpandable>\\n        </NavList>\\n      </Nav>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"nav-expandabletitles\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#nav-expandabletitles\",\n    \"aria-label\": \"nav expandabletitles permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Nav (expandable+titles)\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport {\\n  Nav,\\n  NavExpandable,\\n  NavItem,\\n  NavItemSeparator,\\n  NavList,\\n  NavGroup,\\n  NavVariants\\n} from '@patternfly/react-core';\\n\\nclass NavExpandableTitlesList extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeGroup: 'grp-1',\\n      activeItem: 'grp-1_itm-1'\\n    };\\n    this.onSelect = result => {\\n      this.setState({\\n        activeGroup: result.groupId,\\n        activeItem: result.itemId\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { activeGroup, activeItem } = this.state;\\n    return (\\n      <Nav onSelect={this.onSelect}>\\n        <NavList>\\n          <NavExpandable title=\\\"Link 1\\\" srText=\\\"SR Link\\\" groupId=\\\"grp-1\\\" isActive={activeGroup === 'grp-1'} isExpanded>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#sr-expandable-1\\\"\\n              groupId=\\\"grp-1\\\"\\n              itemId=\\\"grp-1_itm-1\\\"\\n              isActive={activeItem === 'grp-1_itm-1'}\\n            >\\n              Subnav Link 1\\n            </NavItem>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#sr-expandable-2\\\"\\n              groupId=\\\"grp-1\\\"\\n              itemId=\\\"grp-1_itm-2\\\"\\n              isActive={activeItem === 'grp-1_itm-2'}\\n            >\\n              Subnav Link 2\\n            </NavItem>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#sr-expandable-3\\\"\\n              groupId=\\\"grp-1\\\"\\n              itemId=\\\"grp-1_itm-3\\\"\\n              isActive={activeItem === 'grp-1_itm-3'}\\n            >\\n              Subnav Link 3\\n            </NavItem>\\n          </NavExpandable>\\n          <NavExpandable title=\\\"Link 2\\\" srText=\\\"SR Link 2\\\" groupId=\\\"grp-2\\\" isActive={activeGroup === 'grp-2'}>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#sr-expandable-4\\\"\\n              groupId=\\\"grp-2\\\"\\n              itemId=\\\"grp-2_itm-1\\\"\\n              isActive={activeItem === 'grp-2_itm-1'}\\n            >\\n              Subnav Link 1\\n            </NavItem>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#sr-expandable-5\\\"\\n              groupId=\\\"grp-2\\\"\\n              itemId=\\\"grp-2_itm-2\\\"\\n              isActive={activeItem === 'grp-2_itm-2'}\\n            >\\n              Subnav Link 2\\n            </NavItem>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#sr-expandable-6\\\"\\n              groupId=\\\"grp-2\\\"\\n              itemId=\\\"grp-2_itm-3\\\"\\n              isActive={activeItem === 'grp-2_itm-3'}\\n            >\\n              Subnav Link 3\\n            </NavItem>\\n          </NavExpandable>\\n        </NavList>\\n      </Nav>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"nav-mixed\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#nav-mixed\",\n    \"aria-label\": \"nav mixed permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Nav (mixed)\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport {\\n  Nav,\\n  NavExpandable,\\n  NavItem,\\n  NavItemSeparator,\\n  NavList,\\n  NavGroup,\\n  NavVariants\\n} from '@patternfly/react-core';\\n\\nclass NavMixedList extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeGroup: '',\\n      activeItem: 'itm-1'\\n    };\\n    this.onSelect = result => {\\n      this.setState({\\n        activeGroup: result.groupId,\\n        activeItem: result.itemId\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { activeGroup, activeItem } = this.state;\\n    return (\\n      <Nav onSelect={this.onSelect}>\\n        <NavList>\\n          <NavItem preventDefault to=\\\"#mixed-1\\\" itemId=\\\"itm-1\\\" isActive={activeItem === 'itm-1'}>\\n            Link 1 (not expandable)\\n          </NavItem>\\n          <NavExpandable title=\\\"Link 2 - expandable\\\" groupId=\\\"grp-1\\\" isActive={activeGroup === 'grp-1'}>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#mixed-2\\\"\\n              groupId=\\\"grp-1\\\"\\n              itemId=\\\"grp-1_itm-1\\\"\\n              isActive={activeItem === 'grp-1_itm-1'}\\n            >\\n              Link 1\\n            </NavItem>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#mixed-3\\\"\\n              groupId=\\\"grp-1\\\"\\n              itemId=\\\"grp-1_itm-2\\\"\\n              isActive={activeItem === 'grp-1_itm-2'}\\n            >\\n              Link 2\\n            </NavItem>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#mixed-4\\\"\\n              groupId=\\\"grp-1\\\"\\n              itemId=\\\"grp-1_itm-3\\\"\\n              isActive={activeItem === 'grp-1_itm-3'}\\n            >\\n              Link 3\\n            </NavItem>\\n          </NavExpandable>\\n          <NavExpandable title=\\\"Link 3 - expandable\\\" groupId=\\\"grp-2\\\" isActive={activeGroup === 'grp-2'}>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#mixed-5\\\"\\n              groupId=\\\"grp-2\\\"\\n              itemId=\\\"grp-2_itm-1\\\"\\n              isActive={activeItem === 'grp-2_itm-1'}\\n            >\\n              Link 1\\n            </NavItem>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#mixed-6\\\"\\n              groupId=\\\"grp-2\\\"\\n              itemId=\\\"grp-2_itm-2\\\"\\n              isActive={activeItem === 'grp-2_itm-2'}\\n            >\\n              Link 2\\n            </NavItem>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#mixed-7\\\"\\n              groupId=\\\"grp-2\\\"\\n              itemId=\\\"grp-2_itm-3\\\"\\n              isActive={activeItem === 'grp-2_itm-3'}\\n            >\\n              Link 3\\n            </NavItem>\\n          </NavExpandable>\\n        </NavList>\\n      </Nav>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"nav-horizontal\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#nav-horizontal\",\n    \"aria-label\": \"nav horizontal permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Nav (horizontal)\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport {\\n  Nav,\\n  NavExpandable,\\n  NavItem,\\n  NavItemSeparator,\\n  NavList,\\n  NavGroup,\\n  NavVariants\\n} from '@patternfly/react-core';\\n\\nclass NavHorizontalList extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeItem: 0\\n    };\\n    this.onSelect = result => {\\n      this.setState({\\n        activeItem: result.itemId\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { activeItem } = this.state;\\n    return (\\n      <div style={{ backgroundColor: '#292e34', padding: '1rem' }}>\\n        <Nav onSelect={this.onSelect}>\\n          <NavList variant={NavVariants.horizontal}>\\n            <NavItem preventDefault to=\\\"#horizontal-link1\\\" itemId={0} isActive={activeItem === 0}>\\n              Item 1\\n            </NavItem>\\n            <NavItem preventDefault to=\\\"#horizontal-link2\\\" itemId={1} isActive={activeItem === 1}>\\n              Item 2\\n            </NavItem>\\n            <NavItem preventDefault to=\\\"#horizontal-link3\\\" itemId={2} isActive={activeItem === 2}>\\n              Item 3\\n            </NavItem>\\n          </NavList>\\n        </Nav>\\n      </div>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"nav-tertiary\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#nav-tertiary\",\n    \"aria-label\": \"nav tertiary permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Nav (tertiary)\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport {\\n  Nav,\\n  NavExpandable,\\n  NavItem,\\n  NavItemSeparator,\\n  NavList,\\n  NavGroup,\\n  NavVariants\\n} from '@patternfly/react-core';\\n\\nclass NavTertiaryList extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeItem: 0\\n    };\\n    this.onSelect = result => {\\n      this.setState({\\n        activeItem: result.itemId\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { activeItem } = this.state;\\n    return (\\n      <Nav onSelect={this.onSelect}>\\n        <NavList variant={NavVariants.tertiary}>\\n          <NavItem preventDefault to=\\\"#tertiary-link1\\\" itemId={0} isActive={activeItem === 0}>\\n            Link 1\\n          </NavItem>\\n          <NavItem preventDefault to=\\\"#tertiary-link2\\\" itemId={1} isActive={activeItem === 1}>\\n            Link 2\\n          </NavItem>\\n          <NavItem preventDefault to=\\\"#tertiary-link3\\\" itemId={2} isActive={activeItem === 2}>\\n            Link 3\\n          </NavItem>\\n          <NavItem preventDefault to=\\\"#tertiary-link4\\\" itemId={3} isActive={activeItem === 3}>\\n            Link 4\\n          </NavItem>\\n        </NavList>\\n      </Nav>\\n    );\\n  }\\n}\\n\")));\n}\nMDXContent.isMDXComponent = true;"},"frontmatter":{"title":"Nav","section":null,"cssPrefix":"pf-c-nav"}},"metadata":{"edges":[{"node":{"path":"src/components/Nav/Nav.js","name":"Nav","description":"","props":[{"name":"children","description":"Anything that can be rendered inside of the nav","required":false,"type":{"name":"node"},"defaultValue":{"value":"null"}},{"name":"className","description":"Additional classes added to the container","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"onSelect","description":"Callback for updating when item selection changes","required":false,"type":{"name":"func"},"defaultValue":{"value":"() => undefined"}},{"name":"onToggle","description":"Callback for when a list is expanded or collapsed","required":false,"type":{"name":"func"},"defaultValue":{"value":"() => undefined"}},{"name":"aria-label","description":"Accessibility label","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"","description":"Additional props are spread to the container <nav>","required":false,"type":{"name":"any"},"defaultValue":null}]}},{"node":{"path":"src/components/Nav/NavExpandable.js","name":"NavExpandable","description":"","props":[{"name":"title","description":"Title shown for the expandable list","required":true,"type":{"name":"string"},"defaultValue":null},{"name":"srText","description":"If defined, screen readers will read this text instead of the list title","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"isExpanded","description":"Boolean to programatically expand or collapse section","required":false,"type":{"name":"bool"},"defaultValue":{"value":"false"}},{"name":"children","description":"Anything that can be rendered inside of the expandable list","required":false,"type":{"name":"node"},"defaultValue":{"value":"null"}},{"name":"className","description":"Additional classes added to the container","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"groupId","description":"Group identifier, will be returned with the onToggle and onSelect callback passed to the Nav component","required":false,"type":{"name":"union"},"defaultValue":{"value":"null"}},{"name":"isActive","description":"If true makes the expandable list title active","required":false,"type":{"name":"bool"},"defaultValue":{"value":"false"}},{"name":"id","description":"Identifier to use for the section aria label","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"","description":"Additional props are spread to the container <li>","required":false,"type":{"name":"any"},"defaultValue":null},{"name":"onExpand","description":"allow consumer to optionally override this callback and manage expand state externally","required":false,"type":{"name":"func"},"defaultValue":{"value":"undefined"}}]}},{"node":{"path":"src/components/Nav/NavGroup.js","name":"NavGroup","description":"","props":[{"name":"title","description":"Title shown for the group","required":true,"type":{"name":"string"},"defaultValue":null},{"name":"children","description":"Anything that can be rendered inside of the group","required":false,"type":{"name":"node"},"defaultValue":{"value":"null"}},{"name":"className","description":"Additional classes added to the container","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"id","description":"Identifier to use for the section aria label","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"","description":"Additional props are spread to the container <section>","required":false,"type":{"name":"any"},"defaultValue":null}]}},{"node":{"path":"src/components/Nav/NavItem.js","name":"NavItem","description":"","props":[{"name":"children","description":"Content rendered inside the nav item","required":false,"type":{"name":"node"},"defaultValue":{"value":"null"}},{"name":"className","description":"Additional classes added to the nav item","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"to","description":"Target navigation link","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"isActive","description":"Flag indicating whether the item is active","required":false,"type":{"name":"bool"},"defaultValue":{"value":"false"}},{"name":"groupId","description":"Group identifier, will be returned with the onToggle and onSelect callback passed to the Nav component","required":false,"type":{"name":"union"},"defaultValue":{"value":"null"}},{"name":"itemId","description":"Item identifier, will be returned with the onToggle and onSelect callback passed to the Nav component","required":false,"type":{"name":"union"},"defaultValue":{"value":"null"}},{"name":"preventDefault","description":"If true prevents the default anchor link action to occur. Set to true if you want to handle navigation yourself.","required":false,"type":{"name":"bool"},"defaultValue":{"value":"false"}},{"name":"onClick","description":"Callback for item click","required":false,"type":{"name":"func"},"defaultValue":{"value":"null"}},{"name":"","description":"Additional props are spread to the container <a>","required":false,"type":{"name":"any"},"defaultValue":null}]}},{"node":{"path":"src/components/Nav/NavItemSeparator.js","name":"NavItemSeparator","description":"","props":[{"name":"className","description":"Additional classes added to the nav item separator","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"","description":"Additional props are spread to the container <li>","required":false,"type":{"name":"any"},"defaultValue":null}]}},{"node":{"path":"src/components/Nav/NavList.js","name":"NavList","description":"","props":[{"name":"variant","description":"Indicates the list type.","required":false,"type":{"name":"enum"},"defaultValue":{"value":"'default'"}},{"name":"children","description":"Children nodes","required":false,"type":{"name":"node"},"defaultValue":{"value":"null"}},{"name":"className","description":"Additional classes added to the list","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"","description":"Additional props are spread to the container <ul>","required":false,"type":{"name":"any"},"defaultValue":null}]}},{"node":{"path":"src/components/Nav/NavToggle.js","name":"NavToggle","description":"","props":[{"name":"children","description":"","required":true,"type":{"name":"func"},"defaultValue":null},{"name":"isExpanded","description":"","required":false,"type":{"name":"bool"},"defaultValue":{"value":"false"}},{"name":"groupId","description":"","required":false,"type":{"name":"union"},"defaultValue":{"value":"0"}},{"name":"onToggle","description":"","required":false,"type":{"name":"func"},"defaultValue":{"value":"() => undefined"}},{"name":"onExpand","description":"","required":false,"type":{"name":"func"},"defaultValue":{"value":"() => undefined"}}]}}]},"description":{"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"reactUrl\": \"nav\",\n  \"htmlUrl\": \"nav\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Navigation\"), \" is used to organize an application\\u2019s structure and content, making it easy to find information and accomplish tasks. Navigation communicates relationships, context, and actions a user can take within an application. Related design guidelines: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"design-guidelines/usage-and-behavior/navigation-system\"\n  }), \"Navigation system\")));\n}\nMDXContent.isMDXComponent = true;"}},"allGetStartedNavigationJson":{"edges":[{"node":{"text":"About","path":"/get-started/about"}},{"node":{"text":"Develop","path":"/get-started/developers"}},{"node":{"text":"Design","path":"/get-started/designers"}},{"node":{"text":"Migrate from PatternFly 3","path":"/get-started/migrate"}},{"node":{"text":"Accessibility guide","path":"/get-started/accessibility-guide"}}]},"allDesignGuidelinesNavigationJson":{"edges":[{"node":{"text":"Styles","path":"/design-guidelines/styles/","subNav":[{"text":"Colors","path":"/design-guidelines/styles/colors"},{"text":"Colors for charts","path":"/design-guidelines/styles/colors-for-charts"},{"text":"Icons","path":"/design-guidelines/styles/icons"},{"text":"Typography","path":"/design-guidelines/styles/typography"},{"text":"Spacers","path":"/design-guidelines/styles/spacers"}]}},{"node":{"text":"Usage and behavior","path":"/design-guidelines/usage-and-behavior/","subNav":[{"text":"About modal","path":"/design-guidelines/usage-and-behavior/about-modal"},{"text":"Alerts and notifications","path":"/design-guidelines/usage-and-behavior/alerts-and-notifications"},{"text":"Buttons and links","path":"/design-guidelines/usage-and-behavior/buttons-and-links"},{"text":"Charts","path":"/design-guidelines/usage-and-behavior/charts"},{"text":"Data input","path":"/design-guidelines/usage-and-behavior/data-input"},{"text":"Empty state","path":"/design-guidelines/usage-and-behavior/empty-state"},{"text":"Filters","path":"/design-guidelines/usage-and-behavior/filters"},{"text":"Forms","path":"/design-guidelines/usage-and-behavior/forms"},{"text":"Lists and tables","path":"/design-guidelines/usage-and-behavior/lists-and-tables"},{"text":"Login","path":"/design-guidelines/usage-and-behavior/login"},{"text":"Modal dialog","path":"/design-guidelines/usage-and-behavior/modal"},{"text":"Navigation system","path":"/design-guidelines/usage-and-behavior/navigation-system"},{"text":"Progress bar","path":"/design-guidelines/usage-and-behavior/progress-bar"},{"text":"Toolbar","path":"/design-guidelines/usage-and-behavior/toolbar"},{"text":"Wizard","path":"/design-guidelines/usage-and-behavior/wizard"}]}},{"node":{"text":"Content","path":"/design-guidelines/content","subNav":[{"text":"Writing","path":"/design-guidelines/content/writing"},{"text":"Voice","path":"/design-guidelines/content/voice-and-tone"},{"text":"Style guide","path":"/design-guidelines/content/grammar-and-terminology"}]}}]}},"pageContext":{"title":"Nav","fileAbsolutePath":"/home/travis/build/patternfly/patternfly-org/packages/patternfly-4/_repos/react-core/src/components/Nav/Nav.md","pathRegex":"/Nav/.*/","reactUrl":"nav"}}