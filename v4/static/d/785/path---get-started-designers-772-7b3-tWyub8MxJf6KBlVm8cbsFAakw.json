{"data":{"mdx":{"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"path\": \"/get-started/designers\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"h1\", {\n    className: \"pf-c-title pf-m-4xl\"\n  }, \"Design with PatternFly\")), mdx(\"p\", null, mdx(\"p\", null, \"Before you begin, check out \", mdx(\"a\", {\n    href: \"/get-started/about\"\n  }, \"About PatternFly 4\"), \" to get acquainted with the basic elements of the design system.\")), mdx(\"p\", null, mdx(\"h1\", {\n    className: \"pf-c-title pf-m-3xl pf-u-mt-xl\"\n  }, \"Designing with PatternFly 4\")), mdx(\"p\", null, mdx(\"p\", null, \"PatternFly is made up of modular components that can be assembled in a variety of ways to build applications and interfaces, along with styles, standards, and design guidelines to help you choose and use the right components for your project.\")), mdx(\"p\", null, mdx(\"h1\", {\n    className: \"pf-c-title pf-m-xl pf-u-mt-xl\"\n  }, \"Start with styles\")), mdx(\"p\", null, mdx(\"p\", null, \"What typography should you be using? What about colors? Spacing? Check out styles to learn everything you need to know about our foundational design elements.\")), mdx(\"div\", {\n    className: \"link\"\n  }, mdx(\"a\", {\n    href: \"/design-guidelines/styles/icons\"\n  }, \"View styles\"), mdx(\"i\", {\n    className: \"blueArrow fas fa-arrow-right pf-u-mx-sm\"\n  })), mdx(\"p\", null, mdx(\"h1\", {\n    className: \"pf-c-title pf-m-xl pf-u-mt-xl\"\n  }, \"Get familiar with usage and behavior guidelines\")), mdx(\"p\", null, mdx(\"p\", null, \"Should you use a wizard or a form to solve this problem? How do you write a good button label? Which navigation makes the most sense? Check out our design guidelines to choose and use the right components for your use case.\")), mdx(\"div\", {\n    className: \"link\"\n  }, mdx(\"a\", {\n    href: \"/design-guidelines/usage-and-behavior/about-modal\"\n  }, \"View usage and behavior\"), mdx(\"i\", {\n    className: \"blueArrow fas fa-arrow-right pf-u-mx-sm\"\n  })), mdx(\"p\", null, mdx(\"h1\", {\n    className: \"pf-c-title pf-m-xl pf-u-mt-xl\"\n  }, \"Start building with components\")), mdx(\"p\", null, mdx(\"p\", null, \"What does a toolbar look like? What about a filter chip? Components are the building blocks of the design system. Check out individual component pages to view examples, understand states and behavior, and check out the code samples (if you\\u2019re into that kind of thing).\")), mdx(\"div\", {\n    className: \"link\"\n  }, mdx(\"a\", {\n    href: \"/documentation/core\"\n  }, \"View HTML/CSS components\"), mdx(\"i\", {\n    className: \"blueArrow fas fa-arrow-right pf-u-mx-sm\"\n  })), mdx(\"div\", {\n    className: \"link\"\n  }, mdx(\"a\", {\n    href: \"/documentation/react\"\n  }, \"View React components\"), mdx(\"i\", {\n    className: \"blueArrow fas fa-arrow-right pf-u-mx-sm\"\n  })), mdx(\"p\", null, mdx(\"h1\", {\n    className: \"pf-c-title pf-m-xl pf-u-mt-xl\"\n  }, \"Still feeling unsure? See all the pieces working together with demos.\")), mdx(\"p\", null, mdx(\"p\", null, \"What does it look like when you combine all the ingredients? Demos provide examples of a few common ways you might combine layouts and components to give you an idea what\\u2019s possible.\")), mdx(\"div\", {\n    className: \"link\"\n  }, mdx(\"a\", {\n    href: \"/documentation/core\"\n  }, \"View HTML/CSS demos\"), mdx(\"i\", {\n    className: \"blueArrow fas fa-arrow-right pf-u-mx-sm\"\n  })), mdx(\"div\", {\n    className: \"link\"\n  }, mdx(\"a\", {\n    href: \"/documentation/react\"\n  }, \"View React Demos\"), mdx(\"i\", {\n    className: \"blueArrow fas fa-arrow-right pf-u-mx-sm\"\n  })));\n}\nMDXContent.isMDXComponent = true;"},"frontmatter":{"path":"/get-started/designers"}},"allGetStartedNavigationJson":{"edges":[{"node":{"text":"About","path":"/get-started/about"}},{"node":{"text":"Develop","path":"/get-started/developers"}},{"node":{"text":"Design","path":"/get-started/designers"}}]},"allDesignGuidelinesNavigationJson":{"edges":[{"node":{"text":"Styles","path":"/design-guidelines/styles/","subNav":[{"text":"Colors","path":"/design-guidelines/styles/colors"},{"text":"Colors for charts","path":"/design-guidelines/styles/colors-for-charts"},{"text":"Icons","path":"/design-guidelines/styles/icons"},{"text":"Typography","path":"/design-guidelines/styles/typography"},{"text":"Spacers","path":"/design-guidelines/styles/spacers"}]}},{"node":{"text":"Usage and behavior","path":"/design-guidelines/usage-and-behavior/","subNav":[{"text":"About modal","path":"/design-guidelines/usage-and-behavior/about-modal"},{"text":"Alerts and notifications","path":"/design-guidelines/usage-and-behavior/alerts-and-notifications"},{"text":"Buttons and links","path":"/design-guidelines/usage-and-behavior/buttons-and-links"},{"text":"Charts","path":"/design-guidelines/usage-and-behavior/charts"},{"text":"Data input","path":"/design-guidelines/usage-and-behavior/data-input"},{"text":"Empty state","path":"/design-guidelines/usage-and-behavior/empty-state"},{"text":"Filters","path":"/design-guidelines/usage-and-behavior/filters"},{"text":"Forms","path":"/design-guidelines/usage-and-behavior/forms"},{"text":"Lists and tables","path":"/design-guidelines/usage-and-behavior/lists-and-tables"},{"text":"Login","path":"/design-guidelines/usage-and-behavior/login"},{"text":"Modal dialog","path":"/design-guidelines/usage-and-behavior/modal"},{"text":"Navigation system","path":"/design-guidelines/usage-and-behavior/navigation-system"},{"text":"Progress bar","path":"/design-guidelines/usage-and-behavior/progress-bar"},{"text":"Toolbar","path":"/design-guidelines/usage-and-behavior/toolbar"}]}},{"node":{"text":"Content","path":"/design-guidelines/content","subNav":[{"text":"Writing","path":"/design-guidelines/content/writing"},{"text":"Voice","path":"/design-guidelines/content/voice-and-tone"},{"text":"Style guide","path":"/design-guidelines/content/grammar-and-terminology"}]}}]}},"pageContext":{}}