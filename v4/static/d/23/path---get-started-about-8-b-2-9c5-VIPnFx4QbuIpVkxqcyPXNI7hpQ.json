{"data":{"mdx":{"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"path\": \"/get-started/about\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"h1\", {\n    className: \"pf-c-title pf-m-4xl\"\n  }, \"About Patternfly 4\"), \"\\n\", mdx(\"p\", null, \"PatternFly is an open source design system created to enable consistency and usability across a wide range of applications and use cases. PatternFly provides clear standards, guidance, and tools that help designers and developers work together more efficiently and build better user experiences.\")), mdx(\"p\", null, mdx(\"h1\", {\n    className: \"pf-c-title pf-m-3xl pf-u-mt-xl\"\n  }, \"Basic structure\")), mdx(\"p\", null, mdx(\"h1\", {\n    className: \"pf-c-title pf-m-xl pf-u-mt-xl\"\n  }, \"Components\"), \"\\n\", mdx(\"p\", null, \"Components, like buttons and alerts, can be assembled together to build applications.\")), mdx(\"p\", null, mdx(\"h1\", {\n    className: \"pf-c-title pf-m-xl pf-u-mt-xl\"\n  }, \"Layouts\"), \"\\n\", mdx(\"p\", null, \"Layouts are generic tools that allow you to structure and organize the content on your pages.\")), mdx(\"p\", null, mdx(\"h1\", {\n    className: \"pf-c-title pf-m-xl pf-u-mt-xl\"\n  }, \"Demos\"), \"\\n\", mdx(\"p\", null, \"Demos use components and layouts in combination to show you how to build more complex structures and application views.\")), mdx(\"div\", {\n    className: \"link\"\n  }, mdx(\"a\", {\n    href: \"/documentation/core\"\n  }, \"View components, layouts, and demos in HTML/CSS\"), mdx(\"i\", {\n    className: \"blueArrow fas fa-arrow-right pf-u-mx-sm\"\n  })), mdx(\"div\", {\n    className: \"link\"\n  }, mdx(\"a\", {\n    href: \"/documentation/react\"\n  }, \"View components, layouts, and demos in React\"), mdx(\"i\", {\n    className: \"blueArrow fas fa-arrow-right pf-u-mx-sm\"\n  })), mdx(\"p\", null, mdx(\"h1\", {\n    className: \"pf-c-title pf-m-3xl pf-u-mt-xl\"\n  }, \"Design guidelines\")), mdx(\"p\", null, mdx(\"h1\", {\n    className: \"pf-c-title pf-m-xl pf-u-mt-xl\"\n  }, \"Styles\"), \"\\n\", mdx(\"p\", null, \"Style guidelines define foundational elements of the design system, like color, typography, and spacing.\")), mdx(\"p\", null, mdx(\"h1\", {\n    className: \"pf-c-title pf-m-xl pf-u-mt-xl\"\n  }, \"Usage and behavior\"), \"\\n\", mdx(\"p\", null, \"Usage and behavior guidelines communicate standards and best practices for common design patterns like navigation, dashboards, or forms.\")), mdx(\"p\", null, mdx(\"h1\", {\n    className: \"pf-c-title pf-m-xl pf-u-mt-xl\"\n  }, \"Content\"), \"\\n\", mdx(\"p\", null, \"Content guidelines provide principles and best practices around writing for user experience along with general voice and style guidance.\")), mdx(\"div\", {\n    className: \"link\"\n  }, mdx(\"a\", {\n    href: \"/design-guidelines/styles/icons\"\n  }, \"View Styles\"), mdx(\"i\", {\n    className: \"blueArrow fas fa-arrow-right pf-u-mx-sm\"\n  })), mdx(\"p\", null, mdx(\"h1\", {\n    className: \"pf-c-title pf-m-3xl pf-u-mt-xl\"\n  }, \"Additional tools\")), mdx(\"p\", null, mdx(\"h1\", {\n    className: \"pf-c-title pf-m-xl pf-u-mt-xl\"\n  }, \"CSS Variables\"), \"\\n\", mdx(\"p\", null, \"You can customize PatternFly for your project using the CSS variable system, which enables you to change style elements like color across your project. The CSS variable system is a two-layer theming system where global variables inform component variables.\")), mdx(\"p\", null, mdx(\"h1\", {\n    className: \"pf-c-title pf-m-xl pf-u-mt-xl\"\n  }, \"Global variables\"), \"\\n\", mdx(\"p\", null, \"Global variables define and enforce style elements (like global values for color, spacing, and font size) across the entire system.\")), mdx(\"p\", null, mdx(\"h1\", {\n    className: \"pf-c-title pf-m-xl pf-u-mt-xl\"\n  }, \"Component variables\"), \"\\n\", mdx(\"p\", null, \"Component variables are used to define custom properties at the component level. Component variables are always defined by global variables.\")), mdx(\"div\", {\n    className: \"link\"\n  }, mdx(\"a\", {\n    href: \"/documentation/react/css-variables/\"\n  }, \"Learn more and view CSS variables\"), mdx(\"i\", {\n    className: \"blueArrow fas fa-arrow-right pf-u-mx-sm\"\n  })), mdx(\"p\", null, mdx(\"h1\", {\n    className: \"pf-c-title pf-m-xl pf-u-mt-xl\"\n  }, \"Utilities\"), \"\\n\", mdx(\"p\", null, \"Utilities are a set of classes that enable you to further customize and modify elements in your project without having to write any custom CSS.\")), mdx(\"p\", null, mdx(\"p\", null, \"For example, you might use a utility class to add additional spacing between elements, align content in a layout, or even add a box shadow to an element.\")), mdx(\"div\", {\n    className: \"link\"\n  }, mdx(\"a\", {\n    href: \"/documentation/core/utilities/accessibility\"\n  }, \"View utilities\"), mdx(\"i\", {\n    className: \"blueArrow fas fa-arrow-right pf-u-mx-sm\"\n  })));\n}\nMDXContent.isMDXComponent = true;"},"frontmatter":{"path":"/get-started/about"}},"allGetStartedNavigationJson":{"edges":[{"node":{"text":"About","path":"/get-started/about"}},{"node":{"text":"Develop","path":"/get-started/developers"}},{"node":{"text":"Design","path":"/get-started/designers"}}]},"allDesignGuidelinesNavigationJson":{"edges":[{"node":{"text":"Styles","path":"/design-guidelines/styles/","subNav":[{"text":"Colors","path":"/design-guidelines/styles/colors"},{"text":"Icons","path":"/design-guidelines/styles/icons"},{"text":"Typography","path":"/design-guidelines/styles/typography"},{"text":"Spacers","path":"/design-guidelines/styles/spacers"}]}},{"node":{"text":"Usage and behavior","path":"/design-guidelines/usage-and-behavior/","subNav":[{"text":"About modal","path":"/design-guidelines/usage-and-behavior/about-modal"},{"text":"Alerts and notifications","path":"/design-guidelines/usage-and-behavior/alerts-and-notifications"},{"text":"Buttons and links","path":"/design-guidelines/usage-and-behavior/buttons-and-links"},{"text":"Data input","path":"/design-guidelines/usage-and-behavior/data-input"},{"text":"Empty state","path":"/design-guidelines/usage-and-behavior/empty-state"},{"text":"Filters","path":"/design-guidelines/usage-and-behavior/filters"},{"text":"Forms","path":"/design-guidelines/usage-and-behavior/forms"},{"text":"Lists and tables","path":"/design-guidelines/usage-and-behavior/lists-and-tables"},{"text":"Login","path":"/design-guidelines/usage-and-behavior/login"},{"text":"Modal dialog","path":"/design-guidelines/usage-and-behavior/modal"},{"text":"Navigation system","path":"/design-guidelines/usage-and-behavior/navigation-system"},{"text":"Progress bar","path":"/design-guidelines/usage-and-behavior/progress-bar"},{"text":"Toolbar","path":"/design-guidelines/usage-and-behavior/toolbar"}]}},{"node":{"text":"Content","path":"/design-guidelines/content","subNav":[{"text":"Writing","path":"/design-guidelines/content/writing"},{"text":"Voice","path":"/design-guidelines/content/voice-and-tone"},{"text":"Style guide","path":"/design-guidelines/content/grammar-and-terminology"}]}}]}},"pageContext":{}}