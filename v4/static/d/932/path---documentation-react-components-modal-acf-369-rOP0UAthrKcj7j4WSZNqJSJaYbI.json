{"data":{"mdx":{"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Modal\",\n  \"cssPrefix\": \"pf-c-modal-box\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"simple-modal\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#simple-modal\",\n    \"aria-label\": \"simple modal permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Simple modal\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { Modal, Button } from '@patternfly/react-core';\\n\\nclass SimpleModal extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isModalOpen: false\\n    };\\n    this.handleModalToggle = () => {\\n      this.setState(({ isModalOpen }) => ({\\n        isModalOpen: !isModalOpen\\n      }));\\n    };\\n  }\\n\\n  render() {\\n    const { isModalOpen } = this.state;\\n\\n    return (\\n      <React.Fragment>\\n        <Button variant=\\\"primary\\\" onClick={this.handleModalToggle}>\\n          Show Modal\\n        </Button>\\n        <Modal\\n          title=\\\"Modal Header\\\"\\n          isOpen={isModalOpen}\\n          onClose={this.handleModalToggle}\\n          actions={[\\n            <Button key=\\\"cancel\\\" variant=\\\"secondary\\\" onClick={this.handleModalToggle}>\\n              Cancel\\n            </Button>,\\n            <Button key=\\\"confirm\\\" variant=\\\"primary\\\" onClick={this.handleModalToggle}>\\n              Confirm\\n            </Button>\\n          ]}\\n        >\\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\\n          magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\\n          consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\\n          est laborum.\\n        </Modal>\\n      </React.Fragment>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"modal-small\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#modal-small\",\n    \"aria-label\": \"modal small permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Modal (small)\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { Modal, Button } from '@patternfly/react-core';\\n\\nclass SmallModal extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isModalOpen: false\\n    };\\n    this.handleModalToggle = () => {\\n      this.setState(({ isModalOpen }) => ({\\n        isModalOpen: !isModalOpen\\n      }));\\n    };\\n  }\\n\\n  render() {\\n    const { isModalOpen } = this.state;\\n\\n    return (\\n      <React.Fragment>\\n        <Button variant=\\\"primary\\\" onClick={this.handleModalToggle}>\\n          Show Small Modal\\n        </Button>\\n        <Modal\\n          isSmall\\n          title=\\\"Modal Header\\\"\\n          isOpen={isModalOpen}\\n          onClose={this.handleModalToggle}\\n          actions={[\\n            <Button key=\\\"cancel\\\" variant=\\\"secondary\\\" onClick={this.handleModalToggle}>\\n              Cancel\\n            </Button>,\\n            <Button key=\\\"confirm\\\" variant=\\\"primary\\\" onClick={this.handleModalToggle}>\\n              Confirm\\n            </Button>\\n          ]}\\n        >\\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\\n          magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\\n          consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\\n          est laborum.\\n        </Modal>\\n      </React.Fragment>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"modal-large\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#modal-large\",\n    \"aria-label\": \"modal large permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Modal (large)\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { Modal, Button } from '@patternfly/react-core';\\n\\nclass LargeModal extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isModalOpen: false\\n    };\\n    this.handleModalToggle = () => {\\n      this.setState(({ isModalOpen }) => ({\\n        isModalOpen: !isModalOpen\\n      }));\\n    };\\n  }\\n\\n  render() {\\n    const { isModalOpen } = this.state;\\n\\n    return (\\n      <React.Fragment>\\n        <Button variant=\\\"primary\\\" onClick={this.handleModalToggle}>\\n          Show Large Modal\\n        </Button>\\n        <Modal\\n          isLarge\\n          title=\\\"Modal Header\\\"\\n          isOpen={isModalOpen}\\n          onClose={this.handleModalToggle}\\n          actions={[\\n            <Button key=\\\"cancel\\\" variant=\\\"secondary\\\" onClick={this.handleModalToggle}>\\n              Cancel\\n            </Button>,\\n            <Button key=\\\"confirm\\\" variant=\\\"primary\\\" onClick={this.handleModalToggle}>\\n              Confirm\\n            </Button>\\n          ]}\\n        >\\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\\n          magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\\n          consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\\n          est laborum.\\n        </Modal>\\n      </React.Fragment>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"modal-width\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#modal-width\",\n    \"aria-label\": \"modal width permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Modal (width)\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { Modal, Button } from '@patternfly/react-core';\\n\\nclass WidthModal extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isModalOpen: false\\n    };\\n    this.handleModalToggle = () => {\\n      this.setState(({ isModalOpen }) => ({\\n        isModalOpen: !isModalOpen\\n      }));\\n    };\\n  }\\n\\n  render() {\\n    const { isModalOpen } = this.state;\\n\\n    return (\\n      <React.Fragment>\\n        <Button variant=\\\"primary\\\" onClick={this.handleModalToggle}>\\n          Show 50% Width Modal\\n        </Button>\\n        <Modal\\n          width={'50%'}\\n          title=\\\"Modal Header\\\"\\n          isOpen={isModalOpen}\\n          onClose={this.handleModalToggle}\\n          actions={[\\n            <Button key=\\\"cancel\\\" variant=\\\"secondary\\\" onClick={this.handleModalToggle}>\\n              Cancel\\n            </Button>,\\n            <Button key=\\\"confirm\\\" variant=\\\"primary\\\" onClick={this.handleModalToggle}>\\n              Confirm\\n            </Button>\\n          ]}\\n        >\\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\\n          magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\\n          consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\\n          est laborum.\\n        </Modal>\\n      </React.Fragment>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"modal-no-header\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#modal-no-header\",\n    \"aria-label\": \"modal no header permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Modal (no header)\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { Modal, Button } from '@patternfly/react-core';\\n\\nclass NoHeader extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isModalOpen: false\\n    };\\n    this.handleModalToggle = () => {\\n      this.setState(({ isModalOpen }) => ({\\n        isModalOpen: !isModalOpen\\n      }));\\n    };\\n  }\\n\\n  render() {\\n    const { isModalOpen } = this.state;\\n\\n    return (\\n      <React.Fragment>\\n        <Button variant=\\\"primary\\\" onClick={this.handleModalToggle}>\\n          Show No Header Modal\\n        </Button>\\n        <Modal\\n          isLarge\\n          title=\\\"Modal Header\\\"\\n          isOpen={isModalOpen}\\n          hideTitle={true}\\n          ariaDescribedById=\\\"no-header-example\\\"\\n          onClose={this.handleModalToggle}\\n          actions={[\\n            <Button key=\\\"confirm\\\" variant=\\\"primary\\\" onClick={this.handleModalToggle}>\\n              Close\\n            </Button>\\n          ]}\\n        >\\n          <span id=\\\"no-header-example\\\">\\n            When static text describing the modal is available, it can be wrapped with an ID referring to the modal's\\n            aria-describedby value.\\n          </span>{' '}\\n          Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\\n          Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\\n          Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\\n        </Modal>\\n      </React.Fragment>\\n    );\\n  }\\n}\\n\")));\n}\nMDXContent.isMDXComponent = true;"},"frontmatter":{"title":"Modal","section":null,"cssPrefix":"pf-c-modal-box"}},"metadata":{"edges":[{"node":{"path":"src/components/AboutModal/AboutModal.js","name":"AboutModal","description":"","props":[{"name":"children","description":"Content rendered inside the about modal","required":true,"type":{"name":"node"},"defaultValue":null},{"name":"className","description":"Additional classes added to the about modal","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"isOpen","description":"Flag to show the about modal","required":false,"type":{"name":"bool"},"defaultValue":{"value":"false"}},{"name":"onClose","description":"A callback for when the close button is clicked","required":false,"type":{"name":"func"},"defaultValue":{"value":"() => undefined"}},{"name":"productName","description":"Product name","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"trademark","description":"Trademark information","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"brandImageSrc","description":"The URL of the image for the brand","required":true,"type":{"name":"string"},"defaultValue":null},{"name":"brandImageAlt","description":"The alternate text of the brand image","required":true,"type":{"name":"string"},"defaultValue":null},{"name":"logoImageSrc","description":"The URL of the image for the logo","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"logoImageAlt","description":"The alternate text of the logo image","required":false,"type":{"name":"custom"},"defaultValue":{"value":"''"}},{"name":"noAboutModalBoxContentContainer","description":"Prevents the about modal from rendering content inside a container; allows for more flexible layouts","required":false,"type":{"name":"bool"},"defaultValue":{"value":"false"}},{"name":"","description":"Additional props are passed and spread to the modal content container <div>","required":false,"type":{"name":"any"},"defaultValue":null}]}},{"node":{"path":"src/components/AboutModal/AboutModalBox.js","name":"AboutModalBox","description":"","props":[{"name":"children","description":"content rendered inside the AboutModelBox.","required":true,"type":{"name":"node"},"defaultValue":null},{"name":"className","description":"additional classes added to the AboutModalBox","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"aria-labelledby","description":"id to use for About Modal Box aria-labelledby attribute","required":true,"type":{"name":"string"},"defaultValue":null},{"name":"aria-describedby","description":"id to use for About Modal Box aria-describedby attribute","required":true,"type":{"name":"string"},"defaultValue":null},{"name":"","description":"Additional props are spread to the container <div>","required":false,"type":{"name":"any"},"defaultValue":null}]}},{"node":{"path":"src/components/AboutModal/AboutModalBoxBrand.js","name":"AboutModalBoxBrand","description":"","props":[{"name":"className","description":"additional classes added to the About Modal Brand","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"src","description":"the URL of the image for the Brand.","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"alt","description":"the alternate text of the Brand image.","required":true,"type":{"name":"string"},"defaultValue":null},{"name":"","description":"Additional props are spread to the container <div>","required":false,"type":{"name":"any"},"defaultValue":null}]}},{"node":{"path":"src/components/AboutModal/AboutModalBoxCloseButton.js","name":"AboutModalBoxCloseButton","description":"","props":[{"name":"className","description":"additional classes added to the About Modal Close button","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"onClose","description":"A callback for when the close button is clicked","required":false,"type":{"name":"func"},"defaultValue":{"value":"() => undefined"}},{"name":"","description":"Additional props are spread to the container <div>","required":false,"type":{"name":"any"},"defaultValue":null}]}},{"node":{"path":"src/components/AboutModal/AboutModalBoxContent.js","name":"AboutModalBoxContent","description":"","props":[{"name":"children","description":"content rendered inside the AboutModalBoxContent","required":true,"type":{"name":"node"},"defaultValue":null},{"name":"className","description":"additional classes added to the AboutModalBoxContent","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"id","description":"id to use for About Modal Box aria described by","required":true,"type":{"name":"string"},"defaultValue":null},{"name":"trademark","description":"The Trademark info for the product","required":true,"type":{"name":"string"},"defaultValue":null},{"name":"","description":"Additional props are spread to the container <div>","required":false,"type":{"name":"any"},"defaultValue":null}]}},{"node":{"path":"src/components/AboutModal/AboutModalBoxHeader.js","name":"AboutModalBoxHeader","description":"","props":[{"name":"className","description":"additional classes added to the button","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"productName","description":"Name of the Product","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"id","description":"id to used for Modal Box header","required":true,"type":{"name":"string"},"defaultValue":null},{"name":"","description":"Additional props are spread to the container <div>","required":false,"type":{"name":"any"},"defaultValue":null}]}},{"node":{"path":"src/components/AboutModal/AboutModalBoxHero.js","name":"AboutModalBoxHero","description":"","props":[{"name":"className","description":"additional classes added to the About Modal Hero","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"","description":"Additional props are spread to the container <div>","required":false,"type":{"name":"any"},"defaultValue":null}]}},{"node":{"path":"src/components/AboutModal/AboutModalContainer.js","name":"ModalContent","description":"","props":[{"name":"children","description":"content rendered inside the About Modal Box Content.","required":true,"type":{"name":"node"},"defaultValue":null},{"name":"className","description":"additional classes added to the About Modal Box","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"isOpen","description":"Flag to show the About Modal","required":false,"type":{"name":"bool"},"defaultValue":{"value":"false"}},{"name":"onClose","description":"A callback for when the close button is clicked","required":false,"type":{"name":"func"},"defaultValue":{"value":"() => undefined"}},{"name":"productName","description":"Product Name","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"trademark","description":"Trademark information","required":true,"type":{"name":"string"},"defaultValue":null},{"name":"brandImageSrc","description":"the URL of the image for the Brand.","required":true,"type":{"name":"string"},"defaultValue":null},{"name":"brandImageAlt","description":"the alternate text of the Brand image.","required":true,"type":{"name":"string"},"defaultValue":null},{"name":"logoImageSrc","description":"the URL of the image for the Logo.","required":true,"type":{"name":"string"},"defaultValue":null},{"name":"logoImageAlt","description":"the alternate text of the Logo image.","required":true,"type":{"name":"string"},"defaultValue":null},{"name":"ariaLabelledbyId","description":"id to use for About Modal Box aria labeled by","required":true,"type":{"name":"string"},"defaultValue":null},{"name":"ariaDescribedById","description":"id to use for About Modal Box aria described by","required":true,"type":{"name":"string"},"defaultValue":null},{"name":"","description":"Additional props are spread to the AboutModalBoxContent component","required":false,"type":{"name":"any"},"defaultValue":null}]}},{"node":{"path":"src/components/Modal/Modal.js","name":"Modal","description":"","props":[{"name":"children","description":"content rendered inside the Modal.","required":true,"type":{"name":"node"},"defaultValue":null},{"name":"className","description":"additional classes added to the Modal","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"isOpen","description":"Flag to show the modal","required":false,"type":{"name":"bool"},"defaultValue":{"value":"false"}},{"name":"title","description":"Content of the Modal Header","required":true,"type":{"name":"string"},"defaultValue":null},{"name":"hideTitle","description":"Flag to show the title","required":false,"type":{"name":"bool"},"defaultValue":{"value":"false"}},{"name":"ariaDescribedById","description":"id to use for Modal Box description","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"actions","description":"Action buttons to put in the Modal Footer","required":false,"type":{"name":"any"},"defaultValue":{"value":"[]"}},{"name":"onClose","description":"A callback for when the close button is clicked","required":false,"type":{"name":"func"},"defaultValue":{"value":"() => undefined"}},{"name":"width","description":"Default width of the Modal.","required":false,"type":{"name":"union"},"defaultValue":{"value":"null"}},{"name":"isLarge","description":"Creates a large version of the Modal","required":false,"type":{"name":"bool"},"defaultValue":{"value":"false"}},{"name":"isSmall","description":"Creates a small version of the Modal","required":false,"type":{"name":"bool"},"defaultValue":{"value":"false"}},{"name":"","description":"Additional props are passed and spread in the Modal body container <div>","required":false,"type":{"name":"any"},"defaultValue":null}]}},{"node":{"path":"src/components/Modal/ModalBox.js","name":"ModalBox","description":"","props":[{"name":"children","description":"content rendered inside the ModalBox.","required":true,"type":{"name":"node"},"defaultValue":null},{"name":"className","description":"additional classes added to the ModalBox","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"isLarge","description":"Creates a large version of the ModalBox","required":false,"type":{"name":"bool"},"defaultValue":{"value":"false"}},{"name":"isSmall","description":"Creates a small version of the ModalBox.","required":false,"type":{"name":"bool"},"defaultValue":{"value":"false"}},{"name":"title","description":"string to use for Modal Box label","required":true,"type":{"name":"string"},"defaultValue":null},{"name":"id","description":"id to use for Modal Box description","required":true,"type":{"name":"string"},"defaultValue":null},{"name":"","description":"Additional props are spread to the container <div>","required":false,"type":{"name":"any"},"defaultValue":null}]}},{"node":{"path":"src/components/Modal/ModalBoxBody.js","name":"ModalBoxBody","description":"","props":[{"name":"children","description":"content rendered inside the ModalBoxBody","required":false,"type":{"name":"node"},"defaultValue":{"value":"null"}},{"name":"className","description":"additional classes added to the ModalBoxBody","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"id","description":"id of the ModalBoxBody","required":true,"type":{"name":"string"},"defaultValue":null},{"name":"","description":"Additional props are spread to the container <div>","required":false,"type":{"name":"any"},"defaultValue":null}]}},{"node":{"path":"src/components/Modal/ModalBoxCloseButton.js","name":"ModalBoxCloseButton","description":"","props":[{"name":"className","description":"additional classes added to the close button","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"onClose","description":"A callback for when the close button is clicked","required":false,"type":{"name":"func"},"defaultValue":{"value":"() => undefined"}},{"name":"","description":"Additional props are spread to the container <div>","required":false,"type":{"name":"any"},"defaultValue":null}]}},{"node":{"path":"src/components/Modal/ModalBoxFooter.js","name":"ModalBoxFooter","description":"","props":[{"name":"children","description":"content rendered inside the Footer","required":false,"type":{"name":"node"},"defaultValue":{"value":"null"}},{"name":"className","description":"additional classes added to the Footer","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"","description":"Additional props are spread to the container <div>","required":false,"type":{"name":"any"},"defaultValue":null}]}},{"node":{"path":"src/components/Modal/ModalBoxHeader.js","name":"ModalBoxHeader","description":"","props":[{"name":"children","description":"content rendered inside the Header","required":false,"type":{"name":"node"},"defaultValue":{"value":"null"}},{"name":"className","description":"additional classes added to the button","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"hideTitle","description":"Flag to show the title","required":true,"type":{"name":"bool"},"defaultValue":null},{"name":"","description":"Additional props are spread to the container <header>","required":false,"type":{"name":"any"},"defaultValue":null}]}},{"node":{"path":"src/components/Modal/ModalContent.js","name":"ModalContent","description":"","props":[{"name":"children","description":"content rendered inside the Modal.","required":true,"type":{"name":"node"},"defaultValue":null},{"name":"className","description":"additional classes added to the button","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"isOpen","description":"Flag to show the modal","required":false,"type":{"name":"bool"},"defaultValue":{"value":"false"}},{"name":"title","description":"Content of the Modal Header","required":true,"type":{"name":"string"},"defaultValue":null},{"name":"hideTitle","description":"Flag to show the title","required":false,"type":{"name":"bool"},"defaultValue":{"value":"false"}},{"name":"actions","description":"Content of the Modal Footer","required":false,"type":{"name":"any"},"defaultValue":{"value":"[]"}},{"name":"onClose","description":"A callback for when the close button is clicked","required":false,"type":{"name":"func"},"defaultValue":{"value":"() => undefined"}},{"name":"width","description":"Default width of the Modal.","required":false,"type":{"name":"union"},"defaultValue":{"value":"null"}},{"name":"isLarge","description":"Creates a large version of the Modal","required":false,"type":{"name":"bool"},"defaultValue":{"value":"false"}},{"name":"isSmall","description":"Creates a small version of the Modal","required":false,"type":{"name":"bool"},"defaultValue":{"value":"false"}},{"name":"ariaDescribedById","description":"id to use for Modal Box description","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"id","description":"id of the ModalBoxBody","required":true,"type":{"name":"string"},"defaultValue":null},{"name":"","description":"Additional props are spread to the ModalBoxBody component","required":false,"type":{"name":"any"},"defaultValue":null}]}}]},"description":{"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"reactUrl\": \"modal\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Modals\"), \" load and display important information without navigating away from the current page. The user cannot perform other actions until the modal is dismissed. Related design guidelines: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"design-guidelines/usage-and-behavior/modal\"\n  }), \"Modal\")));\n}\nMDXContent.isMDXComponent = true;"}},"allGetStartedNavigationJson":{"edges":[{"node":{"text":"About","path":"/get-started/about"}},{"node":{"text":"Develop","path":"/get-started/developers"}},{"node":{"text":"Design","path":"/get-started/designers"}},{"node":{"text":"Migration guide","path":"/get-started/migrate"}},{"node":{"text":"Accessibility guide","path":"/get-started/accessibility-guide"}}]},"allDesignGuidelinesNavigationJson":{"edges":[{"node":{"text":"Styles","path":"/design-guidelines/styles/","subNav":[{"text":"Colors","path":"/design-guidelines/styles/colors"},{"text":"Colors for charts","path":"/design-guidelines/styles/colors-for-charts"},{"text":"Icons","path":"/design-guidelines/styles/icons"},{"text":"Typography","path":"/design-guidelines/styles/typography"},{"text":"Spacers","path":"/design-guidelines/styles/spacers"}]}},{"node":{"text":"Usage and behavior","path":"/design-guidelines/usage-and-behavior/","subNav":[{"text":"About modal","path":"/design-guidelines/usage-and-behavior/about-modal"},{"text":"Alerts and notifications","path":"/design-guidelines/usage-and-behavior/alerts-and-notifications"},{"text":"Buttons and links","path":"/design-guidelines/usage-and-behavior/buttons-and-links"},{"text":"Charts","path":"/design-guidelines/usage-and-behavior/charts"},{"text":"Data input","path":"/design-guidelines/usage-and-behavior/data-input"},{"text":"Empty state","path":"/design-guidelines/usage-and-behavior/empty-state"},{"text":"Filters","path":"/design-guidelines/usage-and-behavior/filters"},{"text":"Forms","path":"/design-guidelines/usage-and-behavior/forms"},{"text":"Lists and tables","path":"/design-guidelines/usage-and-behavior/lists-and-tables"},{"text":"Login","path":"/design-guidelines/usage-and-behavior/login"},{"text":"Modal dialog","path":"/design-guidelines/usage-and-behavior/modal"},{"text":"Navigation system","path":"/design-guidelines/usage-and-behavior/navigation-system"},{"text":"Progress bar","path":"/design-guidelines/usage-and-behavior/progress-bar"},{"text":"Toolbar","path":"/design-guidelines/usage-and-behavior/toolbar"},{"text":"Wizard","path":"/design-guidelines/usage-and-behavior/wizard"}]}},{"node":{"text":"Content","path":"/design-guidelines/content","subNav":[{"text":"Writing","path":"/design-guidelines/content/writing"},{"text":"Voice","path":"/design-guidelines/content/voice-and-tone"},{"text":"Style guide","path":"/design-guidelines/content/grammar-and-terminology"}]}}]}},"pageContext":{"title":"Modal","fileAbsolutePath":"/home/travis/build/patternfly/patternfly-org/packages/patternfly-4/_repos/react-core/src/components/Modal/Modal.md","pathRegex":"/Modal/.*/","reactUrl":"modal"}}