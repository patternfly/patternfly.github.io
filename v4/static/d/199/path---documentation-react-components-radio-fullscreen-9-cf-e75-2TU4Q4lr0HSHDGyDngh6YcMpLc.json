{"data":{"mdx":{"rawBody":"---\ntitle: 'Radio'\ncssPrefix: 'pf-c-radio'\n---\n\nimport { Radio } from '@patternfly/react-core';\n\n## Controlled Radio\n```js\nimport React from 'react';\nimport { Radio } from '@patternfly/react-core';\n\nclass ControlledRadio extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '4'\n    };\n\n    this.handleChange = (_, event) => {\n      const { value } = event.currentTarget;\n      this.setState({ value });\n    };\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Radio\n          value=\"3\"\n          isChecked={this.state.value === '3'}\n          name=\"pf-version\"\n          onChange={this.handleChange}\n          label=\"Controlled radio 1\"\n          id=\"radio-1\"\n        />{' '}\n        <Radio\n          value=\"4\"\n          isChecked={this.state.value === '4'}\n          name=\"pf-version\"\n          onChange={this.handleChange}\n          label=\"Controlled radio 2\"\n          id=\"radio-2\"\n        />\n      </React.Fragment>\n    );\n  }\n}\n```\n\n## Uncontrolled Radio\n```js\nimport React from 'react';\nimport { Radio } from '@patternfly/react-core';\n\nUncontrolledRadio = () => (\n  <React.Fragment>\n    <Radio label=\"Uncontrolled radio example\" id=\"radio-4\" name=\"radio-4\" />\n    <Radio label=\"Uncontrolled radio example\" id=\"radio-5\" name=\"radio-4\" />\n  </React.Fragment>\n);\n```\n\n## Disabled Radio\n```js\nimport React from 'react';\nimport { Radio } from '@patternfly/react-core';\n\nDisabledRadio = () => (\n  <React.Fragment>\n    <Radio label=\"Disabled checked radio example\" defaultChecked isDisabled name=\"group-1\" id=\"radio-disabled\" />{' '}\n    <Radio id=\"radio-disabled-2\" label=\"Disabled radio example\" isDisabled name=\"group-2\" />\n  </React.Fragment>\n);\n```\n","code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Radio\",\n  \"cssPrefix\": \"pf-c-radio\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"controlled-radio\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#controlled-radio\",\n    \"aria-label\": \"controlled radio permalink\",\n    \"class\": \"anchor\"\n  }), mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Controlled Radio\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { Radio } from '@patternfly/react-core';\\n\\nclass ControlledRadio extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      value: '4'\\n    };\\n\\n    this.handleChange = (_, event) => {\\n      const { value } = event.currentTarget;\\n      this.setState({ value });\\n    };\\n  }\\n\\n  render() {\\n    return (\\n      <React.Fragment>\\n        <Radio\\n          value=\\\"3\\\"\\n          isChecked={this.state.value === '3'}\\n          name=\\\"pf-version\\\"\\n          onChange={this.handleChange}\\n          label=\\\"Controlled radio 1\\\"\\n          id=\\\"radio-1\\\"\\n        />{' '}\\n        <Radio\\n          value=\\\"4\\\"\\n          isChecked={this.state.value === '4'}\\n          name=\\\"pf-version\\\"\\n          onChange={this.handleChange}\\n          label=\\\"Controlled radio 2\\\"\\n          id=\\\"radio-2\\\"\\n        />\\n      </React.Fragment>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"uncontrolled-radio\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#uncontrolled-radio\",\n    \"aria-label\": \"uncontrolled radio permalink\",\n    \"class\": \"anchor\"\n  }), mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Uncontrolled Radio\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { Radio } from '@patternfly/react-core';\\n\\nUncontrolledRadio = () => (\\n  <React.Fragment>\\n    <Radio label=\\\"Uncontrolled radio example\\\" id=\\\"radio-4\\\" name=\\\"radio-4\\\" />\\n    <Radio label=\\\"Uncontrolled radio example\\\" id=\\\"radio-5\\\" name=\\\"radio-4\\\" />\\n  </React.Fragment>\\n);\\n\")), mdx(\"h2\", {\n    \"id\": \"disabled-radio\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#disabled-radio\",\n    \"aria-label\": \"disabled radio permalink\",\n    \"class\": \"anchor\"\n  }), mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Disabled Radio\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { Radio } from '@patternfly/react-core';\\n\\nDisabledRadio = () => (\\n  <React.Fragment>\\n    <Radio label=\\\"Disabled checked radio example\\\" defaultChecked isDisabled name=\\\"group-1\\\" id=\\\"radio-disabled\\\" />{' '}\\n    <Radio id=\\\"radio-disabled-2\\\" label=\\\"Disabled radio example\\\" isDisabled name=\\\"group-2\\\" />\\n  </React.Fragment>\\n);\\n\")));\n}\nMDXContent.isMDXComponent = true;"}}},"pageContext":{"fileAbsolutePath":"/home/travis/build/patternfly/patternfly-org/packages/patternfly-4/_repos/react-core/src/components/Radio/Radio.md","fullscreen":true}}