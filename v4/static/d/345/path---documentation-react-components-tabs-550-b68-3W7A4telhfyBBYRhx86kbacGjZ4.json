{"data":{"mdx":{"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Tabs\",\n  \"cssPrefix\": \"pf-c-tabs\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"simple-tabs\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#simple-tabs\",\n    \"aria-label\": \"simple tabs permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Simple tabs\"), mdx(\"p\", null, \"Use primary sections\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { Tabs, Tab, TabsVariant, TabContent } from '@patternfly/react-core';\\n\\nclass SimpleTabs extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeTabKey: 0\\n    };\\n    // Toggle currently active tab\\n    this.handleTabClick = (event, tabIndex) => {\\n      this.setState({\\n        activeTabKey: tabIndex\\n      });\\n    };\\n  }\\n\\n  render() {\\n    return (\\n      <Tabs activeKey={this.state.activeTabKey} onSelect={this.handleTabClick}>\\n        <Tab eventKey={0} title=\\\"Tab item 1\\\">\\n          Tab 1 section\\n        </Tab>\\n        <Tab eventKey={1} title=\\\"Tab item 2\\\">\\n          Tab 2 section\\n        </Tab>\\n        <Tab eventKey={2} title=\\\"Tab item 3\\\">\\n          Tab 3 section\\n        </Tab>\\n      </Tabs>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"scroll-buttons-tabs\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#scroll-buttons-tabs\",\n    \"aria-label\": \"scroll buttons tabs permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Scroll buttons tabs\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { Tabs, Tab, TabsVariant, TabContent } from '@patternfly/react-core';\\n\\nclass ScrollButtonsTabs extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeTabKey: 0\\n    };\\n\\n    // Toggle currently active tab\\n    this.handleTabClick = (event, tabIndex) => {\\n      this.setState({\\n        activeTabKey: tabIndex\\n      });\\n    };\\n  }\\n\\n  render() {\\n    return (\\n      <Tabs activeKey={this.state.activeTabKey} onSelect={this.handleTabClick}>\\n        <Tab eventKey={0} title=\\\"Tab item 1\\\">\\n          Tab 1 section\\n        </Tab>\\n        <Tab eventKey={1} title=\\\"Tab item 2\\\">\\n          Tab 2 section\\n        </Tab>\\n        <Tab eventKey={2} title=\\\"Tab item 3\\\">\\n          Tab 3 section\\n        </Tab>\\n        <Tab eventKey={3} title=\\\"Tab item 4\\\">\\n          Tab 4 section\\n        </Tab>\\n        <Tab eventKey={4} title=\\\"Tab item 5\\\">\\n          Tab 5 section\\n        </Tab>\\n        <Tab eventKey={5} title=\\\"Tab item 6\\\">\\n          Tab 6 section\\n        </Tab>\\n        <Tab eventKey={6} title=\\\"Tab item 7\\\">\\n          Tab 7 section\\n        </Tab>\\n        <Tab eventKey={7} title=\\\"Tab item 8\\\">\\n          Tab 8 section\\n        </Tab>\\n        <Tab eventKey={8} title=\\\"Tab item 9\\\">\\n          Tab 9 section\\n        </Tab>\\n        <Tab eventKey={9} title=\\\"Tab item 10\\\">\\n          Tab 10 section\\n        </Tab>\\n        <Tab eventKey={10} title=\\\"Tab item 11\\\">\\n          Tab 11 section\\n        </Tab>\\n        <Tab eventKey={11} title=\\\"Tab item 12\\\">\\n          Tab 12 section\\n        </Tab>\\n      </Tabs>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"secondary-buttons-tabs\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#secondary-buttons-tabs\",\n    \"aria-label\": \"secondary buttons tabs permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Secondary buttons tabs\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { Tabs, Tab, TabsVariant, TabContent } from '@patternfly/react-core';\\n\\nclass SecondaryTabs extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeTabKey1: 0,\\n      activeTabKey2: 10\\n    };\\n    // Toggle currently active tab\\n    this.handleTabClickFirst = (event, tabIndex) => {\\n      this.setState({\\n        activeTabKey1: tabIndex\\n      });\\n    };\\n    // Toggle currently active secondary tab\\n    this.handleTabClickSecond = (event, tabIndex) => {\\n      this.setState({\\n        activeTabKey2: tabIndex\\n      });\\n    };\\n  }\\n\\n  render() {\\n    return (\\n      <Tabs activeKey={this.state.activeTabKey1} onSelect={this.handleTabClickFirst}>\\n        <Tab eventKey={0} title=\\\"Tab item 1\\\">\\n          <Tabs activeKey={this.state.activeTabKey2} isSecondary onSelect={this.handleTabClickSecond}>\\n            <Tab eventKey={10} title=\\\"Secondary tab item 1\\\">\\n              Secondary tab item 1 item section\\n            </Tab>\\n            <Tab eventKey={11} title=\\\"Secondary tab item 2\\\">\\n              Secondary tab item 2 section\\n            </Tab>\\n            <Tab eventKey={12} title=\\\"Secondary tab item 3\\\">\\n              Secondary tab item 3 section\\n            </Tab>\\n          </Tabs>\\n        </Tab>\\n        <Tab eventKey={1} title=\\\"Tab item 2\\\">\\n          Tab 2 section\\n        </Tab>\\n        <Tab eventKey={2} title=\\\"Tab item 3\\\">\\n          Tab 3 section\\n        </Tab>\\n      </Tabs>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"filled-buttons-tabs\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#filled-buttons-tabs\",\n    \"aria-label\": \"filled buttons tabs permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Filled buttons tabs\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { Tabs, Tab, TabsVariant, TabContent } from '@patternfly/react-core';\\n\\nclass FilledTabs extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeTabKey: 0\\n    };\\n    // Toggle currently active tab\\n    this.handleTabClick = (event, tabIndex) => {\\n      this.setState({\\n        activeTabKey: tabIndex\\n      });\\n    };\\n  }\\n\\n  render() {\\n    return (\\n      <Tabs isFilled activeKey={this.state.activeTabKey} onSelect={this.handleTabClick}>\\n        <Tab eventKey={0} title=\\\"Tab item 1\\\">\\n          Tab 1 section\\n        </Tab>\\n        <Tab eventKey={1} title=\\\"Tab item 2\\\">\\n          Tab 2 section\\n        </Tab>\\n        <Tab eventKey={2} title=\\\"Tab item 3\\\">\\n          Tab 3 section\\n        </Tab>\\n      </Tabs>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"secondary-tabs-using-the-nav-element\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#secondary-tabs-using-the-nav-element\",\n    \"aria-label\": \"secondary tabs using the nav element permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Secondary tabs using the nav element\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { Tabs, Tab, TabsVariant, TabContent } from '@patternfly/react-core';\\n\\nclass SecondaryTabsNavVariant extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeTabKey1: 0,\\n      activeTabKey2: 10\\n    };\\n\\n    // Toggle currently active tab\\n    this.handleTabClickFirst = (event, tabIndex) => {\\n      this.setState({\\n        activeTabKey1: tabIndex\\n      });\\n    };\\n\\n    // Toggle currently active secondary tab\\n    this.handleTabClickSecond = (event, tabIndex) => {\\n      this.setState({\\n        activeTabKey2: tabIndex\\n      });\\n    };\\n  }\\n\\n  render() {\\n    return (\\n      <Tabs\\n        activeKey={this.state.activeTabKey1}\\n        onSelect={this.handleTabClickFirst}\\n        aria-label=\\\"Local\\\"\\n        variant={TabsVariant.nav}\\n      >\\n        <Tab eventKey={0} title=\\\"Tab item 1\\\" href=\\\"#\\\">\\n          <Tabs\\n            activeKey={this.state.activeTabKey2}\\n            isSecondary\\n            onSelect={this.handleTabClickSecond}\\n            aria-label=\\\"Local secondary\\\"\\n            variant={TabsVariant.nav}\\n          >\\n            <Tab eventKey={10} title=\\\"Secondary tab item 1\\\" href=\\\"#\\\">\\n              Secondary tab item 1 item section\\n            </Tab>\\n            <Tab eventKey={11} title=\\\"Secondary tab item 2\\\" href=\\\"#\\\">\\n              Secondary tab item 2 section\\n            </Tab>\\n            <Tab eventKey={12} title=\\\"Secondary tab item 3\\\" href=\\\"#\\\">\\n              Secondary tab item 3 section\\n            </Tab>\\n          </Tabs>\\n        </Tab>\\n        <Tab eventKey={1} title=\\\"Tab item 2\\\" href=\\\"#\\\">\\n          Tab 2 section\\n        </Tab>\\n        <Tab eventKey={2} title=\\\"Tab item 3\\\" href=\\\"#\\\">\\n          Tab 3 section\\n        </Tab>\\n      </Tabs>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"tabs-using-the-nav-element\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#tabs-using-the-nav-element\",\n    \"aria-label\": \"tabs using the nav element permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Tabs using the nav element\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { Tabs, Tab, TabsVariant, TabContent } from '@patternfly/react-core';\\n\\nclass TabsNavVariant extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeTabKey: 0\\n    };\\n\\n    // Toggle currently active tab\\n    this.handleTabClick = (event, tabIndex) => {\\n      this.setState({\\n        activeTabKey: tabIndex\\n      });\\n    };\\n  }\\n\\n  render() {\\n    return (\\n      <Tabs\\n        activeKey={this.state.activeTabKey}\\n        onSelect={this.handleTabClick}\\n        aria-label=\\\"Local\\\"\\n        variant={TabsVariant.nav}\\n      >\\n        <Tab eventKey={0} title=\\\"Tab item 1\\\" href=\\\"#\\\">\\n          Tab 1 section\\n        </Tab>\\n        <Tab eventKey={1} title=\\\"Tab item 2\\\" href=\\\"#\\\">\\n          Tab 2 section\\n        </Tab>\\n        <Tab eventKey={2} title=\\\"Tab item 3\\\" href=\\\"#\\\">\\n          Tab 3 section\\n        </Tab>\\n      </Tabs>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"separate-tab-content\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#separate-tab-content\",\n    \"aria-label\": \"separate tab content permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Separate tab content\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { Tabs, Tab, TabsVariant, TabContent } from '@patternfly/react-core';\\n\\nclass SeparateTabContent extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeKey: 0\\n    };\\n\\n    this.contentRef1 = React.createRef();\\n    this.contentRef2 = React.createRef();\\n    this.contentRef3 = React.createRef();\\n\\n    // Toggle currently active tab\\n    this.handleTabClick = (event, tabIndex) => {\\n      this.setState({\\n        activeTabKey: tabIndex\\n      });\\n    };\\n  }\\n\\n  render() {\\n    return (\\n      <React.Fragment>\\n        <Tabs activeKey={this.state.activeTabKey} onSelect={this.handleTabClick}>\\n          <Tab eventKey={0} title=\\\"Tab item 1\\\" tabContentId=\\\"refTab1Section\\\" tabContentRef={this.contentRef1} />\\n          <Tab eventKey={1} title=\\\"Tab item 2\\\" tabContentId=\\\"refTab2Section\\\" tabContentRef={this.contentRef2} />\\n          <Tab eventKey={2} title=\\\"Tab item 3\\\" tabContentId=\\\"refTab3Section\\\" tabContentRef={this.contentRef3} />\\n        </Tabs>\\n        <div>\\n          <TabContent eventKey={0} id=\\\"refTab1Section\\\" ref={this.contentRef1} aria-label=\\\"Tab item 1\\\">\\n            Tab 1 section\\n          </TabContent>\\n          <TabContent eventKey={1} id=\\\"refTab2Section\\\" ref={this.contentRef2} aria-label=\\\"Tab item 2\\\" hidden>\\n            Tab 2 section\\n          </TabContent>\\n          <TabContent eventKey={2} id=\\\"refTab3Section\\\" ref={this.contentRef3} aria-label=\\\"Tab item 3\\\" hidden>\\n            Tab 3 section\\n          </TabContent>\\n        </div>\\n      </React.Fragment>\\n    );\\n  }\\n}\\n\")));\n}\nMDXContent.isMDXComponent = true;"},"frontmatter":{"title":"Tabs","section":null,"cssPrefix":"pf-c-tabs"}},"metadata":{"edges":[{"node":{"path":"src/components/Tabs/Tab.js","name":"Tab","description":"","props":[{"name":"children","description":"content rendered inside the Tab content area.","required":false,"type":{"name":"node"},"defaultValue":{"value":"null"}},{"name":"className","description":"additional classes added to the Tab","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"href","description":"URL associated with the Tab. A Tab with an href will render as an <a> instead of a <button>. A Tab inside a <Tabs variant=\"nav\"> should have an href.","required":false,"type":{"name":"string"},"defaultValue":{"value":"null"}},{"name":"title","description":"Tab title","required":true,"type":{"name":"string"},"defaultValue":null},{"name":"eventKey","description":"uniquely identifies the tab","required":true,"type":{"name":"number"},"defaultValue":null},{"name":"tabContentId","description":"child id for case in which a TabContent section is defined outside of a Tabs component","required":false,"type":{"name":"union"},"defaultValue":{"value":"null"}},{"name":"tabContentRef","description":"child reference for case in which a TabContent section is defined outside of a Tabs component","required":false,"type":{"name":"node"},"defaultValue":{"value":"null"}}]}},{"node":{"path":"src/components/Tabs/TabContent.js","name":null,"description":"","props":[]}},{"node":{"path":"src/components/Tabs/Tabs.js","name":"Tabs","description":"","props":[{"name":"children","description":"content rendered inside the Tabs Component.","required":true,"type":{"name":"node"},"defaultValue":null},{"name":"className","description":"additional classes added to the Tabs","required":false,"type":{"name":"string"},"defaultValue":{"value":"''"}},{"name":"activeKey","description":"the index of the active tab","required":false,"type":{"name":"number"},"defaultValue":{"value":"0"}},{"name":"onSelect","description":"handle tab selection","required":false,"type":{"name":"func"},"defaultValue":{"value":"() => undefined"}},{"name":"id","description":"uniquely identifies the Tabs","required":false,"type":{"name":"string"},"defaultValue":{"value":"null"}},{"name":"isFilled","description":"enables the filled tab list layout","required":false,"type":{"name":"bool"},"defaultValue":{"value":"false"}},{"name":"isSecondary","description":"enables Secondary Tab styling","required":false,"type":{"name":"bool"},"defaultValue":{"value":"false"}},{"name":"leftScrollAriaLabel","description":"aria-label for the left Scroll Button","required":false,"type":{"name":"string"},"defaultValue":{"value":"'Scroll left'"}},{"name":"rightScrollAriaLabel","description":"aria-label for the right Scroll Button","required":false,"type":{"name":"string"},"defaultValue":{"value":"'Scroll Right'"}},{"name":"variant","description":"determines what tag is used around the Tabs. Use \"nav\" to define the Tabs inside a navigation region","required":false,"type":{"name":"enum"},"defaultValue":{"value":"'div'"}},{"name":"aria-label","description":"provides an accessible label for the Tabs. Labels should be unique for each set of Tabs that are present on a page. When variant is set to nav, this prop should be defined to differentiate the Tabs from other navigation regions on the page.","required":false,"type":{"name":"string"},"defaultValue":{"value":"null"}}]}}]},"description":{"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"reactUrl\": \"tabs\",\n  \"htmlUrl\": \"tabs\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Tabs\"), \" are used to present a set on tabs for organizing content on a page. It must always be used together with a Tabcontent component.\"));\n}\nMDXContent.isMDXComponent = true;"}},"allGetStartedNavigationJson":{"edges":[{"node":{"text":"About","path":"/get-started/about"}},{"node":{"text":"Develop","path":"/get-started/developers"}},{"node":{"text":"Design","path":"/get-started/designers"}},{"node":{"text":"Migration guide","path":"/get-started/migrate"}},{"node":{"text":"Accessibility guide","path":"/get-started/accessibility-guide"}}]},"allDesignGuidelinesNavigationJson":{"edges":[{"node":{"text":"Styles","path":"/design-guidelines/styles/","subNav":[{"text":"Colors","path":"/design-guidelines/styles/colors"},{"text":"Colors for charts","path":"/design-guidelines/styles/chart-colors"},{"text":"Icons","path":"/design-guidelines/styles/icons"},{"text":"Typography","path":"/design-guidelines/styles/typography"},{"text":"Spacers","path":"/design-guidelines/styles/spacers"}]}},{"node":{"text":"Usage and behavior","path":"/design-guidelines/usage-and-behavior/","subNav":[{"text":"About modal","path":"/design-guidelines/usage-and-behavior/about-modal"},{"text":"Alerts and notifications","path":"/design-guidelines/usage-and-behavior/alerts-and-notifications"},{"text":"Buttons and links","path":"/design-guidelines/usage-and-behavior/buttons-and-links"},{"text":"Charts","path":"/design-guidelines/usage-and-behavior/charts"},{"text":"Data input","path":"/design-guidelines/usage-and-behavior/data-input"},{"text":"Empty state","path":"/design-guidelines/usage-and-behavior/empty-state"},{"text":"Filters","path":"/design-guidelines/usage-and-behavior/filters"},{"text":"Forms","path":"/design-guidelines/usage-and-behavior/forms"},{"text":"Lists and tables","path":"/design-guidelines/usage-and-behavior/lists-and-tables"},{"text":"Login","path":"/design-guidelines/usage-and-behavior/login"},{"text":"Modal dialog","path":"/design-guidelines/usage-and-behavior/modal"},{"text":"Navigation system","path":"/design-guidelines/usage-and-behavior/navigation-system"},{"text":"Progress bar","path":"/design-guidelines/usage-and-behavior/progress-bar"},{"text":"Toolbar","path":"/design-guidelines/usage-and-behavior/toolbar"},{"text":"Wizard","path":"/design-guidelines/usage-and-behavior/wizard"}]}},{"node":{"text":"Content","path":"/design-guidelines/content","subNav":[{"text":"Writing","path":"/design-guidelines/content/writing"},{"text":"Voice","path":"/design-guidelines/content/voice-and-tone"},{"text":"Style guide","path":"/design-guidelines/content/grammar-and-terminology"}]}}]}},"pageContext":{"title":"Tabs","fileAbsolutePath":"/home/travis/build/patternfly/patternfly-org/packages/patternfly-4/_repos/react-core/src/components/Tabs/Tabs.md","pathRegex":"/Tabs/.*/","reactUrl":"tabs"}}