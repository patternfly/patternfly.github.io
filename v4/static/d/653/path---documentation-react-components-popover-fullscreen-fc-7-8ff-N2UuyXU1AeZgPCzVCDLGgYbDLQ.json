{"data":{"mdx":{"rawBody":"---\ntitle: 'Popover'\ncssPrefix: 'pf-c-popover'\n---\n\nimport { Popover, PopoverPosition, Checkbox, Button } from '@patternfly/react-core';\n\n## Simple Popover\n```js\nimport React from 'react';\nimport { Popover, PopoverPosition, Checkbox, Button } from '@patternfly/react-core';\n\nSimplePopover = () => (\n  <Popover\n    position=\"right\"\n    headerContent={<div>Popover Header</div>}\n    bodyContent={\n      <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam id feugiat augue, nec fringilla turpis.</div>\n    }\n    footerContent=\"Popover Footer\"\n  >\n    <Button>Toggle Popover</Button>\n  </Popover>\n);\n```\n\n## Advanced Popover\n```js\nimport React from 'react';\nimport { Popover, PopoverPosition, Checkbox, Button } from '@patternfly/react-core';\n\nclass AdvancedPopover extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      position: PopoverPosition.top,\n      show: false,\n      keepInViewChecked: true\n    };\n    this.handleClick = () => {\n      this.setState({\n        show: !this.state.show\n      });\n    };\n    this.handleKeepInViewChange = checked => {\n      this.setState({ keepInViewChecked: checked });\n    };\n    this.handleProgrammaticChange = checked => {\n      this.setState({\n        show: checked\n      });\n    };\n    this.shouldClose = tip => {\n      this.setState({ show: false });\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <span style={{ paddingRight: '10px' }}>Popover Position</span>\n          <select\n            onChange={event => {\n              this.setState({ position: event.target.value });\n            }}\n          >\n            {Object.keys(PopoverPosition).map(key => (\n              <option key={key} value={PopoverPosition[key]}>\n                {PopoverPosition[key]}\n              </option>\n            ))}\n          </select>\n          <Checkbox\n            label=\"Flip popover if the position falls outside the view\"\n            isChecked={this.state.keepInViewChecked}\n            onChange={this.handleKeepInViewChange}\n            aria-label=\"Keep in view\"\n            id=\"check-3\"\n          />\n          <Checkbox\n            label=\"Toggle popover from outside\"\n            isChecked={this.state.show}\n            onChange={this.handleProgrammaticChange}\n            aria-label=\"Toggle popover from outside\"\n            id=\"check-4\"\n          />\n        </div>\n\n        <div style={{ margin: '180px 0px 0px 270px' }}>\n          <Popover\n            position={this.state.position}\n            isVisible={this.state.show}\n            shouldClose={this.shouldClose}\n            enableFlip={this.state.keepInViewChecked}\n            appendTo={() => document.getElementById('___gatsby')}\n            headerContent={<div>Popover Header</div>}\n            bodyContent={\n              <div>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam id feugiat augue, nec fringilla turpis.\n              </div>\n            }\n            footerContent=\"Popover Footer\"\n          >\n            <Button onClick={this.handleClick}>Toggle Popover</Button>\n          </Popover>\n        </div>\n      </div>\n    );\n  }\n}\n```\n\n## Popover (Headless)\n```js\nimport React from 'react';\nimport { Popover, PopoverPosition, Checkbox, Button } from '@patternfly/react-core';\n\nHeadlessPopover = () => (\n  <Popover\n    position=\"right\"\n    bodyContent={\n      <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam id feugiat augue, nec fringilla turpis.</div>\n    }\n    aria-label=\"Headless Popover\"\n    footerContent=\"Popover Footer\"\n  >\n    <Button>Toggle Popover</Button>\n  </Popover>\n);\n```\n","code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Popover\",\n  \"cssPrefix\": \"pf-c-popover\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"simple-popover\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#simple-popover\",\n    \"aria-label\": \"simple popover permalink\",\n    \"class\": \"anchor\"\n  }), mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Simple Popover\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { Popover, PopoverPosition, Checkbox, Button } from '@patternfly/react-core';\\n\\nSimplePopover = () => (\\n  <Popover\\n    position=\\\"right\\\"\\n    headerContent={<div>Popover Header</div>}\\n    bodyContent={\\n      <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam id feugiat augue, nec fringilla turpis.</div>\\n    }\\n    footerContent=\\\"Popover Footer\\\"\\n  >\\n    <Button>Toggle Popover</Button>\\n  </Popover>\\n);\\n\")), mdx(\"h2\", {\n    \"id\": \"advanced-popover\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#advanced-popover\",\n    \"aria-label\": \"advanced popover permalink\",\n    \"class\": \"anchor\"\n  }), mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Advanced Popover\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { Popover, PopoverPosition, Checkbox, Button } from '@patternfly/react-core';\\n\\nclass AdvancedPopover extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      position: PopoverPosition.top,\\n      show: false,\\n      keepInViewChecked: true\\n    };\\n    this.handleClick = () => {\\n      this.setState({\\n        show: !this.state.show\\n      });\\n    };\\n    this.handleKeepInViewChange = checked => {\\n      this.setState({ keepInViewChecked: checked });\\n    };\\n    this.handleProgrammaticChange = checked => {\\n      this.setState({\\n        show: checked\\n      });\\n    };\\n    this.shouldClose = tip => {\\n      this.setState({ show: false });\\n    };\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <div>\\n          <span style={{ paddingRight: '10px' }}>Popover Position</span>\\n          <select\\n            onChange={event => {\\n              this.setState({ position: event.target.value });\\n            }}\\n          >\\n            {Object.keys(PopoverPosition).map(key => (\\n              <option key={key} value={PopoverPosition[key]}>\\n                {PopoverPosition[key]}\\n              </option>\\n            ))}\\n          </select>\\n          <Checkbox\\n            label=\\\"Flip popover if the position falls outside the view\\\"\\n            isChecked={this.state.keepInViewChecked}\\n            onChange={this.handleKeepInViewChange}\\n            aria-label=\\\"Keep in view\\\"\\n            id=\\\"check-3\\\"\\n          />\\n          <Checkbox\\n            label=\\\"Toggle popover from outside\\\"\\n            isChecked={this.state.show}\\n            onChange={this.handleProgrammaticChange}\\n            aria-label=\\\"Toggle popover from outside\\\"\\n            id=\\\"check-4\\\"\\n          />\\n        </div>\\n\\n        <div style={{ margin: '180px 0px 0px 270px' }}>\\n          <Popover\\n            position={this.state.position}\\n            isVisible={this.state.show}\\n            shouldClose={this.shouldClose}\\n            enableFlip={this.state.keepInViewChecked}\\n            appendTo={() => document.getElementById('___gatsby')}\\n            headerContent={<div>Popover Header</div>}\\n            bodyContent={\\n              <div>\\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam id feugiat augue, nec fringilla turpis.\\n              </div>\\n            }\\n            footerContent=\\\"Popover Footer\\\"\\n          >\\n            <Button onClick={this.handleClick}>Toggle Popover</Button>\\n          </Popover>\\n        </div>\\n      </div>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"popover-headless\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#popover-headless\",\n    \"aria-label\": \"popover headless permalink\",\n    \"class\": \"anchor\"\n  }), mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Popover (Headless)\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { Popover, PopoverPosition, Checkbox, Button } from '@patternfly/react-core';\\n\\nHeadlessPopover = () => (\\n  <Popover\\n    position=\\\"right\\\"\\n    bodyContent={\\n      <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam id feugiat augue, nec fringilla turpis.</div>\\n    }\\n    aria-label=\\\"Headless Popover\\\"\\n    footerContent=\\\"Popover Footer\\\"\\n  >\\n    <Button>Toggle Popover</Button>\\n  </Popover>\\n);\\n\")));\n}\nMDXContent.isMDXComponent = true;"}}},"pageContext":{"fileAbsolutePath":"/home/travis/build/patternfly/patternfly-org/packages/patternfly-4/_repos/react-core/src/components/Popover/Popover.md","fullscreen":true}}