{"data":{"mdx":{"rawBody":"---\ntitle: 'Switch'\ncssPrefix: 'pf-c-switch'\n---\n\nimport { Switch } from '@patternfly/react-core';\n\n## Simple Switch\n```js\nimport React from 'react';\nimport { Switch } from '@patternfly/react-core';\n\nclass SimpleSwitch extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isChecked: true\n    };\n    this.handleChange = isChecked => {\n      this.setState({ isChecked });\n    };\n  }\n\n  render() {\n    const { isChecked } = this.state;\n    return (\n      <Switch\n        id=\"simple-switch\"\n        label={isChecked ? 'Message when on' : 'Message when off'}\n        isChecked={isChecked}\n        onChange={this.handleChange}\n        aria-label=\"Message when on\"\n      />\n    );\n  }\n}\n```\n\n## Switch (No Labels)\n```js\nimport React from 'react';\nimport { Switch } from '@patternfly/react-core';\n\nclass NoLabelSwitch extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isChecked: true\n    };\n    this.handleChange = isChecked => {\n      this.setState({ isChecked });\n    };\n  }\n\n  render() {\n    const { isChecked } = this.state;\n    return (\n      <Switch id=\"no-label-switch-on\" aria-label=\"Message when on\" isChecked={isChecked} onChange={this.handleChange} />\n    );\n  }\n}\n```\n\n## Switch (Disabled)\n```js\nimport React from 'react';\nimport { Switch } from '@patternfly/react-core';\n\nDisabledSwitch = () => (\n  <React.Fragment>\n    <Switch id=\"disabled-switch-on\" aria-label=\"Message when on\" label=\"Message when on\" isChecked isDisabled />\n    <br />\n    <Switch\n      id=\"disabled-switch-off\"\n      aria-label=\"Message when on\"\n      label=\"Message when off\"\n      isChecked={false}\n      isDisabled\n    />\n    <br />\n    <Switch id=\"disabled-no-label-switch-on\" aria-label=\"Message when on\" isChecked isDisabled />\n    <br />\n    <Switch id=\"disabled-no-label-switch-off\" aria-label=\"Message when on\" isChecked={false} isDisabled />\n  </React.Fragment>\n);\n```\n\n## Switch (Uncontrolled)\n```js\nimport React from 'react';\nimport { Switch } from '@patternfly/react-core';\n\nUncontrolledSwitch = () => (\n  <React.Fragment>\n    <Switch id=\"uncontrolled-switch-on\" aria-label=\"Message when on\" label=\"Message when on\" isChecked />\n    <br />\n    <Switch id=\"uncontrolled-switch-off\" aria-label=\"Message when on\" label=\"Message when off\" isChecked={false} />\n    <br />\n    <Switch id=\"uncontrolled-no-label-switch-on\" aria-label=\"Message when on\" isChecked />\n    <br />\n    <Switch id=\"uncontrolled-no-label-switch-off\" aria-label=\"Message when on\" isChecked={false} />\n  </React.Fragment>\n);\n```\n","code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Switch\",\n  \"cssPrefix\": \"pf-c-switch\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"simple-switch\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#simple-switch\",\n    \"aria-label\": \"simple switch permalink\",\n    \"class\": \"anchor\"\n  }), mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Simple Switch\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { Switch } from '@patternfly/react-core';\\n\\nclass SimpleSwitch extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isChecked: true\\n    };\\n    this.handleChange = isChecked => {\\n      this.setState({ isChecked });\\n    };\\n  }\\n\\n  render() {\\n    const { isChecked } = this.state;\\n    return (\\n      <Switch\\n        id=\\\"simple-switch\\\"\\n        label={isChecked ? 'Message when on' : 'Message when off'}\\n        isChecked={isChecked}\\n        onChange={this.handleChange}\\n        aria-label=\\\"Message when on\\\"\\n      />\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"switch-no-labels\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#switch-no-labels\",\n    \"aria-label\": \"switch no labels permalink\",\n    \"class\": \"anchor\"\n  }), mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Switch (No Labels)\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { Switch } from '@patternfly/react-core';\\n\\nclass NoLabelSwitch extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isChecked: true\\n    };\\n    this.handleChange = isChecked => {\\n      this.setState({ isChecked });\\n    };\\n  }\\n\\n  render() {\\n    const { isChecked } = this.state;\\n    return (\\n      <Switch id=\\\"no-label-switch-on\\\" aria-label=\\\"Message when on\\\" isChecked={isChecked} onChange={this.handleChange} />\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"switch-disabled\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#switch-disabled\",\n    \"aria-label\": \"switch disabled permalink\",\n    \"class\": \"anchor\"\n  }), mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Switch (Disabled)\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { Switch } from '@patternfly/react-core';\\n\\nDisabledSwitch = () => (\\n  <React.Fragment>\\n    <Switch id=\\\"disabled-switch-on\\\" aria-label=\\\"Message when on\\\" label=\\\"Message when on\\\" isChecked isDisabled />\\n    <br />\\n    <Switch\\n      id=\\\"disabled-switch-off\\\"\\n      aria-label=\\\"Message when on\\\"\\n      label=\\\"Message when off\\\"\\n      isChecked={false}\\n      isDisabled\\n    />\\n    <br />\\n    <Switch id=\\\"disabled-no-label-switch-on\\\" aria-label=\\\"Message when on\\\" isChecked isDisabled />\\n    <br />\\n    <Switch id=\\\"disabled-no-label-switch-off\\\" aria-label=\\\"Message when on\\\" isChecked={false} isDisabled />\\n  </React.Fragment>\\n);\\n\")), mdx(\"h2\", {\n    \"id\": \"switch-uncontrolled\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#switch-uncontrolled\",\n    \"aria-label\": \"switch uncontrolled permalink\",\n    \"class\": \"anchor\"\n  }), mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Switch (Uncontrolled)\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { Switch } from '@patternfly/react-core';\\n\\nUncontrolledSwitch = () => (\\n  <React.Fragment>\\n    <Switch id=\\\"uncontrolled-switch-on\\\" aria-label=\\\"Message when on\\\" label=\\\"Message when on\\\" isChecked />\\n    <br />\\n    <Switch id=\\\"uncontrolled-switch-off\\\" aria-label=\\\"Message when on\\\" label=\\\"Message when off\\\" isChecked={false} />\\n    <br />\\n    <Switch id=\\\"uncontrolled-no-label-switch-on\\\" aria-label=\\\"Message when on\\\" isChecked />\\n    <br />\\n    <Switch id=\\\"uncontrolled-no-label-switch-off\\\" aria-label=\\\"Message when on\\\" isChecked={false} />\\n  </React.Fragment>\\n);\\n\")));\n}\nMDXContent.isMDXComponent = true;"}}},"pageContext":{"fileAbsolutePath":"/home/travis/build/patternfly/patternfly-org/packages/patternfly-4/_repos/react-core/src/components/Switch/Switch.md","fullscreen":true}}