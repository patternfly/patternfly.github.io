{"data":{"mdx":{"rawBody":"---\ntitle: 'Tabs'\ncssPrefix: 'pf-c-tabs'\n---\n\n## Simple Tabs\n\nimport { Tabs, Tab, TabsVariant, TabContent } from '@patternfly/react-core';\n\nUse Primary Sections\n\n```js\nimport React from 'react';\nimport { Tabs, Tab, TabsVariant, TabContent } from '@patternfly/react-core';\n\nclass SimpleTabs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTabKey: 0\n    };\n    // Toggle currently active tab\n    this.handleTabClick = (event, tabIndex) => {\n      this.setState({\n        activeTabKey: tabIndex\n      });\n    };\n  }\n\n  render() {\n    return (\n      <Tabs activeKey={this.state.activeTabKey} onSelect={this.handleTabClick}>\n        <Tab eventKey={0} title=\"Tab item 1\">\n          Tab 1 section\n        </Tab>\n        <Tab eventKey={1} title=\"Tab item 2\">\n          Tab 2 section\n        </Tab>\n        <Tab eventKey={2} title=\"Tab item 3\">\n          Tab 3 section\n        </Tab>\n      </Tabs>\n    );\n  }\n}\n```\n\n## Scroll Buttons Tabs\n```js\nimport React from 'react';\nimport { Tabs, Tab, TabsVariant, TabContent } from '@patternfly/react-core';\n\nclass ScrollButtonsTabs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTabKey: 0\n    };\n\n    // Toggle currently active tab\n    this.handleTabClick = (event, tabIndex) => {\n      this.setState({\n        activeTabKey: tabIndex\n      });\n    };\n  }\n\n  render() {\n    return (\n      <Tabs activeKey={this.state.activeTabKey} onSelect={this.handleTabClick}>\n        <Tab eventKey={0} title=\"Tab item 1\">\n          Tab 1 section\n        </Tab>\n        <Tab eventKey={1} title=\"Tab item 2\">\n          Tab 2 section\n        </Tab>\n        <Tab eventKey={2} title=\"Tab item 3\">\n          Tab 3 section\n        </Tab>\n        <Tab eventKey={3} title=\"Tab item 4\">\n          Tab 4 section\n        </Tab>\n        <Tab eventKey={4} title=\"Tab item 5\">\n          Tab 5 section\n        </Tab>\n        <Tab eventKey={5} title=\"Tab item 6\">\n          Tab 6 section\n        </Tab>\n        <Tab eventKey={6} title=\"Tab item 7\">\n          Tab 7 section\n        </Tab>\n        <Tab eventKey={7} title=\"Tab item 8\">\n          Tab 8 section\n        </Tab>\n        <Tab eventKey={8} title=\"Tab item 9\">\n          Tab 9 section\n        </Tab>\n        <Tab eventKey={9} title=\"Tab item 10\">\n          Tab 10 section\n        </Tab>\n        <Tab eventKey={10} title=\"Tab item 11\">\n          Tab 11 section\n        </Tab>\n        <Tab eventKey={11} title=\"Tab item 12\">\n          Tab 12 section\n        </Tab>\n      </Tabs>\n    );\n  }\n}\n```\n\n## Secondary Buttons Tabs\n```js\nimport React from 'react';\nimport { Tabs, Tab, TabsVariant, TabContent } from '@patternfly/react-core';\n\nclass SecondaryTabs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTabKey1: 0,\n      activeTabKey2: 10\n    };\n    // Toggle currently active tab\n    this.handleTabClickFirst = (event, tabIndex) => {\n      this.setState({\n        activeTabKey1: tabIndex\n      });\n    };\n    // Toggle currently active secondary tab\n    this.handleTabClickSecond = (event, tabIndex) => {\n      this.setState({\n        activeTabKey2: tabIndex\n      });\n    };\n  }\n\n  render() {\n    return (\n      <Tabs activeKey={this.state.activeTabKey1} onSelect={this.handleTabClickFirst}>\n        <Tab eventKey={0} title=\"Tab item 1\">\n          <Tabs activeKey={this.state.activeTabKey2} isSecondary onSelect={this.handleTabClickSecond}>\n            <Tab eventKey={10} title=\"Secondary tab item 1\">\n              Secondary tab item 1 item section\n            </Tab>\n            <Tab eventKey={11} title=\"Secondary tab item 2\">\n              Secondary tab item 2 section\n            </Tab>\n            <Tab eventKey={12} title=\"Secondary tab item 3\">\n              Secondary tab item 3 section\n            </Tab>\n          </Tabs>\n        </Tab>\n        <Tab eventKey={1} title=\"Tab item 2\">\n          Tab 2 section\n        </Tab>\n        <Tab eventKey={2} title=\"Tab item 3\">\n          Tab 3 section\n        </Tab>\n      </Tabs>\n    );\n  }\n}\n```\n\n## Filled Buttons Tabs\n```js\nimport React from 'react';\nimport { Tabs, Tab, TabsVariant, TabContent } from '@patternfly/react-core';\n\nclass FilledTabs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTabKey: 0\n    };\n    // Toggle currently active tab\n    this.handleTabClick = (event, tabIndex) => {\n      this.setState({\n        activeTabKey: tabIndex\n      });\n    };\n  }\n\n  render() {\n    return (\n      <Tabs isFilled activeKey={this.state.activeTabKey} onSelect={this.handleTabClick}>\n        <Tab eventKey={0} title=\"Tab item 1\">\n          Tab 1 section\n        </Tab>\n        <Tab eventKey={1} title=\"Tab item 2\">\n          Tab 2 section\n        </Tab>\n        <Tab eventKey={2} title=\"Tab item 3\">\n          Tab 3 section\n        </Tab>\n      </Tabs>\n    );\n  }\n}\n```\n\n## Accessible Secondary Tabs\n```js\nimport React from 'react';\nimport { Tabs, Tab, TabsVariant, TabContent } from '@patternfly/react-core';\n\nclass AccessibleSecondaryTabs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTabKey1: 0,\n      activeTabKey2: 10\n    };\n\n    // Toggle currently active tab\n    this.handleTabClickFirst = (event, tabIndex) => {\n      this.setState({\n        activeTabKey1: tabIndex\n      });\n    };\n\n    // Toggle currently active secondary tab\n    this.handleTabClickSecond = (event, tabIndex) => {\n      this.setState({\n        activeTabKey2: tabIndex\n      });\n    };\n  }\n\n  render() {\n    return (\n      <Tabs\n        activeKey={this.state.activeTabKey1}\n        onSelect={this.handleTabClickFirst}\n        aria-label=\"Local\"\n        variant={TabsVariant.nav}\n      >\n        <Tab eventKey={0} title=\"Tab item 1\">\n          <Tabs\n            activeKey={this.state.activeTabKey2}\n            isSecondary\n            onSelect={this.handleTabClickSecond}\n            aria-label=\"Local secondary\"\n            variant={TabsVariant.nav}\n          >\n            <Tab eventKey={10} title=\"Secondary tab item 1\">\n              Secondary tab item 1 item section\n            </Tab>\n            <Tab eventKey={11} title=\"Secondary tab item 2\">\n              Secondary tab item 2 section\n            </Tab>\n            <Tab eventKey={12} title=\"Secondary tab item 3\">\n              Secondary tab item 3 section\n            </Tab>\n          </Tabs>\n        </Tab>\n        <Tab eventKey={1} title=\"Tab item 2\">\n          Tab 2 section\n        </Tab>\n        <Tab eventKey={2} title=\"Tab item 3\">\n          Tab 3 section\n        </Tab>\n      </Tabs>\n    );\n  }\n}\n```\n\n## AccessibleTabs\n```js\nimport React from 'react';\nimport { Tabs, Tab, TabsVariant, TabContent } from '@patternfly/react-core';\n\nclass AccessibleTabs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTabKey: 0\n    };\n\n    // Toggle currently active tab\n    this.handleTabClick = (event, tabIndex) => {\n      this.setState({\n        activeTabKey: tabIndex\n      });\n    };\n  }\n\n  render() {\n    return (\n      <Tabs\n        activeKey={this.state.activeTabKey}\n        onSelect={this.handleTabClick}\n        aria-label=\"Local\"\n        variant={TabsVariant.nav}\n      >\n        <Tab eventKey={0} title=\"Tab item 1\">\n          Tab 1 section\n        </Tab>\n        <Tab eventKey={1} title=\"Tab item 2\">\n          Tab 2 section\n        </Tab>\n        <Tab eventKey={2} title=\"Tab item 3\">\n          Tab 3 section\n        </Tab>\n      </Tabs>\n    );\n  }\n}\n```\n\n## SeparateTabContent\n```js\nimport React from 'react';\nimport { Tabs, Tab, TabsVariant, TabContent } from '@patternfly/react-core';\n\nclass SeparateTabContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeKey: 0\n    };\n\n    this.contentRef1 = React.createRef();\n    this.contentRef2 = React.createRef();\n    this.contentRef3 = React.createRef();\n\n    // Toggle currently active tab\n    this.handleTabClick = (event, tabIndex) => {\n      this.setState({\n        activeTabKey: tabIndex\n      });\n    };\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Tabs activeKey={this.state.activeTabKey} onSelect={this.handleTabClick}>\n          <Tab eventKey={0} title=\"Tab item 1\" tabContentId=\"refTab1Section\" tabContentRef={this.contentRef1} />\n          <Tab eventKey={1} title=\"Tab item 2\" tabContentId=\"refTab2Section\" tabContentRef={this.contentRef2} />\n          <Tab eventKey={2} title=\"Tab item 3\" tabContentId=\"refTab3Section\" tabContentRef={this.contentRef3} />\n        </Tabs>\n        <div>\n          <TabContent eventKey={0} id=\"refTab1Section\" ref={this.contentRef1} aria-label=\"Tab item 1\">\n            Tab 1 section\n          </TabContent>\n          <TabContent eventKey={1} id=\"refTab2Section\" ref={this.contentRef2} aria-label=\"Tab item 2\" hidden>\n            Tab 2 section\n          </TabContent>\n          <TabContent eventKey={2} id=\"refTab3Section\" ref={this.contentRef3} aria-label=\"Tab item 3\" hidden>\n            Tab 3 section\n          </TabContent>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n```\n","code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Tabs\",\n  \"cssPrefix\": \"pf-c-tabs\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"simple-tabs\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#simple-tabs\",\n    \"aria-label\": \"simple tabs permalink\",\n    \"class\": \"anchor\"\n  }), mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Simple Tabs\"), mdx(\"p\", null, \"Use Primary Sections\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { Tabs, Tab, TabsVariant, TabContent } from '@patternfly/react-core';\\n\\nclass SimpleTabs extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeTabKey: 0\\n    };\\n    // Toggle currently active tab\\n    this.handleTabClick = (event, tabIndex) => {\\n      this.setState({\\n        activeTabKey: tabIndex\\n      });\\n    };\\n  }\\n\\n  render() {\\n    return (\\n      <Tabs activeKey={this.state.activeTabKey} onSelect={this.handleTabClick}>\\n        <Tab eventKey={0} title=\\\"Tab item 1\\\">\\n          Tab 1 section\\n        </Tab>\\n        <Tab eventKey={1} title=\\\"Tab item 2\\\">\\n          Tab 2 section\\n        </Tab>\\n        <Tab eventKey={2} title=\\\"Tab item 3\\\">\\n          Tab 3 section\\n        </Tab>\\n      </Tabs>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"scroll-buttons-tabs\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#scroll-buttons-tabs\",\n    \"aria-label\": \"scroll buttons tabs permalink\",\n    \"class\": \"anchor\"\n  }), mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Scroll Buttons Tabs\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { Tabs, Tab, TabsVariant, TabContent } from '@patternfly/react-core';\\n\\nclass ScrollButtonsTabs extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeTabKey: 0\\n    };\\n\\n    // Toggle currently active tab\\n    this.handleTabClick = (event, tabIndex) => {\\n      this.setState({\\n        activeTabKey: tabIndex\\n      });\\n    };\\n  }\\n\\n  render() {\\n    return (\\n      <Tabs activeKey={this.state.activeTabKey} onSelect={this.handleTabClick}>\\n        <Tab eventKey={0} title=\\\"Tab item 1\\\">\\n          Tab 1 section\\n        </Tab>\\n        <Tab eventKey={1} title=\\\"Tab item 2\\\">\\n          Tab 2 section\\n        </Tab>\\n        <Tab eventKey={2} title=\\\"Tab item 3\\\">\\n          Tab 3 section\\n        </Tab>\\n        <Tab eventKey={3} title=\\\"Tab item 4\\\">\\n          Tab 4 section\\n        </Tab>\\n        <Tab eventKey={4} title=\\\"Tab item 5\\\">\\n          Tab 5 section\\n        </Tab>\\n        <Tab eventKey={5} title=\\\"Tab item 6\\\">\\n          Tab 6 section\\n        </Tab>\\n        <Tab eventKey={6} title=\\\"Tab item 7\\\">\\n          Tab 7 section\\n        </Tab>\\n        <Tab eventKey={7} title=\\\"Tab item 8\\\">\\n          Tab 8 section\\n        </Tab>\\n        <Tab eventKey={8} title=\\\"Tab item 9\\\">\\n          Tab 9 section\\n        </Tab>\\n        <Tab eventKey={9} title=\\\"Tab item 10\\\">\\n          Tab 10 section\\n        </Tab>\\n        <Tab eventKey={10} title=\\\"Tab item 11\\\">\\n          Tab 11 section\\n        </Tab>\\n        <Tab eventKey={11} title=\\\"Tab item 12\\\">\\n          Tab 12 section\\n        </Tab>\\n      </Tabs>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"secondary-buttons-tabs\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#secondary-buttons-tabs\",\n    \"aria-label\": \"secondary buttons tabs permalink\",\n    \"class\": \"anchor\"\n  }), mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Secondary Buttons Tabs\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { Tabs, Tab, TabsVariant, TabContent } from '@patternfly/react-core';\\n\\nclass SecondaryTabs extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeTabKey1: 0,\\n      activeTabKey2: 10\\n    };\\n    // Toggle currently active tab\\n    this.handleTabClickFirst = (event, tabIndex) => {\\n      this.setState({\\n        activeTabKey1: tabIndex\\n      });\\n    };\\n    // Toggle currently active secondary tab\\n    this.handleTabClickSecond = (event, tabIndex) => {\\n      this.setState({\\n        activeTabKey2: tabIndex\\n      });\\n    };\\n  }\\n\\n  render() {\\n    return (\\n      <Tabs activeKey={this.state.activeTabKey1} onSelect={this.handleTabClickFirst}>\\n        <Tab eventKey={0} title=\\\"Tab item 1\\\">\\n          <Tabs activeKey={this.state.activeTabKey2} isSecondary onSelect={this.handleTabClickSecond}>\\n            <Tab eventKey={10} title=\\\"Secondary tab item 1\\\">\\n              Secondary tab item 1 item section\\n            </Tab>\\n            <Tab eventKey={11} title=\\\"Secondary tab item 2\\\">\\n              Secondary tab item 2 section\\n            </Tab>\\n            <Tab eventKey={12} title=\\\"Secondary tab item 3\\\">\\n              Secondary tab item 3 section\\n            </Tab>\\n          </Tabs>\\n        </Tab>\\n        <Tab eventKey={1} title=\\\"Tab item 2\\\">\\n          Tab 2 section\\n        </Tab>\\n        <Tab eventKey={2} title=\\\"Tab item 3\\\">\\n          Tab 3 section\\n        </Tab>\\n      </Tabs>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"filled-buttons-tabs\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#filled-buttons-tabs\",\n    \"aria-label\": \"filled buttons tabs permalink\",\n    \"class\": \"anchor\"\n  }), mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Filled Buttons Tabs\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { Tabs, Tab, TabsVariant, TabContent } from '@patternfly/react-core';\\n\\nclass FilledTabs extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeTabKey: 0\\n    };\\n    // Toggle currently active tab\\n    this.handleTabClick = (event, tabIndex) => {\\n      this.setState({\\n        activeTabKey: tabIndex\\n      });\\n    };\\n  }\\n\\n  render() {\\n    return (\\n      <Tabs isFilled activeKey={this.state.activeTabKey} onSelect={this.handleTabClick}>\\n        <Tab eventKey={0} title=\\\"Tab item 1\\\">\\n          Tab 1 section\\n        </Tab>\\n        <Tab eventKey={1} title=\\\"Tab item 2\\\">\\n          Tab 2 section\\n        </Tab>\\n        <Tab eventKey={2} title=\\\"Tab item 3\\\">\\n          Tab 3 section\\n        </Tab>\\n      </Tabs>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"accessible-secondary-tabs\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#accessible-secondary-tabs\",\n    \"aria-label\": \"accessible secondary tabs permalink\",\n    \"class\": \"anchor\"\n  }), mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Accessible Secondary Tabs\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { Tabs, Tab, TabsVariant, TabContent } from '@patternfly/react-core';\\n\\nclass AccessibleSecondaryTabs extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeTabKey1: 0,\\n      activeTabKey2: 10\\n    };\\n\\n    // Toggle currently active tab\\n    this.handleTabClickFirst = (event, tabIndex) => {\\n      this.setState({\\n        activeTabKey1: tabIndex\\n      });\\n    };\\n\\n    // Toggle currently active secondary tab\\n    this.handleTabClickSecond = (event, tabIndex) => {\\n      this.setState({\\n        activeTabKey2: tabIndex\\n      });\\n    };\\n  }\\n\\n  render() {\\n    return (\\n      <Tabs\\n        activeKey={this.state.activeTabKey1}\\n        onSelect={this.handleTabClickFirst}\\n        aria-label=\\\"Local\\\"\\n        variant={TabsVariant.nav}\\n      >\\n        <Tab eventKey={0} title=\\\"Tab item 1\\\">\\n          <Tabs\\n            activeKey={this.state.activeTabKey2}\\n            isSecondary\\n            onSelect={this.handleTabClickSecond}\\n            aria-label=\\\"Local secondary\\\"\\n            variant={TabsVariant.nav}\\n          >\\n            <Tab eventKey={10} title=\\\"Secondary tab item 1\\\">\\n              Secondary tab item 1 item section\\n            </Tab>\\n            <Tab eventKey={11} title=\\\"Secondary tab item 2\\\">\\n              Secondary tab item 2 section\\n            </Tab>\\n            <Tab eventKey={12} title=\\\"Secondary tab item 3\\\">\\n              Secondary tab item 3 section\\n            </Tab>\\n          </Tabs>\\n        </Tab>\\n        <Tab eventKey={1} title=\\\"Tab item 2\\\">\\n          Tab 2 section\\n        </Tab>\\n        <Tab eventKey={2} title=\\\"Tab item 3\\\">\\n          Tab 3 section\\n        </Tab>\\n      </Tabs>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"accessibletabs\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#accessibletabs\",\n    \"aria-label\": \"accessibletabs permalink\",\n    \"class\": \"anchor\"\n  }), mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"AccessibleTabs\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { Tabs, Tab, TabsVariant, TabContent } from '@patternfly/react-core';\\n\\nclass AccessibleTabs extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeTabKey: 0\\n    };\\n\\n    // Toggle currently active tab\\n    this.handleTabClick = (event, tabIndex) => {\\n      this.setState({\\n        activeTabKey: tabIndex\\n      });\\n    };\\n  }\\n\\n  render() {\\n    return (\\n      <Tabs\\n        activeKey={this.state.activeTabKey}\\n        onSelect={this.handleTabClick}\\n        aria-label=\\\"Local\\\"\\n        variant={TabsVariant.nav}\\n      >\\n        <Tab eventKey={0} title=\\\"Tab item 1\\\">\\n          Tab 1 section\\n        </Tab>\\n        <Tab eventKey={1} title=\\\"Tab item 2\\\">\\n          Tab 2 section\\n        </Tab>\\n        <Tab eventKey={2} title=\\\"Tab item 3\\\">\\n          Tab 3 section\\n        </Tab>\\n      </Tabs>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"separatetabcontent\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#separatetabcontent\",\n    \"aria-label\": \"separatetabcontent permalink\",\n    \"class\": \"anchor\"\n  }), mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"SeparateTabContent\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { Tabs, Tab, TabsVariant, TabContent } from '@patternfly/react-core';\\n\\nclass SeparateTabContent extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeKey: 0\\n    };\\n\\n    this.contentRef1 = React.createRef();\\n    this.contentRef2 = React.createRef();\\n    this.contentRef3 = React.createRef();\\n\\n    // Toggle currently active tab\\n    this.handleTabClick = (event, tabIndex) => {\\n      this.setState({\\n        activeTabKey: tabIndex\\n      });\\n    };\\n  }\\n\\n  render() {\\n    return (\\n      <React.Fragment>\\n        <Tabs activeKey={this.state.activeTabKey} onSelect={this.handleTabClick}>\\n          <Tab eventKey={0} title=\\\"Tab item 1\\\" tabContentId=\\\"refTab1Section\\\" tabContentRef={this.contentRef1} />\\n          <Tab eventKey={1} title=\\\"Tab item 2\\\" tabContentId=\\\"refTab2Section\\\" tabContentRef={this.contentRef2} />\\n          <Tab eventKey={2} title=\\\"Tab item 3\\\" tabContentId=\\\"refTab3Section\\\" tabContentRef={this.contentRef3} />\\n        </Tabs>\\n        <div>\\n          <TabContent eventKey={0} id=\\\"refTab1Section\\\" ref={this.contentRef1} aria-label=\\\"Tab item 1\\\">\\n            Tab 1 section\\n          </TabContent>\\n          <TabContent eventKey={1} id=\\\"refTab2Section\\\" ref={this.contentRef2} aria-label=\\\"Tab item 2\\\" hidden>\\n            Tab 2 section\\n          </TabContent>\\n          <TabContent eventKey={2} id=\\\"refTab3Section\\\" ref={this.contentRef3} aria-label=\\\"Tab item 3\\\" hidden>\\n            Tab 3 section\\n          </TabContent>\\n        </div>\\n      </React.Fragment>\\n    );\\n  }\\n}\\n\")));\n}\nMDXContent.isMDXComponent = true;"}}},"pageContext":{"fileAbsolutePath":"/home/travis/build/patternfly/patternfly-org/packages/patternfly-4/_repos/react-core/src/components/Tabs/Tabs.md","fullscreen":true}}