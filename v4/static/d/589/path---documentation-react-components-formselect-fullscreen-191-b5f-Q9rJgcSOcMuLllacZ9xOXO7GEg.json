{"data":{"mdx":{"rawBody":"---\ntitle: 'FormSelect'\ncssPrefix: 'pf-c-form-control'\n---\n\nimport { FormSelect, FormSelectOption, FormSelectOptionGroup } from '@patternfly/react-core';\n\n## Simple FormSelect\n```js\nimport React from 'react';\nimport { FormSelect, FormSelectOption, FormSelectOptionGroup } from '@patternfly/react-core';\n\nclass FormSelectInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 'mrs'\n    };\n    this.onChange = (value, event) => {\n      this.setState({ value });\n    };\n    this.options = [\n      { value: 'please choose', label: 'Please Choose', disabled: true },\n      { value: 'mr', label: 'Mr', disabled: false },\n      { value: 'miss', label: 'Miss', disabled: false },\n      { value: 'mrs', label: 'Mrs', disabled: false },\n      { value: 'ms', label: 'Ms', disabled: false },\n      { value: 'dr', label: 'Dr', disabled: false },\n      { value: 'other', label: 'Other', disabled: false }\n    ];\n  }\n\n  render() {\n    return (\n      <FormSelect value={this.state.value} onChange={this.onChange} aria-label=\"FormSelect Input\">\n        {this.options.map((option, index) => (\n          <FormSelectOption isDisabled={option.disabled} key={index} value={option.value} label={option.label} />\n        ))}\n      </FormSelect>\n    );\n  }\n}\n```\n\n## FormSelect (Invalid)\n```js\nimport React from 'react';\nimport { FormSelect, FormSelectOption, FormSelectOptionGroup } from '@patternfly/react-core';\n\nclass FormSelectInputInvalid extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: ''\n    };\n    this.isEmpty = () => this.state.value !== '';\n    this.onChange = (value, event) => {\n      this.setState({ value });\n    };\n    this.options = [\n      { value: '', label: 'Choose a number', disabled: false },\n      { value: '1', label: 'One', disabled: false },\n      { value: '2', label: 'Two', disabled: false },\n      { value: '3', label: 'Three', disabled: false }\n    ];\n  }\n\n  render() {\n    return (\n      <FormSelect\n        isValid={this.isEmpty()}\n        value={this.state.value}\n        onChange={this.onChange}\n        aria-label=\"FormSelect Input\"\n      >\n        {this.options.map((option, index) => (\n          <FormSelectOption isDisabled={option.disabled} key={index} value={option.value} label={option.label} />\n        ))}\n      </FormSelect>\n    );\n  }\n}\n```\n\n## FormSelect (Disabled)\n```js\nimport React from 'react';\nimport { FormSelect, FormSelectOption, FormSelectOptionGroup } from '@patternfly/react-core';\n\nclass FormSelectInputDisabled extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 'mrs'\n    };\n    this.onChange = (value, event) => {\n      this.setState({ value });\n    };\n    this.options = [\n      { value: 'please choose', label: 'Please Choose', disabled: true },\n      { value: 'mr', label: 'Mr', disabled: false },\n      { value: 'miss', label: 'Miss', disabled: false },\n      { value: 'mrs', label: 'Mrs', disabled: false },\n      { value: 'ms', label: 'Ms', disabled: false },\n      { value: 'dr', label: 'Dr', disabled: false },\n      { value: 'other', label: 'Other', disabled: false }\n    ];\n  }\n\n  render() {\n    return (\n      <FormSelect value={this.state.value} onChange={this.onChange} isDisabled aria-label=\"FormSelect Input\">\n        {this.options.map((option, index) => (\n          <FormSelectOption isDisabled={option.disabled} key={index} value={option.value} label={option.label} />\n        ))}\n      </FormSelect>\n    );\n  }\n}\n```\n\n## FormSelect (Grouped)\n```js\nimport React from 'react';\nimport { FormSelect, FormSelectOption, FormSelectOptionGroup } from '@patternfly/react-core';\n\nclass FormSelectInputGrouped extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '2'\n    };\n    this.onChange = (value, event) => {\n      this.setState({ value });\n    };\n    this.groups = [\n      {\n        groupLabel: 'Group1',\n        disabled: false,\n        options: [\n          { value: '1', label: 'The First Option', disabled: false },\n          { value: '2', label: 'Second option is selected by default', disabled: false }\n        ]\n      },\n      {\n        groupLabel: 'Group2',\n        disabled: false,\n        options: [\n          { value: '3', label: 'The Third Option', disabled: false },\n          { value: '4', label: 'The Fourth option', disabled: false }\n        ]\n      },\n      {\n        groupLabel: 'Group3',\n        disabled: true,\n        options: [\n          { value: '5', label: 'The Fifth Option', disabled: false },\n          { value: '6', label: 'The Sixth option', disabled: false }\n        ]\n      }\n    ];\n    this.getOptionLbl = option => option.label;\n    this.getOptionVal = option => option.value;\n    this.getOptionsGroupLbl = group => group && group.groupLabel;\n    this.getGroupOptions = group => group && group.options;\n  }\n\n  render() {\n    return (\n      <FormSelect value={this.state.value} onChange={this.onChange} aria-label=\"FormSelect Input\">\n        {this.groups.map((group, index) => (\n          <FormSelectOptionGroup isDisabled={group.disabled} key={index} label={group.groupLabel}>\n            {group.options.map((option, i) => (\n              <FormSelectOption isDisabled={option.disabled} key={i} value={option.value} label={option.label} />\n            ))}\n          </FormSelectOptionGroup>\n        ))}\n      </FormSelect>\n    );\n  }\n}\n```\n","code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"FormSelect\",\n  \"cssPrefix\": \"pf-c-form-control\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"simple-formselect\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#simple-formselect\",\n    \"aria-label\": \"simple formselect permalink\",\n    \"class\": \"anchor\"\n  }), mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Simple FormSelect\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { FormSelect, FormSelectOption, FormSelectOptionGroup } from '@patternfly/react-core';\\n\\nclass FormSelectInput extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      value: 'mrs'\\n    };\\n    this.onChange = (value, event) => {\\n      this.setState({ value });\\n    };\\n    this.options = [\\n      { value: 'please choose', label: 'Please Choose', disabled: true },\\n      { value: 'mr', label: 'Mr', disabled: false },\\n      { value: 'miss', label: 'Miss', disabled: false },\\n      { value: 'mrs', label: 'Mrs', disabled: false },\\n      { value: 'ms', label: 'Ms', disabled: false },\\n      { value: 'dr', label: 'Dr', disabled: false },\\n      { value: 'other', label: 'Other', disabled: false }\\n    ];\\n  }\\n\\n  render() {\\n    return (\\n      <FormSelect value={this.state.value} onChange={this.onChange} aria-label=\\\"FormSelect Input\\\">\\n        {this.options.map((option, index) => (\\n          <FormSelectOption isDisabled={option.disabled} key={index} value={option.value} label={option.label} />\\n        ))}\\n      </FormSelect>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"formselect-invalid\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#formselect-invalid\",\n    \"aria-label\": \"formselect invalid permalink\",\n    \"class\": \"anchor\"\n  }), mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"FormSelect (Invalid)\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { FormSelect, FormSelectOption, FormSelectOptionGroup } from '@patternfly/react-core';\\n\\nclass FormSelectInputInvalid extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      value: ''\\n    };\\n    this.isEmpty = () => this.state.value !== '';\\n    this.onChange = (value, event) => {\\n      this.setState({ value });\\n    };\\n    this.options = [\\n      { value: '', label: 'Choose a number', disabled: false },\\n      { value: '1', label: 'One', disabled: false },\\n      { value: '2', label: 'Two', disabled: false },\\n      { value: '3', label: 'Three', disabled: false }\\n    ];\\n  }\\n\\n  render() {\\n    return (\\n      <FormSelect\\n        isValid={this.isEmpty()}\\n        value={this.state.value}\\n        onChange={this.onChange}\\n        aria-label=\\\"FormSelect Input\\\"\\n      >\\n        {this.options.map((option, index) => (\\n          <FormSelectOption isDisabled={option.disabled} key={index} value={option.value} label={option.label} />\\n        ))}\\n      </FormSelect>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"formselect-disabled\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#formselect-disabled\",\n    \"aria-label\": \"formselect disabled permalink\",\n    \"class\": \"anchor\"\n  }), mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"FormSelect (Disabled)\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { FormSelect, FormSelectOption, FormSelectOptionGroup } from '@patternfly/react-core';\\n\\nclass FormSelectInputDisabled extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      value: 'mrs'\\n    };\\n    this.onChange = (value, event) => {\\n      this.setState({ value });\\n    };\\n    this.options = [\\n      { value: 'please choose', label: 'Please Choose', disabled: true },\\n      { value: 'mr', label: 'Mr', disabled: false },\\n      { value: 'miss', label: 'Miss', disabled: false },\\n      { value: 'mrs', label: 'Mrs', disabled: false },\\n      { value: 'ms', label: 'Ms', disabled: false },\\n      { value: 'dr', label: 'Dr', disabled: false },\\n      { value: 'other', label: 'Other', disabled: false }\\n    ];\\n  }\\n\\n  render() {\\n    return (\\n      <FormSelect value={this.state.value} onChange={this.onChange} isDisabled aria-label=\\\"FormSelect Input\\\">\\n        {this.options.map((option, index) => (\\n          <FormSelectOption isDisabled={option.disabled} key={index} value={option.value} label={option.label} />\\n        ))}\\n      </FormSelect>\\n    );\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"formselect-grouped\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#formselect-grouped\",\n    \"aria-label\": \"formselect grouped permalink\",\n    \"class\": \"anchor\"\n  }), mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"FormSelect (Grouped)\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { FormSelect, FormSelectOption, FormSelectOptionGroup } from '@patternfly/react-core';\\n\\nclass FormSelectInputGrouped extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      value: '2'\\n    };\\n    this.onChange = (value, event) => {\\n      this.setState({ value });\\n    };\\n    this.groups = [\\n      {\\n        groupLabel: 'Group1',\\n        disabled: false,\\n        options: [\\n          { value: '1', label: 'The First Option', disabled: false },\\n          { value: '2', label: 'Second option is selected by default', disabled: false }\\n        ]\\n      },\\n      {\\n        groupLabel: 'Group2',\\n        disabled: false,\\n        options: [\\n          { value: '3', label: 'The Third Option', disabled: false },\\n          { value: '4', label: 'The Fourth option', disabled: false }\\n        ]\\n      },\\n      {\\n        groupLabel: 'Group3',\\n        disabled: true,\\n        options: [\\n          { value: '5', label: 'The Fifth Option', disabled: false },\\n          { value: '6', label: 'The Sixth option', disabled: false }\\n        ]\\n      }\\n    ];\\n    this.getOptionLbl = option => option.label;\\n    this.getOptionVal = option => option.value;\\n    this.getOptionsGroupLbl = group => group && group.groupLabel;\\n    this.getGroupOptions = group => group && group.options;\\n  }\\n\\n  render() {\\n    return (\\n      <FormSelect value={this.state.value} onChange={this.onChange} aria-label=\\\"FormSelect Input\\\">\\n        {this.groups.map((group, index) => (\\n          <FormSelectOptionGroup isDisabled={group.disabled} key={index} label={group.groupLabel}>\\n            {group.options.map((option, i) => (\\n              <FormSelectOption isDisabled={option.disabled} key={i} value={option.value} label={option.label} />\\n            ))}\\n          </FormSelectOptionGroup>\\n        ))}\\n      </FormSelect>\\n    );\\n  }\\n}\\n\")));\n}\nMDXContent.isMDXComponent = true;"}}},"pageContext":{"fileAbsolutePath":"/home/travis/build/patternfly/patternfly-org/packages/patternfly-4/_repos/react-core/src/components/FormSelect/FormSelect.md","fullscreen":true}}