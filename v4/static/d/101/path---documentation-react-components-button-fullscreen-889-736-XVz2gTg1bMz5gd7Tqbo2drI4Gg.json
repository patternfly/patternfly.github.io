{"data":{"mdx":{"rawBody":"---\ntitle: 'Button'\ncssPrefix: 'pf-c-button'\n---\n\n## Block Button\n\nimport { Button } from '@patternfly/react-core';\nimport { TimesIcon, PlusCircleIcon } from '@patternfly/react-icons';\n\n```js\nimport React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { TimesIcon, PlusCircleIcon } from '@patternfly/react-icons';\n\nBlockButton = () => <Button isBlock>Block level button</Button>;\n```\n\n## Button Variants\n```js\nimport React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { TimesIcon, PlusCircleIcon } from '@patternfly/react-icons';\n\nButtonVariants = () => (\n  <React.Fragment>\n    <Button variant=\"primary\">Primary</Button> <Button variant=\"secondary\">Secondary</Button>{' '}\n    <Button variant=\"tertiary\">Tertiary</Button> <Button variant=\"danger\">Danger</Button>{' '}\n    <Button variant=\"link\">\n      <PlusCircleIcon /> Link button\n    </Button>{' '}\n    <Button variant=\"plain\" aria-label=\"Action\">\n      <TimesIcon />\n    </Button>\n  </React.Fragment>\n);\n```\n\n## Link Button\n```js\nimport React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { TimesIcon, PlusCircleIcon } from '@patternfly/react-icons';\n\nLinkButton = () => (\n  <React.Fragment>\n    <Button component=\"a\" href=\"https://pf-next.com/\" target=\"_blank\" variant=\"primary\">\n      Link to Core Docs\n    </Button>{' '}\n    <Button component=\"a\" href=\"https://pf-next.com/\" target=\"_blank\" variant=\"secondary\">\n      Secondary Link to Core Docs\n    </Button>{' '}\n    <Button component=\"a\" isDisabled href=\"https://pf-next.com/\" target=\"_blank\" variant=\"tertiary\">\n      Tertiary Link to Core Docs\n    </Button>\n  </React.Fragment>\n);\n```\n","code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Button\",\n  \"cssPrefix\": \"pf-c-button\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"block-button\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#block-button\",\n    \"aria-label\": \"block button permalink\",\n    \"class\": \"anchor\"\n  }), mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Block Button\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { Button } from '@patternfly/react-core';\\nimport { TimesIcon, PlusCircleIcon } from '@patternfly/react-icons';\\n\\nBlockButton = () => <Button isBlock>Block level button</Button>;\\n\")), mdx(\"h2\", {\n    \"id\": \"button-variants\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#button-variants\",\n    \"aria-label\": \"button variants permalink\",\n    \"class\": \"anchor\"\n  }), mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Button Variants\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { Button } from '@patternfly/react-core';\\nimport { TimesIcon, PlusCircleIcon } from '@patternfly/react-icons';\\n\\nButtonVariants = () => (\\n  <React.Fragment>\\n    <Button variant=\\\"primary\\\">Primary</Button> <Button variant=\\\"secondary\\\">Secondary</Button>{' '}\\n    <Button variant=\\\"tertiary\\\">Tertiary</Button> <Button variant=\\\"danger\\\">Danger</Button>{' '}\\n    <Button variant=\\\"link\\\">\\n      <PlusCircleIcon /> Link button\\n    </Button>{' '}\\n    <Button variant=\\\"plain\\\" aria-label=\\\"Action\\\">\\n      <TimesIcon />\\n    </Button>\\n  </React.Fragment>\\n);\\n\")), mdx(\"h2\", {\n    \"id\": \"link-button\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#link-button\",\n    \"aria-label\": \"link button permalink\",\n    \"class\": \"anchor\"\n  }), mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Link Button\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react';\\nimport { Button } from '@patternfly/react-core';\\nimport { TimesIcon, PlusCircleIcon } from '@patternfly/react-icons';\\n\\nLinkButton = () => (\\n  <React.Fragment>\\n    <Button component=\\\"a\\\" href=\\\"https://pf-next.com/\\\" target=\\\"_blank\\\" variant=\\\"primary\\\">\\n      Link to Core Docs\\n    </Button>{' '}\\n    <Button component=\\\"a\\\" href=\\\"https://pf-next.com/\\\" target=\\\"_blank\\\" variant=\\\"secondary\\\">\\n      Secondary Link to Core Docs\\n    </Button>{' '}\\n    <Button component=\\\"a\\\" isDisabled href=\\\"https://pf-next.com/\\\" target=\\\"_blank\\\" variant=\\\"tertiary\\\">\\n      Tertiary Link to Core Docs\\n    </Button>\\n  </React.Fragment>\\n);\\n\")));\n}\nMDXContent.isMDXComponent = true;"}}},"pageContext":{"fileAbsolutePath":"/home/travis/build/patternfly/patternfly-org/packages/patternfly-4/_repos/react-core/src/components/Button/Button.md","fullscreen":true}}